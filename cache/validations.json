{
  "version": "3.2",
  "log": [
    {
      "GnosisSafe": {
        "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:19",
        "version": {
          "withMetadata": "5bf5fca9c2200523da52d1a5a25c79bbbbe65d85ba6c17260910f952feb77ecf",
          "withoutMetadata": "b0dafd629c7d73386b769d413f1b7e5b04ef16c873c373fddae6ff731dc119fa",
          "linkedWithoutMetadata": "b0dafd629c7d73386b769d413f1b7e5b04ef16c873c373fddae6ff731dc119fa"
        },
        "inherit": [
          "GuardManager",
          "StorageAccessible",
          "FallbackManager",
          "ISignatureValidatorConstants",
          "SecuredTokenTransfer",
          "SignatureDecoder",
          "OwnerManager",
          "ModuleManager",
          "Executor",
          "SelfAuthorized",
          "Singleton",
          "EtherPaymentFallback"
        ],
        "libraries": [
          "GnosisSafeMath"
        ],
        "methods": [
          "()",
          "setup(address[],uint256,address,bytes,address,address,uint256,address payable)",
          "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes)",
          "checkSignatures(bytes32,bytes,bytes)",
          "checkNSignatures(bytes32,bytes,bytes,uint256)",
          "requiredTxGas(address,uint256,bytes,uint8)",
          "approveHash(bytes32)",
          "getChainId()",
          "domainSeparator()",
          "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)",
          "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafe",
            "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:59"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            },
            {
              "label": "owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            },
            {
              "label": "nonce",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:51"
            },
            {
              "label": "_deprecatedDomainSeparator",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes32",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:52"
            },
            {
              "label": "signedMessages",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:54"
            },
            {
              "label": "approvedHashes",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
              "label": "mapping(address => mapping(bytes32 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Executor": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/Executor.sol:7",
        "version": {
          "withMetadata": "48619bf387511c5a10b45ee94807128680593ef546d04f01a27eabf49556c7fd",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FallbackManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/FallbackManager.sol:8",
        "version": {
          "withMetadata": "dc2e82ceb477aaedb214fa9fa713475cf985ee3fb52807485e8ffb5a136baebf",
          "withoutMetadata": "69f3af1e7187f01e1814bbf1bb39db08a4ec97d96ed0fd50031fc06be9727d00",
          "linkedWithoutMetadata": "69f3af1e7187f01e1814bbf1bb39db08a4ec97d96ed0fd50031fc06be9727d00"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setFallbackHandler(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Guard": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GuardManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:27",
        "version": {
          "withMetadata": "33f926cafe41259dcea04aaf38b9d648588b9c3c637f28568f169decdf5a90b3",
          "withoutMetadata": "0a932d5475d91581a9fef336ea4a1e989b74f706b6caf1cc54201540170dc099",
          "linkedWithoutMetadata": "0a932d5475d91581a9fef336ea4a1e989b74f706b6caf1cc54201540170dc099"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setGuard(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ModuleManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:10",
        "version": {
          "withMetadata": "ff1679fefde03297bd1da3ffbc1236e691f5e83cc5a1402035baec922e669e8d",
          "withoutMetadata": "62fea39f8e4489b1904c18ff2d73a421d08acbedb8a365fbfd6491fcc830c9f2",
          "linkedWithoutMetadata": "62fea39f8e4489b1904c18ff2d73a421d08acbedb8a365fbfd6491fcc830c9f2"
        },
        "inherit": [
          "Executor",
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "modules",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "OwnerManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:8",
        "version": {
          "withMetadata": "1d81ca17a9fcfa25ce9339ce2680655269fb902d62272bbbfb3734abc2eb18ca",
          "withoutMetadata": "79fecfeb20f4939a246b45855d3281a3ec54ae9e3cbd6d7c32b51fd008eb6995",
          "linkedWithoutMetadata": "79fecfeb20f4939a246b45855d3281a3ec54ae9e3cbd6d7c32b51fd008eb6995"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "addOwnerWithThreshold(address,uint256)",
          "removeOwner(address,address,uint256)",
          "swapOwner(address,address,address)",
          "changeThreshold(uint256)",
          "getThreshold()",
          "isOwner(address)",
          "getOwners()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owners",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Enum": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Enum.sol:6",
        "version": {
          "withMetadata": "fa710b28020d20e4d963110f65c100a0c3da47d9fc1e1731c23b1799b1d4c1fb",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EtherPaymentFallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/EtherPaymentFallback.sol:6",
        "version": {
          "withMetadata": "187ba1ab7509d8a8a41148e5346c4676a97ef3d8aa071ba4bf4e8d3d702d2a82",
          "withoutMetadata": "2df5b0a6e815736a589f0331577b6d497e1b407aaa2113a81067671b40e55a4b",
          "linkedWithoutMetadata": "2df5b0a6e815736a589f0331577b6d497e1b407aaa2113a81067671b40e55a4b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SecuredTokenTransfer": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SecuredTokenTransfer.sol:6",
        "version": {
          "withMetadata": "c4a369d358aa1c59074eeb091afd702a8d7279190a5bc1fd805850d6fdff6410",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfAuthorized": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol:6",
        "version": {
          "withMetadata": "b276ff9268a1ccf410bee71fafff8878d987844fecc7d0a7fb7c8788c63eb96d",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureDecoder": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SignatureDecoder.sol:6",
        "version": {
          "withMetadata": "d4004664ae4ec477c1a4cae24dbf247fa9ec109cdaf9a0146c3721cc8f2b42b6",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Singleton": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:7",
        "version": {
          "withMetadata": "a741b85f7f5542acf60e6428bc627b238303a051fd1480b1237fbd25c2770440",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageAccessible": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/StorageAccessible.sol:6",
        "version": {
          "withMetadata": "063b2726c4c93e31ec6088b838689586ea1d616d59a03b7a46a4cf0a75119694",
          "withoutMetadata": "e3cefdf9f2f60bc1238dfe2249e501fdbc52930b5866c7829ce07a7b370ccae9",
          "linkedWithoutMetadata": "e3cefdf9f2f60bc1238dfe2249e501fdbc52930b5866c7829ce07a7b370ccae9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getStorageAt(uint256,uint256)",
          "simulateAndRevert(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeMath": {
        "src": "@gnosis.pm/safe-contracts/contracts/external/GnosisSafeMath.sol:10",
        "version": {
          "withMetadata": "8613af15c62060eda9d711eb50192cf0dc17f5c0059409395b9646f0fa8045fc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISignatureValidator": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:9",
        "inherit": [
          "ISignatureValidatorConstants"
        ],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISignatureValidatorConstants": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:4",
        "version": {
          "withMetadata": "da269993427b7502b85b990935687b77da03ef51e6fb492dd50f74b1f687b657",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:13",
        "version": {
          "withMetadata": "4403647dcbde7449432007f15728744e2691e4b245342cfb676827d2eea3141b",
          "withoutMetadata": "3cb953a9f4cf894eadc4bcfa5dfe2e06c70518a0a27283970fd270c253168eb0",
          "linkedWithoutMetadata": "3cb953a9f4cf894eadc4bcfa5dfe2e06c70518a0a27283970fd270c253168eb0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafeProxy",
            "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "GnosisSafeProxy",
              "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "masterCopy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeProxyFactory": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxyFactory.sol:9",
        "version": {
          "withMetadata": "dade3c6a8192a11725263d527b917a33a210e656185fc9e8ad8ea617359a2b52",
          "withoutMetadata": "1ce43b946dcd7ba295e1269263fd1b6868ab93a8b7b5ca5fc015045d5aa9229f",
          "linkedWithoutMetadata": "1ce43b946dcd7ba295e1269263fd1b6868ab93a8b7b5ca5fc015045d5aa9229f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProxy(address,bytes)",
          "proxyRuntimeCode()",
          "proxyCreationCode()",
          "createProxyWithNonce(address,bytes,uint256)",
          "createProxyWithCallback(address,bytes,uint256,address)",
          "calculateCreateProxyWithNonceAddress(address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IProxyCreationCallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Modifier": {
        "src": "@gnosis.pm/zodiac/contracts/core/Modifier.sol:9",
        "inherit": [
          "IAvatar",
          "Module",
          "Guardable",
          "FactoryFriendly",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "disableModule(address,address)",
          "enableModule(address)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "avatar",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:12"
            },
            {
              "label": "target",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:14"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Modifier",
              "src": "@gnosis.pm/zodiac/contracts/core/Modifier.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Module": {
        "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:10",
        "inherit": [
          "Guardable",
          "FactoryFriendly",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setAvatar(address)",
          "setTarget(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "avatar",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:12"
            },
            {
              "label": "target",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FactoryFriendly": {
        "src": "@gnosis.pm/zodiac/contracts/factory/FactoryFriendly.sol:8",
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setUp(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseGuard": {
        "src": "@gnosis.pm/zodiac/contracts/guard/BaseGuard.sol:8",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Guardable": {
        "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:9",
        "version": {
          "withMetadata": "8729c389f8175a94eeb27a597c20f2db4d8f6e46d1cba977ea1ac2254b833a49",
          "withoutMetadata": "bf19dd5c52ee40424bf5e1b4367dc2f2fb49a84d7aa19039b850b5d6df6b1047",
          "linkedWithoutMetadata": "bf19dd5c52ee40424bf5e1b4367dc2f2fb49a84d7aa19039b850b5d6df6b1047"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setGuard(address)",
          "getGuard()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAvatar": {
        "src": "@gnosis.pm/zodiac/contracts/interfaces/IAvatar.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IGuard": {
        "src": "@gnosis.pm/zodiac/contracts/interfaces/IGuard.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3425_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TimelockControllerUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:27",
        "version": {
          "withMetadata": "93c2ecaae320d6300899f2a7b35c84e2fd2be0c7a82f11d199e592dc9e3d4ef4",
          "withoutMetadata": "2090350735f5c3bdb96f361d12957eb370c051f858ba1a6c1ff335f5c6190f0a",
          "linkedWithoutMetadata": "2090350735f5c3bdb96f361d12957eb370c051f858ba1a6c1ff335f5c6190f0a"
        },
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "supportsInterface(bytes4)",
          "isOperation(bytes32)",
          "isOperationPending(bytes32)",
          "isOperationReady(bytes32)",
          "isOperationDone(bytes32)",
          "getTimestamp(bytes32)",
          "getMinDelay()",
          "hashOperation(address,uint256,bytes,bytes32,bytes32)",
          "hashOperationBatch(address[],uint256[],bytes[],bytes32,bytes32)",
          "schedule(address,uint256,bytes,bytes32,bytes32,uint256)",
          "scheduleBatch(address[],uint256[],bytes[],bytes32,bytes32,uint256)",
          "cancel(bytes32)",
          "execute(address,uint256,bytes,bytes32,bytes32)",
          "executeBatch(address[],uint256[],bytes[],bytes32,bytes32)",
          "updateDelay(uint256)",
          "onERC721Received(address,address,uint256,bytes)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            },
            {
              "label": "_timestamps",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:34"
            },
            {
              "label": "_minDelay",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)48_storage",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:432"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3425_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IVotesUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getVotes(address)",
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "delegates(address)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "2a068734c026ac0588f9ecc3dad9aaffe9e15f5b44f41cb1b66055a8d20f392b",
          "withoutMetadata": "db1447c1afc82e7549d7f5fcd89add5143ffedea7ff0db3414fed90bf71ab239",
          "linkedWithoutMetadata": "db1447c1afc82e7549d7f5fcd89add5143ffedea7ff0db3414fed90bf71ab239"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20PermitUpgradeable": {
        "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:26",
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_address,t_struct(Counter)8000_storage)",
              "contract": "ERC20PermitUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:34"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "154",
              "type": "t_bytes32",
              "contract": "ERC20PermitUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:48",
              "renamedFrom": "_PERMIT_TYPEHASH"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC20PermitUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:138"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8000_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8000_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "f3bd1e4c7055c6575de5ded808829466f0558d27e32e529e89917004f9aed13d",
          "withoutMetadata": "061200bd9dab026742a91776a60ba53f7b6fd77ca1dab5f3d5826076bbfe96ed",
          "linkedWithoutMetadata": "061200bd9dab026742a91776a60ba53f7b6fd77ca1dab5f3d5826076bbfe96ed"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "b5e74e742bd4099c3ffcf7a96f2e718dbabfa19e72c3ca918ef83a7b26e51896",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:14",
        "version": {
          "withMetadata": "d7f80c247b6067cb172fd438e3f56990cc1ba886b39f426f5fcfade17ebc5f10",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "0db289179bd2697c54666413d56c72d7f752a1390311967e1368178ddcc6e4fc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "06a29fa468bce0c29e43a6e340cb8e0405e1af5aa98df2a0bd80568af54e15db",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/TimersUpgradeable.sol:9",
        "version": {
          "withMetadata": "8632367d465fd1a01c5104adfad8dfcded0f7b4844149bfeb3b11c3a640948c9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSAUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:14",
        "version": {
          "withMetadata": "a381b837b765d9b6704f87be559122e8700adefdeb7fb6e0d6e0cd09a820060e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EIP712Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "bfc458ad95b2ded7f4fb45a552dbb4ffa4b0136d124bb85bab880e8b7a6cba9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeCastUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol:21",
        "version": {
          "withMetadata": "c4d4f198b1bfc3e1ff27c9f490fa121b1b702219205648bb6e189334edeee8c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DoubleEndedQueueUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/DoubleEndedQueueUpgradeable.sol:21",
        "version": {
          "withMetadata": "3e17a9a1b09a12dcc411eeb255d96b0bf8f669929c7d2612ab544423532d8a2b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeCastUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "389f3bbb054d84723e25e07db563153cc56483f01e3348915d6a1ad61be48c00",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "44cc06288b20e467bcf8fd3ee273df3ac16b5dcefa8244020f901056346834d5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IGnosisSafe": {
        "src": "contracts/avatars/gnosisSafe/IGnosisSafe.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "getOwners()",
          "isOwner(address)",
          "getThreshold()",
          "getModulesPaginated(address,uint256)",
          "isModuleEnabled(address)",
          "setGuard(address)",
          "disableModule(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DSAuth": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:30",
        "version": {
          "withMetadata": "cf2abe74988e1b3dd1a75233792047a8c0c604779be6a9908a3db338d80dcdcf",
          "withoutMetadata": "7b102b6bd996ead1073c8438bb1716546d03e848703d4fda4c88910439821be9",
          "linkedWithoutMetadata": "7b102b6bd996ead1073c8438bb1716546d03e848703d4fda4c88910439821be9"
        },
        "inherit": [
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setOwner(address)",
          "owner()",
          "setAuthority(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DSAuth",
            "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DSAuthEvents": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:25",
        "version": {
          "withMetadata": "adb911002af224db5b930ee15b40d6c6c7ac376e2c437b4fe4640d8aa05e7fbd",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DSAuthority": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "canCall(address,address,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DSRoles": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:22",
        "inherit": [
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "getUserRoles(address)",
          "getCapabilityRoles(address,bytes4)",
          "isUserRoot(address)",
          "isCapabilityPublic(address,bytes4)",
          "hasUserRole(address,uint8)",
          "canCall(address,address,bytes4)",
          "setRootUser(address,bool)",
          "setUserRole(address,uint8,bool)",
          "setPublicCapability(address,bytes4,bool)",
          "setRoleCapability(uint8,address,bytes4,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IPermissionRegistry": {
        "src": "contracts/avatars/permissionReg/IPermissionRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "canCall(address,address,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "permissionRegistry": {
        "src": "contracts/avatars/permissionReg/permissionRegistry.sol:6",
        "version": {
          "withMetadata": "1acb4e3ad6d54a0347b2904e2002463bc49e769b59cd7ca55c9b9c6e814cc161",
          "withoutMetadata": "1acb4e3ad6d54a0347b2904e2002463bc49e769b59cd7ca55c9b9c6e814cc161",
          "linkedWithoutMetadata": "1acb4e3ad6d54a0347b2904e2002463bc49e769b59cd7ca55c9b9c6e814cc161"
        },
        "inherit": [
          "permissionRegistryBase",
          "springAvatar",
          "permissionRegHandler",
          "ERC721BurnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "DSRoles",
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "permissionRegistry",
            "src": "contracts/avatars/permissionReg/permissionRegistry.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "157",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "idTicker",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "210",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:15"
            },
            {
              "label": "tokenIDs",
              "offset": 0,
              "slot": "211",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "permissionRegistryBase": {
        "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:9",
        "version": {
          "withMetadata": "7274a0e7a996a0e156d12c133e453c3489bbf13fb4750e6f1d1b4ed628a0eda1",
          "withoutMetadata": "e4f43219d22d7d1851dbb342450e257035447d098face85c7b638b47318fa219",
          "linkedWithoutMetadata": "e4f43219d22d7d1851dbb342450e257035447d098face85c7b638b47318fa219"
        },
        "inherit": [
          "springAvatar",
          "permissionRegHandler",
          "ERC721BurnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "DSRoles",
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "setLink(uint8,string)",
          "getNFT(address,uint8)",
          "getTokenID(address,uint8)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "idTicker",
            "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "157",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "idTicker",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "210",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:15"
            },
            {
              "label": "tokenIDs",
              "offset": 0,
              "slot": "211",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "permissionRegistryLogic": {
        "src": "contracts/avatars/permissionReg/permissionRegistryLogic.sol:7",
        "version": {
          "withMetadata": "c801df122b5f18a6e9814409bafe3f4b090e45f1e1a4a6c734a5aa95c51e5562",
          "withoutMetadata": "e755622e3e290e8ab17363019dd9977f6c31b25d03b94656e7b98aa632773e4e",
          "linkedWithoutMetadata": "e755622e3e290e8ab17363019dd9977f6c31b25d03b94656e7b98aa632773e4e"
        },
        "inherit": [
          "permissionRegistryBase",
          "springAvatar",
          "permissionRegHandler",
          "ERC721BurnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "logicBase",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "DSRoles",
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "permissionRegistryLogic",
            "src": "contracts/avatars/permissionReg/permissionRegistryLogic.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "157",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "158",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "257",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "258",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "259",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "260",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "261",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "262",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "263",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "307",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "357",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "358",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "idTicker",
              "offset": 0,
              "slot": "359",
              "type": "t_uint256",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "360",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:15"
            },
            {
              "label": "tokenIDs",
              "offset": 0,
              "slot": "361",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "wrapperFactory": {
        "src": "contracts/avatars/wrapperFactory/wrapperFactory.sol:6",
        "version": {
          "withMetadata": "ab72c29815e9016dfbf112711b3a99db4994dedf5cb7e3f78392d47ed56d37cb",
          "withoutMetadata": "ab72c29815e9016dfbf112711b3a99db4994dedf5cb7e3f78392d47ed56d37cb",
          "linkedWithoutMetadata": "ab72c29815e9016dfbf112711b3a99db4994dedf5cb7e3f78392d47ed56d37cb"
        },
        "inherit": [
          "wrapperFactoryBase",
          "springAvatar",
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "wrapperFactory",
            "src": "contracts/avatars/wrapperFactory/wrapperFactory.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:19"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:21"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:22"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "wrapperFactoryBase": {
        "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:14",
        "version": {
          "withMetadata": "bb4c15c3bf35f920b89be79c230162aaa83f3fe46fc8e7e29b917ac00e150d3b",
          "withoutMetadata": "e53e860455a9e363019146fc851f14165168f3859739e2ba4716c7d7ef17327e",
          "linkedWithoutMetadata": "e53e860455a9e363019146fc851f14165168f3859739e2ba4716c7d7ef17327e"
        },
        "inherit": [
          "springAvatar",
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "createSafeWrapperWithBudget(address,address,uint256,uint256,address,uint256,address[],uint8,string,string)",
          "delegateSetup(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "EMPTY_DATA",
            "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:19"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:21"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:22"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "wrapperFactoryLogic": {
        "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:7",
        "version": {
          "withMetadata": "0af9ee17785d2ba5af265f4f7a2aa6de0a2e574352c3c6489be2a3522e62aa62",
          "withoutMetadata": "aa32393416fc2c6c19844b36afbe2a2584a79f8bfc377f7b1f36a40af8de4e36",
          "linkedWithoutMetadata": "aa32393416fc2c6c19844b36afbe2a2584a79f8bfc377f7b1f36a40af8de4e36"
        },
        "inherit": [
          "wrapperFactoryBase",
          "springAvatar",
          "permissionRegHandler",
          "logicBase",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "wrapperFactoryLogic",
            "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "202",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "203",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:19"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "204",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "205",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:21"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "206",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:22"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "permissionRegHandler": {
        "src": "contracts/core/permissionRegHandler.sol:5",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "settingsModuleHandler": {
        "src": "contracts/core/settingsModuleHandler.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springAvatar": {
        "src": "contracts/core/springAvatar.sol:14",
        "inherit": [
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "setPermissionReg(address)",
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springModifier": {
        "src": "contracts/core/springModifier.sol:10",
        "inherit": [
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "setPermissionReg(address)",
          "enableModification(address,address)",
          "enableSettingsModule(address)",
          "disableSettingsModule(address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springModule": {
        "src": "contracts/core/springModule.sol:17",
        "inherit": [
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setPermissionReg(address)",
          "enableAvatar(address)",
          "disableAvatar(address,address)",
          "isAvatarEnabled(address)",
          "getAvatarsPaginated(address,uint256)",
          "setTarget(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "dummyAvatar": {
        "src": "contracts/mockContracts/dummyAvatar.sol:7",
        "version": {
          "withMetadata": "faabfae7854473e11ed72e64aad3c64089ac2aba79b690285e5921b9cf8e0c89",
          "withoutMetadata": "5d989797c862827700799041ceec506e049948ad41dffa88616256eb9db922e2",
          "linkedWithoutMetadata": "5d989797c862827700799041ceec506e049948ad41dffa88616256eb9db922e2"
        },
        "inherit": [
          "Executor"
        ],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "setSuccess(bool)",
          "getSuccess()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "testSuccessful",
            "src": "contracts/mockContracts/dummyAvatar.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "testSuccessful",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "dummyAvatar",
              "src": "contracts/mockContracts/dummyAvatar.sol:8"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "dummyBridge": {
        "src": "contracts/mockContracts/dummyBridge.sol:7",
        "version": {
          "withMetadata": "07ed4a37c7aab5e8926579c139832f6b6f641056012353a7021e7d5ea4d7d65a",
          "withoutMetadata": "aaec889a9e6a3220f4ad22d0025f8f4b59f8d4e4ac9b90c6b6dc835f937f748b",
          "linkedWithoutMetadata": "aaec889a9e6a3220f4ad22d0025f8f4b59f8d4e4ac9b90c6b6dc835f937f748b"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "requireToPassMessage(address payable,bytes,uint256)",
          "messageSender()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "dummyModule": {
        "src": "contracts/mockContracts/dummyModule.sol:14",
        "version": {
          "withMetadata": "5e9d920d986b187c0c3352632d8ede86ce45088bd25b6da071a1a9b1be674446",
          "withoutMetadata": "4a94de758be6169fc45937395961394774b308f0d336a3f734683a2f726ff708",
          "linkedWithoutMetadata": "4a94de758be6169fc45937395961394774b308f0d336a3f734683a2f726ff708"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exec(address,uint256,bytes,address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "budgetModifier": {
        "src": "contracts/modifiers/budgetModifier.sol:6",
        "version": {
          "withMetadata": "1413f3efc90d1cc6756798b7029bd3bd8f581f68030cd79cda15819134b66f35",
          "withoutMetadata": "1413f3efc90d1cc6756798b7029bd3bd8f581f68030cd79cda15819134b66f35",
          "linkedWithoutMetadata": "1413f3efc90d1cc6756798b7029bd3bd8f581f68030cd79cda15819134b66f35"
        },
        "inherit": [
          "budgetModifierBase",
          "springModifier",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "budgetModifier",
            "src": "contracts/modifiers/budgetModifier.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            },
            {
              "label": "budgets",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_struct(budget)15370_storage)",
              "contract": "budgetModifierBase",
              "src": "contracts/modifiers/budgetModifierBase.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(budget)15370_storage)": {
              "label": "mapping(address => struct budgetModifierBase.budget)",
              "numberOfBytes": "32"
            },
            "t_struct(budget)15370_storage": {
              "label": "struct budgetModifierBase.budget",
              "members": [
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastReset",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "frozen",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "budgetModifierBase": {
        "src": "contracts/modifiers/budgetModifierBase.sol:9",
        "version": {
          "withMetadata": "7e72563e6793ca684b0d36204d2d48decfd035bc3fad4751ff701ce77431e741",
          "withoutMetadata": "927ee70732fdcdcfd5785bf513c94fa47c5095a6c0808cd34518eaa5b442a93a",
          "linkedWithoutMetadata": "927ee70732fdcdcfd5785bf513c94fa47c5095a6c0808cd34518eaa5b442a93a"
        },
        "inherit": [
          "springModifier",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "setBudget(address,uint256,uint256)",
          "getBudget(address)",
          "setFreeze(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            },
            {
              "label": "budgets",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_struct(budget)15370_storage)",
              "contract": "budgetModifierBase",
              "src": "contracts/modifiers/budgetModifierBase.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(budget)15370_storage)": {
              "label": "mapping(address => struct budgetModifierBase.budget)",
              "numberOfBytes": "32"
            },
            "t_struct(budget)15370_storage": {
              "label": "struct budgetModifierBase.budget",
              "members": [
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastReset",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "frozen",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "budgetModifierLogic": {
        "src": "contracts/modifiers/budgetModifierLogic.sol:7",
        "version": {
          "withMetadata": "4c7e3057b1f7796cf97a8ca9d541c2ffa59523e40ff19c85d322c9b1f40657b8",
          "withoutMetadata": "4308920101379d17d4481c06f5de3b4532fe04ef9c6f3ddb786bf5b4d8c24a08",
          "linkedWithoutMetadata": "4308920101379d17d4481c06f5de3b4532fe04ef9c6f3ddb786bf5b4d8c24a08"
        },
        "inherit": [
          "logicBase",
          "budgetModifierBase",
          "springModifier",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "budgetModifierLogic",
            "src": "contracts/modifiers/budgetModifierLogic.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "203",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "206",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "207",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            },
            {
              "label": "budgets",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_struct(budget)15370_storage)",
              "contract": "budgetModifierBase",
              "src": "contracts/modifiers/budgetModifierBase.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(budget)15370_storage)": {
              "label": "mapping(address => struct budgetModifierBase.budget)",
              "numberOfBytes": "32"
            },
            "t_struct(budget)15370_storage": {
              "label": "struct budgetModifierBase.budget",
              "members": [
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastReset",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "frozen",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20VotesUpgradeable": {
        "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:29",
        "inherit": [
          "ERC20PermitUpgradeable",
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "IVotesUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeCastUpgradeable",
          "MathUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "checkpoints(address,uint32)",
          "numCheckpoints(address)",
          "delegates(address)",
          "getVotes(address)",
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_address,t_struct(Counter)8000_storage)",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "154",
              "type": "t_bytes32",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
              "renamedFrom": "_PERMIT_TYPEHASH"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:46"
            },
            {
              "label": "_checkpoints",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)15877_storage)dyn_storage)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:47"
            },
            {
              "label": "_totalSupplyCheckpoints",
              "offset": 0,
              "slot": "206",
              "type": "t_array(t_struct(Checkpoint)15877_storage)dyn_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:48"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:323"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Checkpoint)15877_storage)dyn_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Checkpoint)15877_storage)dyn_storage)": {
              "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8000_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)15877_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint224",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8000_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint224": {
              "label": "uint224",
              "numberOfBytes": "28"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovToken": {
        "src": "contracts/modules/GovernorV2/GovToken.sol:15",
        "version": {
          "withMetadata": "7a016fe5d9a3fe797daafe03d7ce47611b74d5f4f1d202ed034dac9e90e4c2ef",
          "withoutMetadata": "da9e7fc022431939edd904b25bb898f21c737f2989a8f385751ebc0c5c442f1a",
          "linkedWithoutMetadata": "da9e7fc022431939edd904b25bb898f21c737f2989a8f385751ebc0c5c442f1a"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "OwnableUpgradeable",
          "ERC20VotesUpgradeable",
          "ERC20PermitUpgradeable",
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "IVotesUpgradeable",
          "springAvatar",
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string)",
          "transferFrom(address,address,uint256)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "lockVotes(address,uint256,uint256)",
          "freeVotes(address,uint256,uint256)",
          "getLockedVotes(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "54",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "56",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "103",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_address,t_struct(Counter)8000_storage)",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "155",
              "type": "t_bytes32",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
              "renamedFrom": "_PERMIT_TYPEHASH"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "156",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:46"
            },
            {
              "label": "_checkpoints",
              "offset": 0,
              "slot": "206",
              "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)15877_storage)dyn_storage)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:47"
            },
            {
              "label": "_totalSupplyCheckpoints",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_struct(Checkpoint)15877_storage)dyn_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:48"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "208",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:323"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "255",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "355",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "lockedVotes",
              "offset": 0,
              "slot": "405",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GovToken",
              "src": "contracts/modules/GovernorV2/GovToken.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Checkpoint)15877_storage)dyn_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Checkpoint)15877_storage)dyn_storage)": {
              "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8000_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)15877_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint224",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8000_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint224": {
              "label": "uint224",
              "numberOfBytes": "28"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorCoreV2": {
        "src": "contracts/modules/GovernorV2/GovernorCoreV2.sol:15",
        "version": {
          "withMetadata": "dee96642845b73df93796d786f5e06c0556a2303f4ba567132ae0fb529e35596",
          "withoutMetadata": "a29630ef74df2d4811a064ba10e5f03b9a97009b4416feefdac7110dd15ef847",
          "linkedWithoutMetadata": "a29630ef74df2d4811a064ba10e5f03b9a97009b4416feefdac7110dd15ef847"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "GovernorTimelockControlUpgradeable",
          "GovernorVotesQuorumFractionUpgradeable",
          "GovernorVotes",
          "GovernorCountingSimpleUpgradeable",
          "GovernorSettingsUpgradeable",
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorTimelockUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address,address,uint256,uint256)",
          "votingDelay()",
          "votingPeriod()",
          "quorum(uint256)",
          "state(uint256)",
          "propose(address[],uint256[],bytes[],string,uint256)",
          "proposalThreshold()",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorTimelockUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "253",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18200_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "255",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "257",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "_votingDelay",
              "offset": 0,
              "slot": "303",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:18"
            },
            {
              "label": "_votingPeriod",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:19"
            },
            {
              "label": "_proposalThreshold",
              "offset": 0,
              "slot": "305",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "306",
              "type": "t_array(t_uint256)47_storage",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:160"
            },
            {
              "label": "minStake",
              "offset": 0,
              "slot": "353",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:18"
            },
            {
              "label": "maxStake",
              "offset": 0,
              "slot": "354",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:19"
            },
            {
              "label": "_proposalVotes",
              "offset": 0,
              "slot": "355",
              "type": "t_mapping(t_uint256,t_struct(ProposalVote)17167_storage)",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:59"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "356",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:241"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "405",
              "type": "t_contract(GovToken)16814",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "406",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:78"
            },
            {
              "label": "_quorumNumerator",
              "offset": 0,
              "slot": "456",
              "type": "t_uint256",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "457",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:124"
            },
            {
              "label": "_timelock",
              "offset": 0,
              "slot": "506",
              "type": "t_contract(TimelockControllerUpgradeable)4870",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:32"
            },
            {
              "label": "_timelockIds",
              "offset": 0,
              "slot": "507",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "508",
              "type": "t_array(t_uint256)48_storage",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:243"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "556",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "606",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GovToken)16814": {
              "label": "contract GovToken",
              "numberOfBytes": "20"
            },
            "t_contract(TimelockControllerUpgradeable)4870": {
              "label": "contract TimelockControllerUpgradeable",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18200_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalVote)17167_storage)": {
              "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18200_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(ProposalVote)17167_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
              "members": [
                {
                  "label": "againstVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "forVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "abstainVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "proposerStake",
                  "type": "t_struct(Stake)17150_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "objectorStake",
                  "type": "t_struct(Stake)17150_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "hasVoted",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(Stake)17150_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.Stake",
              "members": [
                {
                  "label": "staker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorCountingSimpleUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:14",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "COUNTING_MODE()",
          "hasVoted(uint256,address)",
          "proposalVotes(uint256)",
          "noObjections(uint256)",
          "getProposer(uint256)",
          "getObjector(uint256)",
          "proposalThreshold()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18200_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "minStake",
              "offset": 0,
              "slot": "253",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:18"
            },
            {
              "label": "maxStake",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:19"
            },
            {
              "label": "_proposalVotes",
              "offset": 0,
              "slot": "255",
              "type": "t_mapping(t_uint256,t_struct(ProposalVote)17167_storage)",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:59"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:241"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18200_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalVote)17167_storage)": {
              "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18200_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(ProposalVote)17167_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
              "members": [
                {
                  "label": "againstVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "forVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "abstainVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "proposerStake",
                  "type": "t_struct(Stake)17150_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "objectorStake",
                  "type": "t_struct(Stake)17150_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "hasVoted",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(Stake)17150_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.Stake",
              "members": [
                {
                  "label": "staker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorSettingsUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:14",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "votingDelay()",
          "votingPeriod()",
          "proposalThreshold()",
          "setVotingDelay(uint256)",
          "setVotingPeriod(uint256)",
          "setProposalThreshold(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18200_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "_votingDelay",
              "offset": 0,
              "slot": "253",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:18"
            },
            {
              "label": "_votingPeriod",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:19"
            },
            {
              "label": "_proposalThreshold",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)47_storage",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:160"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18200_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18200_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorTimelockControlUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:27",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorTimelockUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "state(uint256)",
          "timelock()",
          "proposalEta(uint256)",
          "queue(address[],uint256[],bytes[],bytes32)",
          "updateTimelock(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorTimelockUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "253",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18200_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "255",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "257",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "_timelock",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(TimelockControllerUpgradeable)4870",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:32"
            },
            {
              "label": "_timelockIds",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)48_storage",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:243"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(TimelockControllerUpgradeable)4870": {
              "label": "contract TimelockControllerUpgradeable",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18200_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18200_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:32",
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "DoubleEndedQueueUpgradeable",
          "SafeCastUpgradeable",
          "TimersUpgradeable",
          "MathUpgradeable",
          "AddressUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "()",
          "supportsInterface(bytes4)",
          "name()",
          "version()",
          "hashProposal(address[],uint256[],bytes[],bytes32)",
          "state(uint256)",
          "proposalSnapshot(uint256)",
          "proposalDeadline(uint256)",
          "proposalThreshold()",
          "noObjections(uint256)",
          "object(uint256,uint256,string,bytes)",
          "propose(address[],uint256[],bytes[],string,uint256)",
          "execute(address[],uint256[],bytes[],bytes32)",
          "retrieveStake(uint256)",
          "getVotes(address,uint256)",
          "getVotesWithParams(address,uint256,bytes)",
          "castVote(uint256,uint8,uint256)",
          "castVoteWithReason(uint256,uint8,uint256,string)",
          "castVoteWithReasonAndParams(uint256,uint8,uint256,string,bytes)",
          "castVoteBySig(uint256,uint8,uint256,uint8,bytes32,bytes32)",
          "castVoteWithReasonAndParamsBySig(uint256,uint8,uint256,string,bytes,uint8,bytes32,bytes32)",
          "getProposer(uint256)",
          "getObjector(uint256)",
          "relay(address,uint256,bytes)",
          "onERC721Received(address,address,uint256,bytes)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18200_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18200_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18200_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorVotes": {
        "src": "contracts/modules/GovernorV2/GovernorVotes.sol:17",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18200_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "253",
              "type": "t_contract(GovToken)16814",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "254",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:78"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GovToken)16814": {
              "label": "contract GovToken",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18200_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18200_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorVotesQuorumFractionUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:17",
        "inherit": [
          "GovernorVotes",
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "quorumNumerator()",
          "quorumDenominator()",
          "quorum(uint256)",
          "updateQuorumNumerator(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18200_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "253",
              "type": "t_contract(GovToken)16814",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "254",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:78"
            },
            {
              "label": "_quorumNumerator",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:124"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GovToken)16814": {
              "label": "contract GovToken",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18200_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18200_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGovernorTimelockUpgradeable": {
        "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:14",
        "inherit": [
          "IGovernorUpgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "timelock()",
          "proposalEta(uint256)",
          "queue(address[],uint256[],bytes[],bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorTimelockUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGovernorUpgradeable": {
        "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:14",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "version()",
          "COUNTING_MODE()",
          "hashProposal(address[],uint256[],bytes[],bytes32)",
          "state(uint256)",
          "proposalSnapshot(uint256)",
          "proposalDeadline(uint256)",
          "votingDelay()",
          "votingPeriod()",
          "quorum(uint256)",
          "getVotes(address,uint256)",
          "getVotesWithParams(address,uint256,bytes)",
          "hasVoted(uint256,address)",
          "propose(address[],uint256[],bytes[],string,uint256)",
          "execute(address[],uint256[],bytes[],bytes32)",
          "castVote(uint256,uint8,uint256)",
          "castVoteWithReason(uint256,uint8,uint256,string)",
          "castVoteWithReasonAndParams(uint256,uint8,uint256,string,bytes)",
          "castVoteBySig(uint256,uint8,uint256,uint8,bytes32,bytes32)",
          "castVoteWithReasonAndParamsBySig(uint256,uint8,uint256,string,bytes,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IVotes": {
        "src": "contracts/modules/GovernorV2/IVotes.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "useVotes(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimeLockModuleV2": {
        "src": "contracts/modules/GovernorV2/TimeLockModuleV2.sol:6",
        "version": {
          "withMetadata": "0900f001d1b4258e4f9f09db2853aaf4b285473751e76fc13f97f34704f1f32e",
          "withoutMetadata": "78f7ee762c1189049a4b8afc7c11072f258a1cdb9a78831f3134bcc0688006c9",
          "linkedWithoutMetadata": "78f7ee762c1189049a4b8afc7c11072f258a1cdb9a78831f3134bcc0688006c9"
        },
        "inherit": [
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "TimelockControllerUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint256,address[],address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            },
            {
              "label": "_timestamps",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:34"
            },
            {
              "label": "_minDelay",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)48_storage",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:432"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "251",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "252",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "253",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3425_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "bridgeProxyLogic": {
        "src": "contracts/modules/bridgeModules/bridgeProxyLogic.sol:18",
        "version": {
          "withMetadata": "dfc33e6f0d1a9851d4faf65b2097618f580d9b21dd9567623609391208682553",
          "withoutMetadata": "a05fde3485225c346f01cc60117bf7c82f4aaec47c33170e8d74535950d29e6c",
          "linkedWithoutMetadata": "a05fde3485225c346f01cc60117bf7c82f4aaec47c33170e8d74535950d29e6c"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "EternalStorage",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "()",
          "initialize(bytes)",
          "setPermissionReg(address)",
          "setBridgeContract(address)",
          "setMediatorContractOnOtherSide(address)",
          "setRequestGasLimit(uint256)",
          "bridgeContract()",
          "mediatorContractOnOtherSide()",
          "requestGasLimit()",
          "executeTransactionFromAMB(address,uint256,bytes,address,uint8)",
          "executeGenericTransactionFromAMB(address,bytes)",
          "execTransactionFromModule(address,uint256,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "uintStorage",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:9"
            },
            {
              "label": "stringStorage",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_bytes32,t_string_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:10"
            },
            {
              "label": "addressStorage",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:11"
            },
            {
              "label": "bytesStorage",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_bytes32,t_bytes_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:12"
            },
            {
              "label": "boolStorage",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:13"
            },
            {
              "label": "intStorage",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_bytes32,t_int256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:14"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "163",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_int256)": {
              "label": "mapping(bytes32 => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAMB": {
        "src": "contracts/modules/bridgeModules/interfaces/IAMB.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "messageSender()",
          "maxGasPerTx()",
          "transactionHash()",
          "messageId()",
          "messageSourceChainId()",
          "messageCallStatus(bytes32)",
          "failedMessageDataHash(bytes32)",
          "failedMessageReceiver(bytes32)",
          "failedMessageSender(bytes32)",
          "requireToPassMessage(address,bytes,uint256)",
          "requireToConfirmMessage(address,bytes,uint256)",
          "requireToGetInformation(bytes32,bytes)",
          "sourceChainId()",
          "destinationChainId()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EternalStorage": {
        "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:8",
        "version": {
          "withMetadata": "4e416fa7f5f575893334c40b6621898f58713aeaa3196919a6319540e9b1f939",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "uintStorage",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:9"
            },
            {
              "label": "stringStorage",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_string_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:10"
            },
            {
              "label": "addressStorage",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:11"
            },
            {
              "label": "bytesStorage",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_bytes32,t_bytes_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:12"
            },
            {
              "label": "boolStorage",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:13"
            },
            {
              "label": "intStorage",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_int256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_int256)": {
              "label": "mapping(bytes32 => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "safeWrapper": {
        "src": "contracts/modules/safeWrapper/safeWrapper.sol:6",
        "version": {
          "withMetadata": "3d126d5bf24b2ace7eef350e1f2ed0028302cdab556ab5bb35a6135667f5263b",
          "withoutMetadata": "3d126d5bf24b2ace7eef350e1f2ed0028302cdab556ab5bb35a6135667f5263b",
          "linkedWithoutMetadata": "3d126d5bf24b2ace7eef350e1f2ed0028302cdab556ab5bb35a6135667f5263b"
        },
        "inherit": [
          "safeWrapperBase",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "(address,address,string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "safeWrapper",
            "src": "contracts/modules/safeWrapper/safeWrapper.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "safe",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:14"
            },
            {
              "label": "sector",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "safeWrapperBase": {
        "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:9",
        "version": {
          "withMetadata": "98464adb9f21af8aa10c9222d2b5b8497f16678f6ce257a19b3aebbca7304287",
          "withoutMetadata": "b6a51f32d7983bb46cc12db4946292a2ce39cd4755931e3f176c12450d4e2d69",
          "linkedWithoutMetadata": "b6a51f32d7983bb46cc12db4946292a2ce39cd4755931e3f176c12450d4e2d69"
        },
        "inherit": [
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "setPermissionReg(address)",
          "sendEth(address,uint256,address)",
          "removeOwner(address,uint256)",
          "addOwner(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "safe",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:14"
            },
            {
              "label": "sector",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "safeWrapperLogic": {
        "src": "contracts/modules/safeWrapper/safeWrapperLogic.sol:8",
        "version": {
          "withMetadata": "e9a583428ba8b8d574b0ad22ca15b32603995ecee4df11a759b61c34ff5a6ea3",
          "withoutMetadata": "ad5e4be889d37448826b7b4e4e26610171accf71b6f0c99058314b895e368922",
          "linkedWithoutMetadata": "ad5e4be889d37448826b7b4e4e26610171accf71b6f0c99058314b895e368922"
        },
        "inherit": [
          "logicBase",
          "safeWrapperBase",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "safeWrapperLogic",
            "src": "contracts/modules/safeWrapper/safeWrapperLogic.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "203",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "safe",
              "offset": 0,
              "slot": "206",
              "type": "t_address",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "207",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:14"
            },
            {
              "label": "sector",
              "offset": 0,
              "slot": "208",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGnosisSafeProxy": {
        "src": "contracts/proxyContracts/factory/IGnosisSafeProxy.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IProxyCallback": {
        "src": "contracts/proxyContracts/factory/IProxyCallback.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "springFactory": {
        "src": "contracts/proxyContracts/factory/springFactory.sol:9",
        "version": {
          "withMetadata": "b2aee643f8213d578bee9011e0b9063bfb2c01092b716b8abf7b45ed05be3de5",
          "withoutMetadata": "267efa799fe2876c80fc8949ec20d845eb1e24d3d711552a734c102ce166f5df",
          "linkedWithoutMetadata": "267efa799fe2876c80fc8949ec20d845eb1e24d3d711552a734c102ce166f5df"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "proxyRuntimeCode()",
          "proxyCreationCode()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "logicBase": {
        "src": "contracts/proxyContracts/logic/logicBase.sol:8",
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springProxy": {
        "src": "contracts/proxyContracts/proxy/springProxy.sol:9",
        "version": {
          "withMetadata": "610b3e6bf5909dda45a05c305e9a5003ec1098af6b60a6a02ed825cd931bc55f",
          "withoutMetadata": "610b3e6bf5909dda45a05c305e9a5003ec1098af6b60a6a02ed825cd931bc55f",
          "linkedWithoutMetadata": "610b3e6bf5909dda45a05c305e9a5003ec1098af6b60a6a02ed825cd931bc55f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "console",
          "Address",
          "StorageSlot"
        ],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "springProxy",
            "src": "contracts/proxyContracts/proxy/springProxy.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "c100f561d0dd92dba3736f656c282e8f21b151345f8f7bb341c5b2afdc4dc3f2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "GnosisSafe": {
        "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:19",
        "version": {
          "withMetadata": "5bf5fca9c2200523da52d1a5a25c79bbbbe65d85ba6c17260910f952feb77ecf",
          "withoutMetadata": "b0dafd629c7d73386b769d413f1b7e5b04ef16c873c373fddae6ff731dc119fa",
          "linkedWithoutMetadata": "b0dafd629c7d73386b769d413f1b7e5b04ef16c873c373fddae6ff731dc119fa"
        },
        "inherit": [
          "GuardManager",
          "StorageAccessible",
          "FallbackManager",
          "ISignatureValidatorConstants",
          "SecuredTokenTransfer",
          "SignatureDecoder",
          "OwnerManager",
          "ModuleManager",
          "Executor",
          "SelfAuthorized",
          "Singleton",
          "EtherPaymentFallback"
        ],
        "libraries": [
          "GnosisSafeMath"
        ],
        "methods": [
          "()",
          "setup(address[],uint256,address,bytes,address,address,uint256,address payable)",
          "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes)",
          "checkSignatures(bytes32,bytes,bytes)",
          "checkNSignatures(bytes32,bytes,bytes,uint256)",
          "requiredTxGas(address,uint256,bytes,uint8)",
          "approveHash(bytes32)",
          "getChainId()",
          "domainSeparator()",
          "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)",
          "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafe",
            "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:59"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            },
            {
              "label": "owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            },
            {
              "label": "nonce",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:51"
            },
            {
              "label": "_deprecatedDomainSeparator",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes32",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:52"
            },
            {
              "label": "signedMessages",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:54"
            },
            {
              "label": "approvedHashes",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
              "label": "mapping(address => mapping(bytes32 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Executor": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/Executor.sol:7",
        "version": {
          "withMetadata": "48619bf387511c5a10b45ee94807128680593ef546d04f01a27eabf49556c7fd",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FallbackManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/FallbackManager.sol:8",
        "version": {
          "withMetadata": "dc2e82ceb477aaedb214fa9fa713475cf985ee3fb52807485e8ffb5a136baebf",
          "withoutMetadata": "69f3af1e7187f01e1814bbf1bb39db08a4ec97d96ed0fd50031fc06be9727d00",
          "linkedWithoutMetadata": "69f3af1e7187f01e1814bbf1bb39db08a4ec97d96ed0fd50031fc06be9727d00"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setFallbackHandler(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Guard": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GuardManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:27",
        "version": {
          "withMetadata": "33f926cafe41259dcea04aaf38b9d648588b9c3c637f28568f169decdf5a90b3",
          "withoutMetadata": "0a932d5475d91581a9fef336ea4a1e989b74f706b6caf1cc54201540170dc099",
          "linkedWithoutMetadata": "0a932d5475d91581a9fef336ea4a1e989b74f706b6caf1cc54201540170dc099"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setGuard(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ModuleManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:10",
        "version": {
          "withMetadata": "ff1679fefde03297bd1da3ffbc1236e691f5e83cc5a1402035baec922e669e8d",
          "withoutMetadata": "62fea39f8e4489b1904c18ff2d73a421d08acbedb8a365fbfd6491fcc830c9f2",
          "linkedWithoutMetadata": "62fea39f8e4489b1904c18ff2d73a421d08acbedb8a365fbfd6491fcc830c9f2"
        },
        "inherit": [
          "Executor",
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "modules",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "OwnerManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:8",
        "version": {
          "withMetadata": "1d81ca17a9fcfa25ce9339ce2680655269fb902d62272bbbfb3734abc2eb18ca",
          "withoutMetadata": "79fecfeb20f4939a246b45855d3281a3ec54ae9e3cbd6d7c32b51fd008eb6995",
          "linkedWithoutMetadata": "79fecfeb20f4939a246b45855d3281a3ec54ae9e3cbd6d7c32b51fd008eb6995"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "addOwnerWithThreshold(address,uint256)",
          "removeOwner(address,address,uint256)",
          "swapOwner(address,address,address)",
          "changeThreshold(uint256)",
          "getThreshold()",
          "isOwner(address)",
          "getOwners()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owners",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Enum": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Enum.sol:6",
        "version": {
          "withMetadata": "fa710b28020d20e4d963110f65c100a0c3da47d9fc1e1731c23b1799b1d4c1fb",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EtherPaymentFallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/EtherPaymentFallback.sol:6",
        "version": {
          "withMetadata": "187ba1ab7509d8a8a41148e5346c4676a97ef3d8aa071ba4bf4e8d3d702d2a82",
          "withoutMetadata": "2df5b0a6e815736a589f0331577b6d497e1b407aaa2113a81067671b40e55a4b",
          "linkedWithoutMetadata": "2df5b0a6e815736a589f0331577b6d497e1b407aaa2113a81067671b40e55a4b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SecuredTokenTransfer": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SecuredTokenTransfer.sol:6",
        "version": {
          "withMetadata": "c4a369d358aa1c59074eeb091afd702a8d7279190a5bc1fd805850d6fdff6410",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfAuthorized": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol:6",
        "version": {
          "withMetadata": "b276ff9268a1ccf410bee71fafff8878d987844fecc7d0a7fb7c8788c63eb96d",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureDecoder": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SignatureDecoder.sol:6",
        "version": {
          "withMetadata": "d4004664ae4ec477c1a4cae24dbf247fa9ec109cdaf9a0146c3721cc8f2b42b6",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Singleton": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:7",
        "version": {
          "withMetadata": "a741b85f7f5542acf60e6428bc627b238303a051fd1480b1237fbd25c2770440",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageAccessible": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/StorageAccessible.sol:6",
        "version": {
          "withMetadata": "063b2726c4c93e31ec6088b838689586ea1d616d59a03b7a46a4cf0a75119694",
          "withoutMetadata": "e3cefdf9f2f60bc1238dfe2249e501fdbc52930b5866c7829ce07a7b370ccae9",
          "linkedWithoutMetadata": "e3cefdf9f2f60bc1238dfe2249e501fdbc52930b5866c7829ce07a7b370ccae9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getStorageAt(uint256,uint256)",
          "simulateAndRevert(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeMath": {
        "src": "@gnosis.pm/safe-contracts/contracts/external/GnosisSafeMath.sol:10",
        "version": {
          "withMetadata": "8613af15c62060eda9d711eb50192cf0dc17f5c0059409395b9646f0fa8045fc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISignatureValidator": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:9",
        "inherit": [
          "ISignatureValidatorConstants"
        ],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISignatureValidatorConstants": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:4",
        "version": {
          "withMetadata": "da269993427b7502b85b990935687b77da03ef51e6fb492dd50f74b1f687b657",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:13",
        "version": {
          "withMetadata": "4403647dcbde7449432007f15728744e2691e4b245342cfb676827d2eea3141b",
          "withoutMetadata": "3cb953a9f4cf894eadc4bcfa5dfe2e06c70518a0a27283970fd270c253168eb0",
          "linkedWithoutMetadata": "3cb953a9f4cf894eadc4bcfa5dfe2e06c70518a0a27283970fd270c253168eb0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafeProxy",
            "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "GnosisSafeProxy",
              "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "masterCopy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeProxyFactory": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxyFactory.sol:9",
        "version": {
          "withMetadata": "dade3c6a8192a11725263d527b917a33a210e656185fc9e8ad8ea617359a2b52",
          "withoutMetadata": "1ce43b946dcd7ba295e1269263fd1b6868ab93a8b7b5ca5fc015045d5aa9229f",
          "linkedWithoutMetadata": "1ce43b946dcd7ba295e1269263fd1b6868ab93a8b7b5ca5fc015045d5aa9229f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProxy(address,bytes)",
          "proxyRuntimeCode()",
          "proxyCreationCode()",
          "createProxyWithNonce(address,bytes,uint256)",
          "createProxyWithCallback(address,bytes,uint256,address)",
          "calculateCreateProxyWithNonceAddress(address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IProxyCreationCallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Modifier": {
        "src": "@gnosis.pm/zodiac/contracts/core/Modifier.sol:9",
        "inherit": [
          "IAvatar",
          "Module",
          "Guardable",
          "FactoryFriendly",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "disableModule(address,address)",
          "enableModule(address)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "avatar",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:12"
            },
            {
              "label": "target",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:14"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Modifier",
              "src": "@gnosis.pm/zodiac/contracts/core/Modifier.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Module": {
        "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:10",
        "inherit": [
          "Guardable",
          "FactoryFriendly",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setAvatar(address)",
          "setTarget(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "avatar",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:12"
            },
            {
              "label": "target",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FactoryFriendly": {
        "src": "@gnosis.pm/zodiac/contracts/factory/FactoryFriendly.sol:8",
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setUp(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseGuard": {
        "src": "@gnosis.pm/zodiac/contracts/guard/BaseGuard.sol:8",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Guardable": {
        "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:9",
        "version": {
          "withMetadata": "8729c389f8175a94eeb27a597c20f2db4d8f6e46d1cba977ea1ac2254b833a49",
          "withoutMetadata": "bf19dd5c52ee40424bf5e1b4367dc2f2fb49a84d7aa19039b850b5d6df6b1047",
          "linkedWithoutMetadata": "bf19dd5c52ee40424bf5e1b4367dc2f2fb49a84d7aa19039b850b5d6df6b1047"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setGuard(address)",
          "getGuard()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAvatar": {
        "src": "@gnosis.pm/zodiac/contracts/interfaces/IAvatar.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IGuard": {
        "src": "@gnosis.pm/zodiac/contracts/interfaces/IGuard.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3425_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TimelockControllerUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:27",
        "version": {
          "withMetadata": "93c2ecaae320d6300899f2a7b35c84e2fd2be0c7a82f11d199e592dc9e3d4ef4",
          "withoutMetadata": "2090350735f5c3bdb96f361d12957eb370c051f858ba1a6c1ff335f5c6190f0a",
          "linkedWithoutMetadata": "2090350735f5c3bdb96f361d12957eb370c051f858ba1a6c1ff335f5c6190f0a"
        },
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "supportsInterface(bytes4)",
          "isOperation(bytes32)",
          "isOperationPending(bytes32)",
          "isOperationReady(bytes32)",
          "isOperationDone(bytes32)",
          "getTimestamp(bytes32)",
          "getMinDelay()",
          "hashOperation(address,uint256,bytes,bytes32,bytes32)",
          "hashOperationBatch(address[],uint256[],bytes[],bytes32,bytes32)",
          "schedule(address,uint256,bytes,bytes32,bytes32,uint256)",
          "scheduleBatch(address[],uint256[],bytes[],bytes32,bytes32,uint256)",
          "cancel(bytes32)",
          "execute(address,uint256,bytes,bytes32,bytes32)",
          "executeBatch(address[],uint256[],bytes[],bytes32,bytes32)",
          "updateDelay(uint256)",
          "onERC721Received(address,address,uint256,bytes)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            },
            {
              "label": "_timestamps",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:34"
            },
            {
              "label": "_minDelay",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)48_storage",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:432"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3425_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IVotesUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getVotes(address)",
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "delegates(address)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "2a068734c026ac0588f9ecc3dad9aaffe9e15f5b44f41cb1b66055a8d20f392b",
          "withoutMetadata": "db1447c1afc82e7549d7f5fcd89add5143ffedea7ff0db3414fed90bf71ab239",
          "linkedWithoutMetadata": "db1447c1afc82e7549d7f5fcd89add5143ffedea7ff0db3414fed90bf71ab239"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20PermitUpgradeable": {
        "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:26",
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_address,t_struct(Counter)8000_storage)",
              "contract": "ERC20PermitUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:34"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "154",
              "type": "t_bytes32",
              "contract": "ERC20PermitUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:48",
              "renamedFrom": "_PERMIT_TYPEHASH"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC20PermitUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:138"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8000_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8000_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "f3bd1e4c7055c6575de5ded808829466f0558d27e32e529e89917004f9aed13d",
          "withoutMetadata": "061200bd9dab026742a91776a60ba53f7b6fd77ca1dab5f3d5826076bbfe96ed",
          "linkedWithoutMetadata": "061200bd9dab026742a91776a60ba53f7b6fd77ca1dab5f3d5826076bbfe96ed"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "b5e74e742bd4099c3ffcf7a96f2e718dbabfa19e72c3ca918ef83a7b26e51896",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:14",
        "version": {
          "withMetadata": "d7f80c247b6067cb172fd438e3f56990cc1ba886b39f426f5fcfade17ebc5f10",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "0db289179bd2697c54666413d56c72d7f752a1390311967e1368178ddcc6e4fc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "06a29fa468bce0c29e43a6e340cb8e0405e1af5aa98df2a0bd80568af54e15db",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/TimersUpgradeable.sol:9",
        "version": {
          "withMetadata": "8632367d465fd1a01c5104adfad8dfcded0f7b4844149bfeb3b11c3a640948c9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSAUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:14",
        "version": {
          "withMetadata": "a381b837b765d9b6704f87be559122e8700adefdeb7fb6e0d6e0cd09a820060e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EIP712Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "bfc458ad95b2ded7f4fb45a552dbb4ffa4b0136d124bb85bab880e8b7a6cba9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeCastUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol:21",
        "version": {
          "withMetadata": "c4d4f198b1bfc3e1ff27c9f490fa121b1b702219205648bb6e189334edeee8c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DoubleEndedQueueUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/DoubleEndedQueueUpgradeable.sol:21",
        "version": {
          "withMetadata": "3e17a9a1b09a12dcc411eeb255d96b0bf8f669929c7d2612ab544423532d8a2b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeCastUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "389f3bbb054d84723e25e07db563153cc56483f01e3348915d6a1ad61be48c00",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "44cc06288b20e467bcf8fd3ee273df3ac16b5dcefa8244020f901056346834d5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IGnosisSafe": {
        "src": "contracts/avatars/gnosisSafe/IGnosisSafe.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "getOwners()",
          "isOwner(address)",
          "getThreshold()",
          "getModulesPaginated(address,uint256)",
          "isModuleEnabled(address)",
          "setGuard(address)",
          "disableModule(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DSAuth": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:30",
        "version": {
          "withMetadata": "cf2abe74988e1b3dd1a75233792047a8c0c604779be6a9908a3db338d80dcdcf",
          "withoutMetadata": "7b102b6bd996ead1073c8438bb1716546d03e848703d4fda4c88910439821be9",
          "linkedWithoutMetadata": "7b102b6bd996ead1073c8438bb1716546d03e848703d4fda4c88910439821be9"
        },
        "inherit": [
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setOwner(address)",
          "owner()",
          "setAuthority(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DSAuth",
            "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DSAuthEvents": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:25",
        "version": {
          "withMetadata": "adb911002af224db5b930ee15b40d6c6c7ac376e2c437b4fe4640d8aa05e7fbd",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DSAuthority": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "canCall(address,address,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DSRoles": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:22",
        "inherit": [
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "getUserRoles(address)",
          "getCapabilityRoles(address,bytes4)",
          "isUserRoot(address)",
          "isCapabilityPublic(address,bytes4)",
          "hasUserRole(address,uint8)",
          "canCall(address,address,bytes4)",
          "setRootUser(address,bool)",
          "setUserRole(address,uint8,bool)",
          "setPublicCapability(address,bytes4,bool)",
          "setRoleCapability(uint8,address,bytes4,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IPermissionRegistry": {
        "src": "contracts/avatars/permissionReg/IPermissionRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "canCall(address,address,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "permissionRegistry": {
        "src": "contracts/avatars/permissionReg/permissionRegistry.sol:6",
        "version": {
          "withMetadata": "3608af58a914d9520f948adb2f34a39b3bb7222c1e262aa167bee20449959501",
          "withoutMetadata": "3608af58a914d9520f948adb2f34a39b3bb7222c1e262aa167bee20449959501",
          "linkedWithoutMetadata": "3608af58a914d9520f948adb2f34a39b3bb7222c1e262aa167bee20449959501"
        },
        "inherit": [
          "permissionRegistryBase",
          "springAvatar",
          "permissionRegHandler",
          "ERC721BurnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "DSRoles",
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "permissionRegistry",
            "src": "contracts/avatars/permissionReg/permissionRegistry.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "157",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "idTicker",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "210",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:15"
            },
            {
              "label": "tokenIDs",
              "offset": 0,
              "slot": "211",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "permissionRegistryBase": {
        "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:9",
        "version": {
          "withMetadata": "c7df70f88de6ce6889d1f9c97a454a5a58fbaa01d12a5e48a11ae3204c7665fe",
          "withoutMetadata": "e4f43219d22d7d1851dbb342450e257035447d098face85c7b638b47318fa219",
          "linkedWithoutMetadata": "e4f43219d22d7d1851dbb342450e257035447d098face85c7b638b47318fa219"
        },
        "inherit": [
          "springAvatar",
          "permissionRegHandler",
          "ERC721BurnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "DSRoles",
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "setLink(uint8,string)",
          "getNFT(address,uint8)",
          "getTokenID(address,uint8)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "idTicker",
            "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "157",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "idTicker",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "210",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:15"
            },
            {
              "label": "tokenIDs",
              "offset": 0,
              "slot": "211",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "permissionRegistryLogic": {
        "src": "contracts/avatars/permissionReg/permissionRegistryLogic.sol:7",
        "version": {
          "withMetadata": "5cc613bfac428a035fa74cdd6c0fec8df473af7d0ee638e33a83418e243c2150",
          "withoutMetadata": "e755622e3e290e8ab17363019dd9977f6c31b25d03b94656e7b98aa632773e4e",
          "linkedWithoutMetadata": "e755622e3e290e8ab17363019dd9977f6c31b25d03b94656e7b98aa632773e4e"
        },
        "inherit": [
          "permissionRegistryBase",
          "springAvatar",
          "permissionRegHandler",
          "ERC721BurnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "logicBase",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "DSRoles",
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "permissionRegistryLogic",
            "src": "contracts/avatars/permissionReg/permissionRegistryLogic.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "157",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "158",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "257",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "258",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "259",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "260",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "261",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "262",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "263",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "307",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "357",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "358",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "idTicker",
              "offset": 0,
              "slot": "359",
              "type": "t_uint256",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "360",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:15"
            },
            {
              "label": "tokenIDs",
              "offset": 0,
              "slot": "361",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "old": {
        "src": "contracts/avatars/wrapperFactory/old.sol:7",
        "version": {
          "withMetadata": "da28dcb8e7bdbf3ec9afb1fc9ec1651db1fd108a6de11f4fa5c43b0c4895f973",
          "withoutMetadata": "f0f362613f03d74e6e3361de7456a52cc9b49915d06fa256d779652f4b1f8ed6",
          "linkedWithoutMetadata": "f0f362613f03d74e6e3361de7456a52cc9b49915d06fa256d779652f4b1f8ed6"
        },
        "inherit": [
          "wrapperFactoryBase",
          "springAvatar",
          "permissionRegHandler",
          "logicBase",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "old",
            "src": "contracts/avatars/wrapperFactory/old.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "202",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "203",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:19"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "204",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "205",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:21"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "206",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:22"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "wrapperFactory": {
        "src": "contracts/avatars/wrapperFactory/wrapperFactory.sol:6",
        "version": {
          "withMetadata": "bd01059a85a7c6a36e25f3d9f975ac19d0f8535ac1560ccea21a5f539af16548",
          "withoutMetadata": "bd01059a85a7c6a36e25f3d9f975ac19d0f8535ac1560ccea21a5f539af16548",
          "linkedWithoutMetadata": "bd01059a85a7c6a36e25f3d9f975ac19d0f8535ac1560ccea21a5f539af16548"
        },
        "inherit": [
          "wrapperFactoryBase",
          "springAvatar",
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "wrapperFactory",
            "src": "contracts/avatars/wrapperFactory/wrapperFactory.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:19"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:21"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:22"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "wrapperFactoryBase": {
        "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:14",
        "version": {
          "withMetadata": "ff092ed93e3979a1fa004ff555b69fa673e7246a16c498b9863ad7e79aaebd6e",
          "withoutMetadata": "bd6a1c4e047ab81d57d03eecd767e70130725eff4b0de936491eb9c455a19481",
          "linkedWithoutMetadata": "bd6a1c4e047ab81d57d03eecd767e70130725eff4b0de936491eb9c455a19481"
        },
        "inherit": [
          "springAvatar",
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "createSafeWrapperWithBudget(address,address,uint256,uint256,address,uint256,address[],uint8,string,string)",
          "delegateSetup(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "EMPTY_DATA",
            "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:19"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:21"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:22"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "wrapperFactoryLogic": {
        "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:13",
        "version": {
          "withMetadata": "7e8358c367cc88dcfaa95ef65a1e1ae8ef7fed01ad740f214b63c074b08a88c5",
          "withoutMetadata": "dc1f9db8ea38173453a166d74809958d733bca8f6c6928b6a4cf3879c778928e",
          "linkedWithoutMetadata": "dc1f9db8ea38173453a166d74809958d733bca8f6c6928b6a4cf3879c778928e"
        },
        "inherit": [
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createSafeWrapperWithBudget(address,uint256,uint256,address,uint256,address[],uint256)",
          "delegateSetup(address)",
          "enableModule(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "wrapperFactoryLogic",
            "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "EMPTY_DATA",
            "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:18"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:19"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:20"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:21"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "permissionRegHandler": {
        "src": "contracts/core/permissionRegHandler.sol:5",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "settingsModuleHandler": {
        "src": "contracts/core/settingsModuleHandler.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springAvatar": {
        "src": "contracts/core/springAvatar.sol:14",
        "inherit": [
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "setPermissionReg(address)",
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springModifier": {
        "src": "contracts/core/springModifier.sol:10",
        "inherit": [
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "setPermissionReg(address)",
          "enableModification(address,address)",
          "enableSettingsModule(address)",
          "disableSettingsModule(address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springModule": {
        "src": "contracts/core/springModule.sol:17",
        "inherit": [
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setPermissionReg(address)",
          "enableAvatar(address)",
          "disableAvatar(address,address)",
          "isAvatarEnabled(address)",
          "getAvatarsPaginated(address,uint256)",
          "setTarget(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "dummyAvatar": {
        "src": "contracts/mockContracts/dummyAvatar.sol:7",
        "version": {
          "withMetadata": "faabfae7854473e11ed72e64aad3c64089ac2aba79b690285e5921b9cf8e0c89",
          "withoutMetadata": "5d989797c862827700799041ceec506e049948ad41dffa88616256eb9db922e2",
          "linkedWithoutMetadata": "5d989797c862827700799041ceec506e049948ad41dffa88616256eb9db922e2"
        },
        "inherit": [
          "Executor"
        ],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "setSuccess(bool)",
          "getSuccess()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "testSuccessful",
            "src": "contracts/mockContracts/dummyAvatar.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "testSuccessful",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "dummyAvatar",
              "src": "contracts/mockContracts/dummyAvatar.sol:8"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "dummyBridge": {
        "src": "contracts/mockContracts/dummyBridge.sol:7",
        "version": {
          "withMetadata": "6a03e7aa118cc613cb15f5ae5eb66f6f50132fd63d57ac9e23f4321b94d06739",
          "withoutMetadata": "aaec889a9e6a3220f4ad22d0025f8f4b59f8d4e4ac9b90c6b6dc835f937f748b",
          "linkedWithoutMetadata": "aaec889a9e6a3220f4ad22d0025f8f4b59f8d4e4ac9b90c6b6dc835f937f748b"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "requireToPassMessage(address payable,bytes,uint256)",
          "messageSender()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "dummyModule": {
        "src": "contracts/mockContracts/dummyModule.sol:14",
        "version": {
          "withMetadata": "5e9d920d986b187c0c3352632d8ede86ce45088bd25b6da071a1a9b1be674446",
          "withoutMetadata": "4a94de758be6169fc45937395961394774b308f0d336a3f734683a2f726ff708",
          "linkedWithoutMetadata": "4a94de758be6169fc45937395961394774b308f0d336a3f734683a2f726ff708"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exec(address,uint256,bytes,address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "budgetModifier": {
        "src": "contracts/modifiers/budgetModifier.sol:6",
        "version": {
          "withMetadata": "88b3574f18d38fbd88b68d300871bf08999ee617c9ca6b9c1de5e73f9e55195f",
          "withoutMetadata": "88b3574f18d38fbd88b68d300871bf08999ee617c9ca6b9c1de5e73f9e55195f",
          "linkedWithoutMetadata": "88b3574f18d38fbd88b68d300871bf08999ee617c9ca6b9c1de5e73f9e55195f"
        },
        "inherit": [
          "budgetModifierBase",
          "springModifier",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "budgetModifier",
            "src": "contracts/modifiers/budgetModifier.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            },
            {
              "label": "budgets",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_struct(budget)15638_storage)",
              "contract": "budgetModifierBase",
              "src": "contracts/modifiers/budgetModifierBase.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(budget)15638_storage)": {
              "label": "mapping(address => struct budgetModifierBase.budget)",
              "numberOfBytes": "32"
            },
            "t_struct(budget)15638_storage": {
              "label": "struct budgetModifierBase.budget",
              "members": [
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastReset",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "frozen",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "budgetModifierBase": {
        "src": "contracts/modifiers/budgetModifierBase.sol:9",
        "version": {
          "withMetadata": "b70ebd750fd1a5801bb01d420015339ad7f217a5b8e41261a6891a7e7edec781",
          "withoutMetadata": "927ee70732fdcdcfd5785bf513c94fa47c5095a6c0808cd34518eaa5b442a93a",
          "linkedWithoutMetadata": "927ee70732fdcdcfd5785bf513c94fa47c5095a6c0808cd34518eaa5b442a93a"
        },
        "inherit": [
          "springModifier",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "setBudget(address,uint256,uint256)",
          "getBudget(address)",
          "setFreeze(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            },
            {
              "label": "budgets",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_struct(budget)15638_storage)",
              "contract": "budgetModifierBase",
              "src": "contracts/modifiers/budgetModifierBase.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(budget)15638_storage)": {
              "label": "mapping(address => struct budgetModifierBase.budget)",
              "numberOfBytes": "32"
            },
            "t_struct(budget)15638_storage": {
              "label": "struct budgetModifierBase.budget",
              "members": [
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastReset",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "frozen",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "budgetModifierLogic": {
        "src": "contracts/modifiers/budgetModifierLogic.sol:7",
        "version": {
          "withMetadata": "a822f4c0303c7afdd367af1b7da25c7ab28c335c58e2a0bcb6d862c7797bf43f",
          "withoutMetadata": "4308920101379d17d4481c06f5de3b4532fe04ef9c6f3ddb786bf5b4d8c24a08",
          "linkedWithoutMetadata": "4308920101379d17d4481c06f5de3b4532fe04ef9c6f3ddb786bf5b4d8c24a08"
        },
        "inherit": [
          "logicBase",
          "budgetModifierBase",
          "springModifier",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "budgetModifierLogic",
            "src": "contracts/modifiers/budgetModifierLogic.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "203",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "206",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "207",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            },
            {
              "label": "budgets",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_struct(budget)15638_storage)",
              "contract": "budgetModifierBase",
              "src": "contracts/modifiers/budgetModifierBase.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(budget)15638_storage)": {
              "label": "mapping(address => struct budgetModifierBase.budget)",
              "numberOfBytes": "32"
            },
            "t_struct(budget)15638_storage": {
              "label": "struct budgetModifierBase.budget",
              "members": [
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastReset",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "frozen",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20VotesUpgradeable": {
        "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:29",
        "inherit": [
          "ERC20PermitUpgradeable",
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "IVotesUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeCastUpgradeable",
          "MathUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "checkpoints(address,uint32)",
          "numCheckpoints(address)",
          "delegates(address)",
          "getVotes(address)",
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_address,t_struct(Counter)8000_storage)",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "154",
              "type": "t_bytes32",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
              "renamedFrom": "_PERMIT_TYPEHASH"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:46"
            },
            {
              "label": "_checkpoints",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)16145_storage)dyn_storage)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:47"
            },
            {
              "label": "_totalSupplyCheckpoints",
              "offset": 0,
              "slot": "206",
              "type": "t_array(t_struct(Checkpoint)16145_storage)dyn_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:48"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:323"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Checkpoint)16145_storage)dyn_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Checkpoint)16145_storage)dyn_storage)": {
              "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8000_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)16145_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint224",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8000_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint224": {
              "label": "uint224",
              "numberOfBytes": "28"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovToken": {
        "src": "contracts/modules/GovernorV2/GovToken.sol:15",
        "version": {
          "withMetadata": "3c45b5c74d3e0e6324b6838fb3d2cb4214b6624084c0e3569ca0a1dc98578374",
          "withoutMetadata": "da9e7fc022431939edd904b25bb898f21c737f2989a8f385751ebc0c5c442f1a",
          "linkedWithoutMetadata": "da9e7fc022431939edd904b25bb898f21c737f2989a8f385751ebc0c5c442f1a"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "OwnableUpgradeable",
          "ERC20VotesUpgradeable",
          "ERC20PermitUpgradeable",
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "IVotesUpgradeable",
          "springAvatar",
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string)",
          "transferFrom(address,address,uint256)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "lockVotes(address,uint256,uint256)",
          "freeVotes(address,uint256,uint256)",
          "getLockedVotes(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "54",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "56",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "103",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_address,t_struct(Counter)8000_storage)",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "155",
              "type": "t_bytes32",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
              "renamedFrom": "_PERMIT_TYPEHASH"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "156",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:46"
            },
            {
              "label": "_checkpoints",
              "offset": 0,
              "slot": "206",
              "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)16145_storage)dyn_storage)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:47"
            },
            {
              "label": "_totalSupplyCheckpoints",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_struct(Checkpoint)16145_storage)dyn_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:48"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "208",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:323"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "255",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "355",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "lockedVotes",
              "offset": 0,
              "slot": "405",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GovToken",
              "src": "contracts/modules/GovernorV2/GovToken.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Checkpoint)16145_storage)dyn_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Checkpoint)16145_storage)dyn_storage)": {
              "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8000_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)16145_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint224",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8000_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint224": {
              "label": "uint224",
              "numberOfBytes": "28"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorCoreV2": {
        "src": "contracts/modules/GovernorV2/GovernorCoreV2.sol:15",
        "version": {
          "withMetadata": "2bb14e96db3a3ed21bedc29bae81051105a12aeae01f4258fb2ad3b5a56ec483",
          "withoutMetadata": "a29630ef74df2d4811a064ba10e5f03b9a97009b4416feefdac7110dd15ef847",
          "linkedWithoutMetadata": "a29630ef74df2d4811a064ba10e5f03b9a97009b4416feefdac7110dd15ef847"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "GovernorTimelockControlUpgradeable",
          "GovernorVotesQuorumFractionUpgradeable",
          "GovernorVotes",
          "GovernorCountingSimpleUpgradeable",
          "GovernorSettingsUpgradeable",
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorTimelockUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address,address,uint256,uint256)",
          "votingDelay()",
          "votingPeriod()",
          "quorum(uint256)",
          "state(uint256)",
          "propose(address[],uint256[],bytes[],string,uint256)",
          "proposalThreshold()",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorTimelockUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "253",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18468_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "255",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "257",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "_votingDelay",
              "offset": 0,
              "slot": "303",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:18"
            },
            {
              "label": "_votingPeriod",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:19"
            },
            {
              "label": "_proposalThreshold",
              "offset": 0,
              "slot": "305",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "306",
              "type": "t_array(t_uint256)47_storage",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:160"
            },
            {
              "label": "minStake",
              "offset": 0,
              "slot": "353",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:18"
            },
            {
              "label": "maxStake",
              "offset": 0,
              "slot": "354",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:19"
            },
            {
              "label": "_proposalVotes",
              "offset": 0,
              "slot": "355",
              "type": "t_mapping(t_uint256,t_struct(ProposalVote)17435_storage)",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:59"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "356",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:241"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "405",
              "type": "t_contract(GovToken)17082",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "406",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:78"
            },
            {
              "label": "_quorumNumerator",
              "offset": 0,
              "slot": "456",
              "type": "t_uint256",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "457",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:124"
            },
            {
              "label": "_timelock",
              "offset": 0,
              "slot": "506",
              "type": "t_contract(TimelockControllerUpgradeable)4870",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:32"
            },
            {
              "label": "_timelockIds",
              "offset": 0,
              "slot": "507",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "508",
              "type": "t_array(t_uint256)48_storage",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:243"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "556",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "606",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GovToken)17082": {
              "label": "contract GovToken",
              "numberOfBytes": "20"
            },
            "t_contract(TimelockControllerUpgradeable)4870": {
              "label": "contract TimelockControllerUpgradeable",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18468_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalVote)17435_storage)": {
              "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18468_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(ProposalVote)17435_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
              "members": [
                {
                  "label": "againstVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "forVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "abstainVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "proposerStake",
                  "type": "t_struct(Stake)17418_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "objectorStake",
                  "type": "t_struct(Stake)17418_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "hasVoted",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(Stake)17418_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.Stake",
              "members": [
                {
                  "label": "staker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorCountingSimpleUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:14",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "COUNTING_MODE()",
          "hasVoted(uint256,address)",
          "proposalVotes(uint256)",
          "noObjections(uint256)",
          "getProposer(uint256)",
          "getObjector(uint256)",
          "proposalThreshold()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18468_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "minStake",
              "offset": 0,
              "slot": "253",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:18"
            },
            {
              "label": "maxStake",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:19"
            },
            {
              "label": "_proposalVotes",
              "offset": 0,
              "slot": "255",
              "type": "t_mapping(t_uint256,t_struct(ProposalVote)17435_storage)",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:59"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:241"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18468_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalVote)17435_storage)": {
              "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18468_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(ProposalVote)17435_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
              "members": [
                {
                  "label": "againstVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "forVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "abstainVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "proposerStake",
                  "type": "t_struct(Stake)17418_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "objectorStake",
                  "type": "t_struct(Stake)17418_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "hasVoted",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(Stake)17418_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.Stake",
              "members": [
                {
                  "label": "staker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorSettingsUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:14",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "votingDelay()",
          "votingPeriod()",
          "proposalThreshold()",
          "setVotingDelay(uint256)",
          "setVotingPeriod(uint256)",
          "setProposalThreshold(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18468_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "_votingDelay",
              "offset": 0,
              "slot": "253",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:18"
            },
            {
              "label": "_votingPeriod",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:19"
            },
            {
              "label": "_proposalThreshold",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)47_storage",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:160"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18468_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18468_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorTimelockControlUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:27",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorTimelockUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "state(uint256)",
          "timelock()",
          "proposalEta(uint256)",
          "queue(address[],uint256[],bytes[],bytes32)",
          "updateTimelock(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorTimelockUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "253",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18468_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "255",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "257",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "_timelock",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(TimelockControllerUpgradeable)4870",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:32"
            },
            {
              "label": "_timelockIds",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)48_storage",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:243"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(TimelockControllerUpgradeable)4870": {
              "label": "contract TimelockControllerUpgradeable",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18468_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18468_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:32",
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "DoubleEndedQueueUpgradeable",
          "SafeCastUpgradeable",
          "TimersUpgradeable",
          "MathUpgradeable",
          "AddressUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "()",
          "supportsInterface(bytes4)",
          "name()",
          "version()",
          "hashProposal(address[],uint256[],bytes[],bytes32)",
          "state(uint256)",
          "proposalSnapshot(uint256)",
          "proposalDeadline(uint256)",
          "proposalThreshold()",
          "noObjections(uint256)",
          "object(uint256,uint256,string,bytes)",
          "propose(address[],uint256[],bytes[],string,uint256)",
          "execute(address[],uint256[],bytes[],bytes32)",
          "retrieveStake(uint256)",
          "getVotes(address,uint256)",
          "getVotesWithParams(address,uint256,bytes)",
          "castVote(uint256,uint8,uint256)",
          "castVoteWithReason(uint256,uint8,uint256,string)",
          "castVoteWithReasonAndParams(uint256,uint8,uint256,string,bytes)",
          "castVoteBySig(uint256,uint8,uint256,uint8,bytes32,bytes32)",
          "castVoteWithReasonAndParamsBySig(uint256,uint8,uint256,string,bytes,uint8,bytes32,bytes32)",
          "getProposer(uint256)",
          "getObjector(uint256)",
          "relay(address,uint256,bytes)",
          "onERC721Received(address,address,uint256,bytes)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18468_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18468_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18468_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorVotes": {
        "src": "contracts/modules/GovernorV2/GovernorVotes.sol:17",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18468_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "253",
              "type": "t_contract(GovToken)17082",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "254",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:78"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GovToken)17082": {
              "label": "contract GovToken",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18468_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18468_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorVotesQuorumFractionUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:17",
        "inherit": [
          "GovernorVotes",
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "quorumNumerator()",
          "quorumDenominator()",
          "quorum(uint256)",
          "updateQuorumNumerator(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18468_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "253",
              "type": "t_contract(GovToken)17082",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "254",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:78"
            },
            {
              "label": "_quorumNumerator",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:124"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GovToken)17082": {
              "label": "contract GovToken",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18468_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18468_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGovernorTimelockUpgradeable": {
        "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:14",
        "inherit": [
          "IGovernorUpgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "timelock()",
          "proposalEta(uint256)",
          "queue(address[],uint256[],bytes[],bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorTimelockUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGovernorUpgradeable": {
        "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:14",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "version()",
          "COUNTING_MODE()",
          "hashProposal(address[],uint256[],bytes[],bytes32)",
          "state(uint256)",
          "proposalSnapshot(uint256)",
          "proposalDeadline(uint256)",
          "votingDelay()",
          "votingPeriod()",
          "quorum(uint256)",
          "getVotes(address,uint256)",
          "getVotesWithParams(address,uint256,bytes)",
          "hasVoted(uint256,address)",
          "propose(address[],uint256[],bytes[],string,uint256)",
          "execute(address[],uint256[],bytes[],bytes32)",
          "castVote(uint256,uint8,uint256)",
          "castVoteWithReason(uint256,uint8,uint256,string)",
          "castVoteWithReasonAndParams(uint256,uint8,uint256,string,bytes)",
          "castVoteBySig(uint256,uint8,uint256,uint8,bytes32,bytes32)",
          "castVoteWithReasonAndParamsBySig(uint256,uint8,uint256,string,bytes,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IVotes": {
        "src": "contracts/modules/GovernorV2/IVotes.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "useVotes(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimeLockModuleV2": {
        "src": "contracts/modules/GovernorV2/TimeLockModuleV2.sol:6",
        "version": {
          "withMetadata": "0900f001d1b4258e4f9f09db2853aaf4b285473751e76fc13f97f34704f1f32e",
          "withoutMetadata": "78f7ee762c1189049a4b8afc7c11072f258a1cdb9a78831f3134bcc0688006c9",
          "linkedWithoutMetadata": "78f7ee762c1189049a4b8afc7c11072f258a1cdb9a78831f3134bcc0688006c9"
        },
        "inherit": [
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "TimelockControllerUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint256,address[],address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            },
            {
              "label": "_timestamps",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:34"
            },
            {
              "label": "_minDelay",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)48_storage",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:432"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "251",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "252",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "253",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3425_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "bridgeProxyLogic": {
        "src": "contracts/modules/bridgeModules/bridgeProxyLogic.sol:18",
        "version": {
          "withMetadata": "2eb66b696914f3e7ba49a7143edb281d995bd60c9243fd4ca1b3c9057a9aa8d3",
          "withoutMetadata": "a05fde3485225c346f01cc60117bf7c82f4aaec47c33170e8d74535950d29e6c",
          "linkedWithoutMetadata": "a05fde3485225c346f01cc60117bf7c82f4aaec47c33170e8d74535950d29e6c"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "EternalStorage",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "()",
          "initialize(bytes)",
          "setPermissionReg(address)",
          "setBridgeContract(address)",
          "setMediatorContractOnOtherSide(address)",
          "setRequestGasLimit(uint256)",
          "bridgeContract()",
          "mediatorContractOnOtherSide()",
          "requestGasLimit()",
          "executeTransactionFromAMB(address,uint256,bytes,address,uint8)",
          "executeGenericTransactionFromAMB(address,bytes)",
          "execTransactionFromModule(address,uint256,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "uintStorage",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:9"
            },
            {
              "label": "stringStorage",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_bytes32,t_string_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:10"
            },
            {
              "label": "addressStorage",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:11"
            },
            {
              "label": "bytesStorage",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_bytes32,t_bytes_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:12"
            },
            {
              "label": "boolStorage",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:13"
            },
            {
              "label": "intStorage",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_bytes32,t_int256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:14"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "163",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_int256)": {
              "label": "mapping(bytes32 => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAMB": {
        "src": "contracts/modules/bridgeModules/interfaces/IAMB.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "messageSender()",
          "maxGasPerTx()",
          "transactionHash()",
          "messageId()",
          "messageSourceChainId()",
          "messageCallStatus(bytes32)",
          "failedMessageDataHash(bytes32)",
          "failedMessageReceiver(bytes32)",
          "failedMessageSender(bytes32)",
          "requireToPassMessage(address,bytes,uint256)",
          "requireToConfirmMessage(address,bytes,uint256)",
          "requireToGetInformation(bytes32,bytes)",
          "sourceChainId()",
          "destinationChainId()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EternalStorage": {
        "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:8",
        "version": {
          "withMetadata": "4e416fa7f5f575893334c40b6621898f58713aeaa3196919a6319540e9b1f939",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "uintStorage",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:9"
            },
            {
              "label": "stringStorage",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_string_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:10"
            },
            {
              "label": "addressStorage",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:11"
            },
            {
              "label": "bytesStorage",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_bytes32,t_bytes_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:12"
            },
            {
              "label": "boolStorage",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:13"
            },
            {
              "label": "intStorage",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_int256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_int256)": {
              "label": "mapping(bytes32 => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "safeWrapper": {
        "src": "contracts/modules/safeWrapper/safeWrapper.sol:6",
        "version": {
          "withMetadata": "3d642c101a791e92174f767fbb053a84279a13b4936276d026e8fe58c230a5c0",
          "withoutMetadata": "3d642c101a791e92174f767fbb053a84279a13b4936276d026e8fe58c230a5c0",
          "linkedWithoutMetadata": "3d642c101a791e92174f767fbb053a84279a13b4936276d026e8fe58c230a5c0"
        },
        "inherit": [
          "safeWrapperBase",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "(address,address,string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "safeWrapper",
            "src": "contracts/modules/safeWrapper/safeWrapper.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "safe",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:14"
            },
            {
              "label": "sector",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "safeWrapperBase": {
        "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:9",
        "version": {
          "withMetadata": "375b916cc7d6aa2f92a3eaa1333b022ac9de68bc491e041c16dc8bfe50510c8b",
          "withoutMetadata": "b6a51f32d7983bb46cc12db4946292a2ce39cd4755931e3f176c12450d4e2d69",
          "linkedWithoutMetadata": "b6a51f32d7983bb46cc12db4946292a2ce39cd4755931e3f176c12450d4e2d69"
        },
        "inherit": [
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "setPermissionReg(address)",
          "sendEth(address,uint256,address)",
          "removeOwner(address,uint256)",
          "addOwner(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "safe",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:14"
            },
            {
              "label": "sector",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "safeWrapperLogic": {
        "src": "contracts/modules/safeWrapper/safeWrapperLogic.sol:8",
        "version": {
          "withMetadata": "cfc5090ec09e33f372e36ab034522aa1961365c3410058010d070fff0816d07e",
          "withoutMetadata": "ad5e4be889d37448826b7b4e4e26610171accf71b6f0c99058314b895e368922",
          "linkedWithoutMetadata": "ad5e4be889d37448826b7b4e4e26610171accf71b6f0c99058314b895e368922"
        },
        "inherit": [
          "logicBase",
          "safeWrapperBase",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "safeWrapperLogic",
            "src": "contracts/modules/safeWrapper/safeWrapperLogic.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "203",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "safe",
              "offset": 0,
              "slot": "206",
              "type": "t_address",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "207",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:14"
            },
            {
              "label": "sector",
              "offset": 0,
              "slot": "208",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGnosisSafeProxy": {
        "src": "contracts/proxyContracts/factory/IGnosisSafeProxy.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IProxyCallback": {
        "src": "contracts/proxyContracts/factory/IProxyCallback.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "springFactory": {
        "src": "contracts/proxyContracts/factory/springFactory.sol:9",
        "version": {
          "withMetadata": "b2aee643f8213d578bee9011e0b9063bfb2c01092b716b8abf7b45ed05be3de5",
          "withoutMetadata": "267efa799fe2876c80fc8949ec20d845eb1e24d3d711552a734c102ce166f5df",
          "linkedWithoutMetadata": "267efa799fe2876c80fc8949ec20d845eb1e24d3d711552a734c102ce166f5df"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "proxyRuntimeCode()",
          "proxyCreationCode()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "logicBase": {
        "src": "contracts/proxyContracts/logic/logicBase.sol:8",
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springProxy": {
        "src": "contracts/proxyContracts/proxy/springProxy.sol:9",
        "version": {
          "withMetadata": "610b3e6bf5909dda45a05c305e9a5003ec1098af6b60a6a02ed825cd931bc55f",
          "withoutMetadata": "610b3e6bf5909dda45a05c305e9a5003ec1098af6b60a6a02ed825cd931bc55f",
          "linkedWithoutMetadata": "610b3e6bf5909dda45a05c305e9a5003ec1098af6b60a6a02ed825cd931bc55f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "console",
          "Address",
          "StorageSlot"
        ],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "springProxy",
            "src": "contracts/proxyContracts/proxy/springProxy.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "c100f561d0dd92dba3736f656c282e8f21b151345f8f7bb341c5b2afdc4dc3f2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "GnosisSafe": {
        "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:19",
        "version": {
          "withMetadata": "5bf5fca9c2200523da52d1a5a25c79bbbbe65d85ba6c17260910f952feb77ecf",
          "withoutMetadata": "b0dafd629c7d73386b769d413f1b7e5b04ef16c873c373fddae6ff731dc119fa",
          "linkedWithoutMetadata": "b0dafd629c7d73386b769d413f1b7e5b04ef16c873c373fddae6ff731dc119fa"
        },
        "inherit": [
          "GuardManager",
          "StorageAccessible",
          "FallbackManager",
          "ISignatureValidatorConstants",
          "SecuredTokenTransfer",
          "SignatureDecoder",
          "OwnerManager",
          "ModuleManager",
          "Executor",
          "SelfAuthorized",
          "Singleton",
          "EtherPaymentFallback"
        ],
        "libraries": [
          "GnosisSafeMath"
        ],
        "methods": [
          "()",
          "setup(address[],uint256,address,bytes,address,address,uint256,address payable)",
          "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes)",
          "checkSignatures(bytes32,bytes,bytes)",
          "checkNSignatures(bytes32,bytes,bytes,uint256)",
          "requiredTxGas(address,uint256,bytes,uint8)",
          "approveHash(bytes32)",
          "getChainId()",
          "domainSeparator()",
          "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)",
          "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafe",
            "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:59"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            },
            {
              "label": "owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            },
            {
              "label": "nonce",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:51"
            },
            {
              "label": "_deprecatedDomainSeparator",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes32",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:52"
            },
            {
              "label": "signedMessages",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:54"
            },
            {
              "label": "approvedHashes",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
              "label": "mapping(address => mapping(bytes32 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Executor": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/Executor.sol:7",
        "version": {
          "withMetadata": "48619bf387511c5a10b45ee94807128680593ef546d04f01a27eabf49556c7fd",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FallbackManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/FallbackManager.sol:8",
        "version": {
          "withMetadata": "dc2e82ceb477aaedb214fa9fa713475cf985ee3fb52807485e8ffb5a136baebf",
          "withoutMetadata": "69f3af1e7187f01e1814bbf1bb39db08a4ec97d96ed0fd50031fc06be9727d00",
          "linkedWithoutMetadata": "69f3af1e7187f01e1814bbf1bb39db08a4ec97d96ed0fd50031fc06be9727d00"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setFallbackHandler(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Guard": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GuardManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:27",
        "version": {
          "withMetadata": "33f926cafe41259dcea04aaf38b9d648588b9c3c637f28568f169decdf5a90b3",
          "withoutMetadata": "0a932d5475d91581a9fef336ea4a1e989b74f706b6caf1cc54201540170dc099",
          "linkedWithoutMetadata": "0a932d5475d91581a9fef336ea4a1e989b74f706b6caf1cc54201540170dc099"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setGuard(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ModuleManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:10",
        "version": {
          "withMetadata": "ff1679fefde03297bd1da3ffbc1236e691f5e83cc5a1402035baec922e669e8d",
          "withoutMetadata": "62fea39f8e4489b1904c18ff2d73a421d08acbedb8a365fbfd6491fcc830c9f2",
          "linkedWithoutMetadata": "62fea39f8e4489b1904c18ff2d73a421d08acbedb8a365fbfd6491fcc830c9f2"
        },
        "inherit": [
          "Executor",
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "modules",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "OwnerManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:8",
        "version": {
          "withMetadata": "1d81ca17a9fcfa25ce9339ce2680655269fb902d62272bbbfb3734abc2eb18ca",
          "withoutMetadata": "79fecfeb20f4939a246b45855d3281a3ec54ae9e3cbd6d7c32b51fd008eb6995",
          "linkedWithoutMetadata": "79fecfeb20f4939a246b45855d3281a3ec54ae9e3cbd6d7c32b51fd008eb6995"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "addOwnerWithThreshold(address,uint256)",
          "removeOwner(address,address,uint256)",
          "swapOwner(address,address,address)",
          "changeThreshold(uint256)",
          "getThreshold()",
          "isOwner(address)",
          "getOwners()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owners",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Enum": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Enum.sol:6",
        "version": {
          "withMetadata": "fa710b28020d20e4d963110f65c100a0c3da47d9fc1e1731c23b1799b1d4c1fb",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EtherPaymentFallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/EtherPaymentFallback.sol:6",
        "version": {
          "withMetadata": "187ba1ab7509d8a8a41148e5346c4676a97ef3d8aa071ba4bf4e8d3d702d2a82",
          "withoutMetadata": "2df5b0a6e815736a589f0331577b6d497e1b407aaa2113a81067671b40e55a4b",
          "linkedWithoutMetadata": "2df5b0a6e815736a589f0331577b6d497e1b407aaa2113a81067671b40e55a4b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SecuredTokenTransfer": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SecuredTokenTransfer.sol:6",
        "version": {
          "withMetadata": "c4a369d358aa1c59074eeb091afd702a8d7279190a5bc1fd805850d6fdff6410",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfAuthorized": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol:6",
        "version": {
          "withMetadata": "b276ff9268a1ccf410bee71fafff8878d987844fecc7d0a7fb7c8788c63eb96d",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureDecoder": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SignatureDecoder.sol:6",
        "version": {
          "withMetadata": "d4004664ae4ec477c1a4cae24dbf247fa9ec109cdaf9a0146c3721cc8f2b42b6",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Singleton": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:7",
        "version": {
          "withMetadata": "a741b85f7f5542acf60e6428bc627b238303a051fd1480b1237fbd25c2770440",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageAccessible": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/StorageAccessible.sol:6",
        "version": {
          "withMetadata": "063b2726c4c93e31ec6088b838689586ea1d616d59a03b7a46a4cf0a75119694",
          "withoutMetadata": "e3cefdf9f2f60bc1238dfe2249e501fdbc52930b5866c7829ce07a7b370ccae9",
          "linkedWithoutMetadata": "e3cefdf9f2f60bc1238dfe2249e501fdbc52930b5866c7829ce07a7b370ccae9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getStorageAt(uint256,uint256)",
          "simulateAndRevert(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeMath": {
        "src": "@gnosis.pm/safe-contracts/contracts/external/GnosisSafeMath.sol:10",
        "version": {
          "withMetadata": "8613af15c62060eda9d711eb50192cf0dc17f5c0059409395b9646f0fa8045fc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISignatureValidator": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:9",
        "inherit": [
          "ISignatureValidatorConstants"
        ],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISignatureValidatorConstants": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:4",
        "version": {
          "withMetadata": "da269993427b7502b85b990935687b77da03ef51e6fb492dd50f74b1f687b657",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:13",
        "version": {
          "withMetadata": "4403647dcbde7449432007f15728744e2691e4b245342cfb676827d2eea3141b",
          "withoutMetadata": "3cb953a9f4cf894eadc4bcfa5dfe2e06c70518a0a27283970fd270c253168eb0",
          "linkedWithoutMetadata": "3cb953a9f4cf894eadc4bcfa5dfe2e06c70518a0a27283970fd270c253168eb0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafeProxy",
            "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "GnosisSafeProxy",
              "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "masterCopy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeProxyFactory": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxyFactory.sol:9",
        "version": {
          "withMetadata": "dade3c6a8192a11725263d527b917a33a210e656185fc9e8ad8ea617359a2b52",
          "withoutMetadata": "1ce43b946dcd7ba295e1269263fd1b6868ab93a8b7b5ca5fc015045d5aa9229f",
          "linkedWithoutMetadata": "1ce43b946dcd7ba295e1269263fd1b6868ab93a8b7b5ca5fc015045d5aa9229f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProxy(address,bytes)",
          "proxyRuntimeCode()",
          "proxyCreationCode()",
          "createProxyWithNonce(address,bytes,uint256)",
          "createProxyWithCallback(address,bytes,uint256,address)",
          "calculateCreateProxyWithNonceAddress(address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IProxyCreationCallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Modifier": {
        "src": "@gnosis.pm/zodiac/contracts/core/Modifier.sol:9",
        "inherit": [
          "IAvatar",
          "Module",
          "Guardable",
          "FactoryFriendly",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "disableModule(address,address)",
          "enableModule(address)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "avatar",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:12"
            },
            {
              "label": "target",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:14"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Modifier",
              "src": "@gnosis.pm/zodiac/contracts/core/Modifier.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Module": {
        "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:10",
        "inherit": [
          "Guardable",
          "FactoryFriendly",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setAvatar(address)",
          "setTarget(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "avatar",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:12"
            },
            {
              "label": "target",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FactoryFriendly": {
        "src": "@gnosis.pm/zodiac/contracts/factory/FactoryFriendly.sol:8",
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setUp(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseGuard": {
        "src": "@gnosis.pm/zodiac/contracts/guard/BaseGuard.sol:8",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Guardable": {
        "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:9",
        "version": {
          "withMetadata": "8729c389f8175a94eeb27a597c20f2db4d8f6e46d1cba977ea1ac2254b833a49",
          "withoutMetadata": "bf19dd5c52ee40424bf5e1b4367dc2f2fb49a84d7aa19039b850b5d6df6b1047",
          "linkedWithoutMetadata": "bf19dd5c52ee40424bf5e1b4367dc2f2fb49a84d7aa19039b850b5d6df6b1047"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setGuard(address)",
          "getGuard()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAvatar": {
        "src": "@gnosis.pm/zodiac/contracts/interfaces/IAvatar.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IGuard": {
        "src": "@gnosis.pm/zodiac/contracts/interfaces/IGuard.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3425_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TimelockControllerUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:27",
        "version": {
          "withMetadata": "93c2ecaae320d6300899f2a7b35c84e2fd2be0c7a82f11d199e592dc9e3d4ef4",
          "withoutMetadata": "2090350735f5c3bdb96f361d12957eb370c051f858ba1a6c1ff335f5c6190f0a",
          "linkedWithoutMetadata": "2090350735f5c3bdb96f361d12957eb370c051f858ba1a6c1ff335f5c6190f0a"
        },
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "supportsInterface(bytes4)",
          "isOperation(bytes32)",
          "isOperationPending(bytes32)",
          "isOperationReady(bytes32)",
          "isOperationDone(bytes32)",
          "getTimestamp(bytes32)",
          "getMinDelay()",
          "hashOperation(address,uint256,bytes,bytes32,bytes32)",
          "hashOperationBatch(address[],uint256[],bytes[],bytes32,bytes32)",
          "schedule(address,uint256,bytes,bytes32,bytes32,uint256)",
          "scheduleBatch(address[],uint256[],bytes[],bytes32,bytes32,uint256)",
          "cancel(bytes32)",
          "execute(address,uint256,bytes,bytes32,bytes32)",
          "executeBatch(address[],uint256[],bytes[],bytes32,bytes32)",
          "updateDelay(uint256)",
          "onERC721Received(address,address,uint256,bytes)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            },
            {
              "label": "_timestamps",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:34"
            },
            {
              "label": "_minDelay",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)48_storage",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:432"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3425_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IVotesUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getVotes(address)",
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "delegates(address)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "2a068734c026ac0588f9ecc3dad9aaffe9e15f5b44f41cb1b66055a8d20f392b",
          "withoutMetadata": "db1447c1afc82e7549d7f5fcd89add5143ffedea7ff0db3414fed90bf71ab239",
          "linkedWithoutMetadata": "db1447c1afc82e7549d7f5fcd89add5143ffedea7ff0db3414fed90bf71ab239"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20PermitUpgradeable": {
        "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:26",
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_address,t_struct(Counter)8000_storage)",
              "contract": "ERC20PermitUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:34"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "154",
              "type": "t_bytes32",
              "contract": "ERC20PermitUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:48",
              "renamedFrom": "_PERMIT_TYPEHASH"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC20PermitUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:138"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8000_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8000_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "f3bd1e4c7055c6575de5ded808829466f0558d27e32e529e89917004f9aed13d",
          "withoutMetadata": "061200bd9dab026742a91776a60ba53f7b6fd77ca1dab5f3d5826076bbfe96ed",
          "linkedWithoutMetadata": "061200bd9dab026742a91776a60ba53f7b6fd77ca1dab5f3d5826076bbfe96ed"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "b5e74e742bd4099c3ffcf7a96f2e718dbabfa19e72c3ca918ef83a7b26e51896",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:14",
        "version": {
          "withMetadata": "d7f80c247b6067cb172fd438e3f56990cc1ba886b39f426f5fcfade17ebc5f10",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "0db289179bd2697c54666413d56c72d7f752a1390311967e1368178ddcc6e4fc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "06a29fa468bce0c29e43a6e340cb8e0405e1af5aa98df2a0bd80568af54e15db",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/TimersUpgradeable.sol:9",
        "version": {
          "withMetadata": "8632367d465fd1a01c5104adfad8dfcded0f7b4844149bfeb3b11c3a640948c9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSAUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:14",
        "version": {
          "withMetadata": "a381b837b765d9b6704f87be559122e8700adefdeb7fb6e0d6e0cd09a820060e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EIP712Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "bfc458ad95b2ded7f4fb45a552dbb4ffa4b0136d124bb85bab880e8b7a6cba9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeCastUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol:21",
        "version": {
          "withMetadata": "c4d4f198b1bfc3e1ff27c9f490fa121b1b702219205648bb6e189334edeee8c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DoubleEndedQueueUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/DoubleEndedQueueUpgradeable.sol:21",
        "version": {
          "withMetadata": "3e17a9a1b09a12dcc411eeb255d96b0bf8f669929c7d2612ab544423532d8a2b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeCastUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "389f3bbb054d84723e25e07db563153cc56483f01e3348915d6a1ad61be48c00",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "44cc06288b20e467bcf8fd3ee273df3ac16b5dcefa8244020f901056346834d5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IGnosisSafe": {
        "src": "contracts/avatars/gnosisSafe/IGnosisSafe.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "getOwners()",
          "isOwner(address)",
          "getThreshold()",
          "getModulesPaginated(address,uint256)",
          "isModuleEnabled(address)",
          "setGuard(address)",
          "disableModule(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DSAuth": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:30",
        "version": {
          "withMetadata": "cf2abe74988e1b3dd1a75233792047a8c0c604779be6a9908a3db338d80dcdcf",
          "withoutMetadata": "7b102b6bd996ead1073c8438bb1716546d03e848703d4fda4c88910439821be9",
          "linkedWithoutMetadata": "7b102b6bd996ead1073c8438bb1716546d03e848703d4fda4c88910439821be9"
        },
        "inherit": [
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setOwner(address)",
          "owner()",
          "setAuthority(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DSAuth",
            "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DSAuthEvents": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:25",
        "version": {
          "withMetadata": "adb911002af224db5b930ee15b40d6c6c7ac376e2c437b4fe4640d8aa05e7fbd",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DSAuthority": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "canCall(address,address,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DSRoles": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:22",
        "inherit": [
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "getUserRoles(address)",
          "getCapabilityRoles(address,bytes4)",
          "isUserRoot(address)",
          "isCapabilityPublic(address,bytes4)",
          "hasUserRole(address,uint8)",
          "canCall(address,address,bytes4)",
          "setRootUser(address,bool)",
          "setUserRole(address,uint8,bool)",
          "setPublicCapability(address,bytes4,bool)",
          "setRoleCapability(uint8,address,bytes4,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IPermissionRegistry": {
        "src": "contracts/avatars/permissionReg/IPermissionRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "canCall(address,address,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "permissionRegistry": {
        "src": "contracts/avatars/permissionReg/permissionRegistry.sol:6",
        "version": {
          "withMetadata": "3608af58a914d9520f948adb2f34a39b3bb7222c1e262aa167bee20449959501",
          "withoutMetadata": "3608af58a914d9520f948adb2f34a39b3bb7222c1e262aa167bee20449959501",
          "linkedWithoutMetadata": "3608af58a914d9520f948adb2f34a39b3bb7222c1e262aa167bee20449959501"
        },
        "inherit": [
          "permissionRegistryBase",
          "springAvatar",
          "permissionRegHandler",
          "ERC721BurnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "DSRoles",
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "permissionRegistry",
            "src": "contracts/avatars/permissionReg/permissionRegistry.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "157",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "idTicker",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "210",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:15"
            },
            {
              "label": "tokenIDs",
              "offset": 0,
              "slot": "211",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "permissionRegistryBase": {
        "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:9",
        "version": {
          "withMetadata": "c7df70f88de6ce6889d1f9c97a454a5a58fbaa01d12a5e48a11ae3204c7665fe",
          "withoutMetadata": "e4f43219d22d7d1851dbb342450e257035447d098face85c7b638b47318fa219",
          "linkedWithoutMetadata": "e4f43219d22d7d1851dbb342450e257035447d098face85c7b638b47318fa219"
        },
        "inherit": [
          "springAvatar",
          "permissionRegHandler",
          "ERC721BurnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "DSRoles",
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "setLink(uint8,string)",
          "getNFT(address,uint8)",
          "getTokenID(address,uint8)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "idTicker",
            "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "157",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "idTicker",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "210",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:15"
            },
            {
              "label": "tokenIDs",
              "offset": 0,
              "slot": "211",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "permissionRegistryLogic": {
        "src": "contracts/avatars/permissionReg/permissionRegistryLogic.sol:7",
        "version": {
          "withMetadata": "5cc613bfac428a035fa74cdd6c0fec8df473af7d0ee638e33a83418e243c2150",
          "withoutMetadata": "e755622e3e290e8ab17363019dd9977f6c31b25d03b94656e7b98aa632773e4e",
          "linkedWithoutMetadata": "e755622e3e290e8ab17363019dd9977f6c31b25d03b94656e7b98aa632773e4e"
        },
        "inherit": [
          "permissionRegistryBase",
          "springAvatar",
          "permissionRegHandler",
          "ERC721BurnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "logicBase",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "DSRoles",
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "permissionRegistryLogic",
            "src": "contracts/avatars/permissionReg/permissionRegistryLogic.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "157",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "158",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "257",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "258",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "259",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "260",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "261",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "262",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "263",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "307",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "357",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "358",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "idTicker",
              "offset": 0,
              "slot": "359",
              "type": "t_uint256",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "360",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:15"
            },
            {
              "label": "tokenIDs",
              "offset": 0,
              "slot": "361",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "old": {
        "src": "contracts/avatars/wrapperFactory/old.sol:7",
        "version": {
          "withMetadata": "86fadb95793f5599aad2b2030388da9b26298bf0cb974186322c6daaeeffb7e1",
          "withoutMetadata": "94002cfeefec71c02b22f6d549c3e6af490c6797f015b9d476acfc133359ef82",
          "linkedWithoutMetadata": "94002cfeefec71c02b22f6d549c3e6af490c6797f015b9d476acfc133359ef82"
        },
        "inherit": [
          "wrapperFactoryBase",
          "springAvatar",
          "permissionRegHandler",
          "logicBase",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "old",
            "src": "contracts/avatars/wrapperFactory/old.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "202",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "203",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:19"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "204",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "205",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:21"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "206",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:22"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "wrapperFactory": {
        "src": "contracts/avatars/wrapperFactory/wrapperFactory.sol:6",
        "version": {
          "withMetadata": "bfc844b755186b076986298fb97c79b8406e384ea5c693551a7d57e4197d1767",
          "withoutMetadata": "bfc844b755186b076986298fb97c79b8406e384ea5c693551a7d57e4197d1767",
          "linkedWithoutMetadata": "bfc844b755186b076986298fb97c79b8406e384ea5c693551a7d57e4197d1767"
        },
        "inherit": [
          "wrapperFactoryBase",
          "springAvatar",
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "wrapperFactory",
            "src": "contracts/avatars/wrapperFactory/wrapperFactory.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:19"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:21"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:22"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "wrapperFactoryBase": {
        "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:14",
        "version": {
          "withMetadata": "da0946b596204aea7f48fa5a47b7cabd0caa0fd3d72bfadf2535b8f010bc6875",
          "withoutMetadata": "328ba817fcf66d3e08726c1636154f5e99066dcf164ff4b13baa19db39dbb06a",
          "linkedWithoutMetadata": "328ba817fcf66d3e08726c1636154f5e99066dcf164ff4b13baa19db39dbb06a"
        },
        "inherit": [
          "springAvatar",
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "createSafeWrapperWithBudget(address,address,uint256,uint256,address,uint256,address[],uint8,string,string)",
          "delegateSetup(address)",
          "enableModule(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "EMPTY_DATA",
            "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:19"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:21"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:22"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "wrapperFactoryLogic": {
        "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:13",
        "version": {
          "withMetadata": "7e8358c367cc88dcfaa95ef65a1e1ae8ef7fed01ad740f214b63c074b08a88c5",
          "withoutMetadata": "dc1f9db8ea38173453a166d74809958d733bca8f6c6928b6a4cf3879c778928e",
          "linkedWithoutMetadata": "dc1f9db8ea38173453a166d74809958d733bca8f6c6928b6a4cf3879c778928e"
        },
        "inherit": [
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createSafeWrapperWithBudget(address,uint256,uint256,address,uint256,address[],uint256)",
          "delegateSetup(address)",
          "enableModule(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "wrapperFactoryLogic",
            "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "EMPTY_DATA",
            "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:18"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:19"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:20"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:21"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "permissionRegHandler": {
        "src": "contracts/core/permissionRegHandler.sol:5",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "settingsModuleHandler": {
        "src": "contracts/core/settingsModuleHandler.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springAvatar": {
        "src": "contracts/core/springAvatar.sol:14",
        "inherit": [
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "setPermissionReg(address)",
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springModifier": {
        "src": "contracts/core/springModifier.sol:10",
        "inherit": [
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "setPermissionReg(address)",
          "enableModification(address,address)",
          "enableSettingsModule(address)",
          "disableSettingsModule(address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springModule": {
        "src": "contracts/core/springModule.sol:17",
        "inherit": [
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setPermissionReg(address)",
          "enableAvatar(address)",
          "disableAvatar(address,address)",
          "isAvatarEnabled(address)",
          "getAvatarsPaginated(address,uint256)",
          "setTarget(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "dummyAvatar": {
        "src": "contracts/mockContracts/dummyAvatar.sol:7",
        "version": {
          "withMetadata": "faabfae7854473e11ed72e64aad3c64089ac2aba79b690285e5921b9cf8e0c89",
          "withoutMetadata": "5d989797c862827700799041ceec506e049948ad41dffa88616256eb9db922e2",
          "linkedWithoutMetadata": "5d989797c862827700799041ceec506e049948ad41dffa88616256eb9db922e2"
        },
        "inherit": [
          "Executor"
        ],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "setSuccess(bool)",
          "getSuccess()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "testSuccessful",
            "src": "contracts/mockContracts/dummyAvatar.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "testSuccessful",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "dummyAvatar",
              "src": "contracts/mockContracts/dummyAvatar.sol:8"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "dummyBridge": {
        "src": "contracts/mockContracts/dummyBridge.sol:7",
        "version": {
          "withMetadata": "6a03e7aa118cc613cb15f5ae5eb66f6f50132fd63d57ac9e23f4321b94d06739",
          "withoutMetadata": "aaec889a9e6a3220f4ad22d0025f8f4b59f8d4e4ac9b90c6b6dc835f937f748b",
          "linkedWithoutMetadata": "aaec889a9e6a3220f4ad22d0025f8f4b59f8d4e4ac9b90c6b6dc835f937f748b"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "requireToPassMessage(address payable,bytes,uint256)",
          "messageSender()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "dummyModule": {
        "src": "contracts/mockContracts/dummyModule.sol:14",
        "version": {
          "withMetadata": "5e9d920d986b187c0c3352632d8ede86ce45088bd25b6da071a1a9b1be674446",
          "withoutMetadata": "4a94de758be6169fc45937395961394774b308f0d336a3f734683a2f726ff708",
          "linkedWithoutMetadata": "4a94de758be6169fc45937395961394774b308f0d336a3f734683a2f726ff708"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exec(address,uint256,bytes,address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "budgetModifier": {
        "src": "contracts/modifiers/budgetModifier.sol:6",
        "version": {
          "withMetadata": "88b3574f18d38fbd88b68d300871bf08999ee617c9ca6b9c1de5e73f9e55195f",
          "withoutMetadata": "88b3574f18d38fbd88b68d300871bf08999ee617c9ca6b9c1de5e73f9e55195f",
          "linkedWithoutMetadata": "88b3574f18d38fbd88b68d300871bf08999ee617c9ca6b9c1de5e73f9e55195f"
        },
        "inherit": [
          "budgetModifierBase",
          "springModifier",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "budgetModifier",
            "src": "contracts/modifiers/budgetModifier.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            },
            {
              "label": "budgets",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_struct(budget)15655_storage)",
              "contract": "budgetModifierBase",
              "src": "contracts/modifiers/budgetModifierBase.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(budget)15655_storage)": {
              "label": "mapping(address => struct budgetModifierBase.budget)",
              "numberOfBytes": "32"
            },
            "t_struct(budget)15655_storage": {
              "label": "struct budgetModifierBase.budget",
              "members": [
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastReset",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "frozen",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "budgetModifierBase": {
        "src": "contracts/modifiers/budgetModifierBase.sol:9",
        "version": {
          "withMetadata": "b70ebd750fd1a5801bb01d420015339ad7f217a5b8e41261a6891a7e7edec781",
          "withoutMetadata": "927ee70732fdcdcfd5785bf513c94fa47c5095a6c0808cd34518eaa5b442a93a",
          "linkedWithoutMetadata": "927ee70732fdcdcfd5785bf513c94fa47c5095a6c0808cd34518eaa5b442a93a"
        },
        "inherit": [
          "springModifier",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "setBudget(address,uint256,uint256)",
          "getBudget(address)",
          "setFreeze(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            },
            {
              "label": "budgets",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_struct(budget)15655_storage)",
              "contract": "budgetModifierBase",
              "src": "contracts/modifiers/budgetModifierBase.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(budget)15655_storage)": {
              "label": "mapping(address => struct budgetModifierBase.budget)",
              "numberOfBytes": "32"
            },
            "t_struct(budget)15655_storage": {
              "label": "struct budgetModifierBase.budget",
              "members": [
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastReset",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "frozen",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "budgetModifierLogic": {
        "src": "contracts/modifiers/budgetModifierLogic.sol:7",
        "version": {
          "withMetadata": "a822f4c0303c7afdd367af1b7da25c7ab28c335c58e2a0bcb6d862c7797bf43f",
          "withoutMetadata": "4308920101379d17d4481c06f5de3b4532fe04ef9c6f3ddb786bf5b4d8c24a08",
          "linkedWithoutMetadata": "4308920101379d17d4481c06f5de3b4532fe04ef9c6f3ddb786bf5b4d8c24a08"
        },
        "inherit": [
          "logicBase",
          "budgetModifierBase",
          "springModifier",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "budgetModifierLogic",
            "src": "contracts/modifiers/budgetModifierLogic.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "203",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "206",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "207",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            },
            {
              "label": "budgets",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_struct(budget)15655_storage)",
              "contract": "budgetModifierBase",
              "src": "contracts/modifiers/budgetModifierBase.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(budget)15655_storage)": {
              "label": "mapping(address => struct budgetModifierBase.budget)",
              "numberOfBytes": "32"
            },
            "t_struct(budget)15655_storage": {
              "label": "struct budgetModifierBase.budget",
              "members": [
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastReset",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "frozen",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20VotesUpgradeable": {
        "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:29",
        "inherit": [
          "ERC20PermitUpgradeable",
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "IVotesUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeCastUpgradeable",
          "MathUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "checkpoints(address,uint32)",
          "numCheckpoints(address)",
          "delegates(address)",
          "getVotes(address)",
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_address,t_struct(Counter)8000_storage)",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "154",
              "type": "t_bytes32",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
              "renamedFrom": "_PERMIT_TYPEHASH"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:46"
            },
            {
              "label": "_checkpoints",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)16162_storage)dyn_storage)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:47"
            },
            {
              "label": "_totalSupplyCheckpoints",
              "offset": 0,
              "slot": "206",
              "type": "t_array(t_struct(Checkpoint)16162_storage)dyn_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:48"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:323"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Checkpoint)16162_storage)dyn_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Checkpoint)16162_storage)dyn_storage)": {
              "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8000_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)16162_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint224",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8000_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint224": {
              "label": "uint224",
              "numberOfBytes": "28"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovToken": {
        "src": "contracts/modules/GovernorV2/GovToken.sol:15",
        "version": {
          "withMetadata": "3c45b5c74d3e0e6324b6838fb3d2cb4214b6624084c0e3569ca0a1dc98578374",
          "withoutMetadata": "da9e7fc022431939edd904b25bb898f21c737f2989a8f385751ebc0c5c442f1a",
          "linkedWithoutMetadata": "da9e7fc022431939edd904b25bb898f21c737f2989a8f385751ebc0c5c442f1a"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "OwnableUpgradeable",
          "ERC20VotesUpgradeable",
          "ERC20PermitUpgradeable",
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "IVotesUpgradeable",
          "springAvatar",
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string)",
          "transferFrom(address,address,uint256)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "lockVotes(address,uint256,uint256)",
          "freeVotes(address,uint256,uint256)",
          "getLockedVotes(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "54",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "56",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "103",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_address,t_struct(Counter)8000_storage)",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "155",
              "type": "t_bytes32",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
              "renamedFrom": "_PERMIT_TYPEHASH"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "156",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:46"
            },
            {
              "label": "_checkpoints",
              "offset": 0,
              "slot": "206",
              "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)16162_storage)dyn_storage)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:47"
            },
            {
              "label": "_totalSupplyCheckpoints",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_struct(Checkpoint)16162_storage)dyn_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:48"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "208",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:323"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "255",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "355",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "lockedVotes",
              "offset": 0,
              "slot": "405",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GovToken",
              "src": "contracts/modules/GovernorV2/GovToken.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Checkpoint)16162_storage)dyn_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Checkpoint)16162_storage)dyn_storage)": {
              "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8000_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)16162_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint224",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8000_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint224": {
              "label": "uint224",
              "numberOfBytes": "28"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorCoreV2": {
        "src": "contracts/modules/GovernorV2/GovernorCoreV2.sol:15",
        "version": {
          "withMetadata": "2bb14e96db3a3ed21bedc29bae81051105a12aeae01f4258fb2ad3b5a56ec483",
          "withoutMetadata": "a29630ef74df2d4811a064ba10e5f03b9a97009b4416feefdac7110dd15ef847",
          "linkedWithoutMetadata": "a29630ef74df2d4811a064ba10e5f03b9a97009b4416feefdac7110dd15ef847"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "GovernorTimelockControlUpgradeable",
          "GovernorVotesQuorumFractionUpgradeable",
          "GovernorVotes",
          "GovernorCountingSimpleUpgradeable",
          "GovernorSettingsUpgradeable",
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorTimelockUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address,address,uint256,uint256)",
          "votingDelay()",
          "votingPeriod()",
          "quorum(uint256)",
          "state(uint256)",
          "propose(address[],uint256[],bytes[],string,uint256)",
          "proposalThreshold()",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorTimelockUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "253",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18485_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "255",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "257",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "_votingDelay",
              "offset": 0,
              "slot": "303",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:18"
            },
            {
              "label": "_votingPeriod",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:19"
            },
            {
              "label": "_proposalThreshold",
              "offset": 0,
              "slot": "305",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "306",
              "type": "t_array(t_uint256)47_storage",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:160"
            },
            {
              "label": "minStake",
              "offset": 0,
              "slot": "353",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:18"
            },
            {
              "label": "maxStake",
              "offset": 0,
              "slot": "354",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:19"
            },
            {
              "label": "_proposalVotes",
              "offset": 0,
              "slot": "355",
              "type": "t_mapping(t_uint256,t_struct(ProposalVote)17452_storage)",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:59"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "356",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:241"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "405",
              "type": "t_contract(GovToken)17099",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "406",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:78"
            },
            {
              "label": "_quorumNumerator",
              "offset": 0,
              "slot": "456",
              "type": "t_uint256",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "457",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:124"
            },
            {
              "label": "_timelock",
              "offset": 0,
              "slot": "506",
              "type": "t_contract(TimelockControllerUpgradeable)4870",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:32"
            },
            {
              "label": "_timelockIds",
              "offset": 0,
              "slot": "507",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "508",
              "type": "t_array(t_uint256)48_storage",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:243"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "556",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "606",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GovToken)17099": {
              "label": "contract GovToken",
              "numberOfBytes": "20"
            },
            "t_contract(TimelockControllerUpgradeable)4870": {
              "label": "contract TimelockControllerUpgradeable",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18485_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalVote)17452_storage)": {
              "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18485_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(ProposalVote)17452_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
              "members": [
                {
                  "label": "againstVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "forVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "abstainVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "proposerStake",
                  "type": "t_struct(Stake)17435_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "objectorStake",
                  "type": "t_struct(Stake)17435_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "hasVoted",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(Stake)17435_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.Stake",
              "members": [
                {
                  "label": "staker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorCountingSimpleUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:14",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "COUNTING_MODE()",
          "hasVoted(uint256,address)",
          "proposalVotes(uint256)",
          "noObjections(uint256)",
          "getProposer(uint256)",
          "getObjector(uint256)",
          "proposalThreshold()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18485_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "minStake",
              "offset": 0,
              "slot": "253",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:18"
            },
            {
              "label": "maxStake",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:19"
            },
            {
              "label": "_proposalVotes",
              "offset": 0,
              "slot": "255",
              "type": "t_mapping(t_uint256,t_struct(ProposalVote)17452_storage)",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:59"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:241"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18485_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalVote)17452_storage)": {
              "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18485_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(ProposalVote)17452_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
              "members": [
                {
                  "label": "againstVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "forVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "abstainVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "proposerStake",
                  "type": "t_struct(Stake)17435_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "objectorStake",
                  "type": "t_struct(Stake)17435_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "hasVoted",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(Stake)17435_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.Stake",
              "members": [
                {
                  "label": "staker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorSettingsUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:14",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "votingDelay()",
          "votingPeriod()",
          "proposalThreshold()",
          "setVotingDelay(uint256)",
          "setVotingPeriod(uint256)",
          "setProposalThreshold(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18485_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "_votingDelay",
              "offset": 0,
              "slot": "253",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:18"
            },
            {
              "label": "_votingPeriod",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:19"
            },
            {
              "label": "_proposalThreshold",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)47_storage",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:160"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18485_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18485_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorTimelockControlUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:27",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorTimelockUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "state(uint256)",
          "timelock()",
          "proposalEta(uint256)",
          "queue(address[],uint256[],bytes[],bytes32)",
          "updateTimelock(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorTimelockUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "253",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18485_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "255",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "257",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "_timelock",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(TimelockControllerUpgradeable)4870",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:32"
            },
            {
              "label": "_timelockIds",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)48_storage",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:243"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(TimelockControllerUpgradeable)4870": {
              "label": "contract TimelockControllerUpgradeable",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18485_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18485_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:32",
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "DoubleEndedQueueUpgradeable",
          "SafeCastUpgradeable",
          "TimersUpgradeable",
          "MathUpgradeable",
          "AddressUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "()",
          "supportsInterface(bytes4)",
          "name()",
          "version()",
          "hashProposal(address[],uint256[],bytes[],bytes32)",
          "state(uint256)",
          "proposalSnapshot(uint256)",
          "proposalDeadline(uint256)",
          "proposalThreshold()",
          "noObjections(uint256)",
          "object(uint256,uint256,string,bytes)",
          "propose(address[],uint256[],bytes[],string,uint256)",
          "execute(address[],uint256[],bytes[],bytes32)",
          "retrieveStake(uint256)",
          "getVotes(address,uint256)",
          "getVotesWithParams(address,uint256,bytes)",
          "castVote(uint256,uint8,uint256)",
          "castVoteWithReason(uint256,uint8,uint256,string)",
          "castVoteWithReasonAndParams(uint256,uint8,uint256,string,bytes)",
          "castVoteBySig(uint256,uint8,uint256,uint8,bytes32,bytes32)",
          "castVoteWithReasonAndParamsBySig(uint256,uint8,uint256,string,bytes,uint8,bytes32,bytes32)",
          "getProposer(uint256)",
          "getObjector(uint256)",
          "relay(address,uint256,bytes)",
          "onERC721Received(address,address,uint256,bytes)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18485_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18485_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18485_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorVotes": {
        "src": "contracts/modules/GovernorV2/GovernorVotes.sol:17",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18485_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "253",
              "type": "t_contract(GovToken)17099",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "254",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:78"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GovToken)17099": {
              "label": "contract GovToken",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18485_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18485_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorVotesQuorumFractionUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:17",
        "inherit": [
          "GovernorVotes",
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "quorumNumerator()",
          "quorumDenominator()",
          "quorum(uint256)",
          "updateQuorumNumerator(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18485_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "253",
              "type": "t_contract(GovToken)17099",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "254",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:78"
            },
            {
              "label": "_quorumNumerator",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:124"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GovToken)17099": {
              "label": "contract GovToken",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18485_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18485_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGovernorTimelockUpgradeable": {
        "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:14",
        "inherit": [
          "IGovernorUpgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "timelock()",
          "proposalEta(uint256)",
          "queue(address[],uint256[],bytes[],bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorTimelockUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGovernorUpgradeable": {
        "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:14",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "version()",
          "COUNTING_MODE()",
          "hashProposal(address[],uint256[],bytes[],bytes32)",
          "state(uint256)",
          "proposalSnapshot(uint256)",
          "proposalDeadline(uint256)",
          "votingDelay()",
          "votingPeriod()",
          "quorum(uint256)",
          "getVotes(address,uint256)",
          "getVotesWithParams(address,uint256,bytes)",
          "hasVoted(uint256,address)",
          "propose(address[],uint256[],bytes[],string,uint256)",
          "execute(address[],uint256[],bytes[],bytes32)",
          "castVote(uint256,uint8,uint256)",
          "castVoteWithReason(uint256,uint8,uint256,string)",
          "castVoteWithReasonAndParams(uint256,uint8,uint256,string,bytes)",
          "castVoteBySig(uint256,uint8,uint256,uint8,bytes32,bytes32)",
          "castVoteWithReasonAndParamsBySig(uint256,uint8,uint256,string,bytes,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IVotes": {
        "src": "contracts/modules/GovernorV2/IVotes.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "useVotes(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimeLockModuleV2": {
        "src": "contracts/modules/GovernorV2/TimeLockModuleV2.sol:6",
        "version": {
          "withMetadata": "0900f001d1b4258e4f9f09db2853aaf4b285473751e76fc13f97f34704f1f32e",
          "withoutMetadata": "78f7ee762c1189049a4b8afc7c11072f258a1cdb9a78831f3134bcc0688006c9",
          "linkedWithoutMetadata": "78f7ee762c1189049a4b8afc7c11072f258a1cdb9a78831f3134bcc0688006c9"
        },
        "inherit": [
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "TimelockControllerUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint256,address[],address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            },
            {
              "label": "_timestamps",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:34"
            },
            {
              "label": "_minDelay",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)48_storage",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:432"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "251",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "252",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "253",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3425_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "bridgeProxyLogic": {
        "src": "contracts/modules/bridgeModules/bridgeProxyLogic.sol:18",
        "version": {
          "withMetadata": "2eb66b696914f3e7ba49a7143edb281d995bd60c9243fd4ca1b3c9057a9aa8d3",
          "withoutMetadata": "a05fde3485225c346f01cc60117bf7c82f4aaec47c33170e8d74535950d29e6c",
          "linkedWithoutMetadata": "a05fde3485225c346f01cc60117bf7c82f4aaec47c33170e8d74535950d29e6c"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "EternalStorage",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "()",
          "initialize(bytes)",
          "setPermissionReg(address)",
          "setBridgeContract(address)",
          "setMediatorContractOnOtherSide(address)",
          "setRequestGasLimit(uint256)",
          "bridgeContract()",
          "mediatorContractOnOtherSide()",
          "requestGasLimit()",
          "executeTransactionFromAMB(address,uint256,bytes,address,uint8)",
          "executeGenericTransactionFromAMB(address,bytes)",
          "execTransactionFromModule(address,uint256,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "uintStorage",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:9"
            },
            {
              "label": "stringStorage",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_bytes32,t_string_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:10"
            },
            {
              "label": "addressStorage",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:11"
            },
            {
              "label": "bytesStorage",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_bytes32,t_bytes_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:12"
            },
            {
              "label": "boolStorage",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:13"
            },
            {
              "label": "intStorage",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_bytes32,t_int256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:14"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "163",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_int256)": {
              "label": "mapping(bytes32 => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAMB": {
        "src": "contracts/modules/bridgeModules/interfaces/IAMB.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "messageSender()",
          "maxGasPerTx()",
          "transactionHash()",
          "messageId()",
          "messageSourceChainId()",
          "messageCallStatus(bytes32)",
          "failedMessageDataHash(bytes32)",
          "failedMessageReceiver(bytes32)",
          "failedMessageSender(bytes32)",
          "requireToPassMessage(address,bytes,uint256)",
          "requireToConfirmMessage(address,bytes,uint256)",
          "requireToGetInformation(bytes32,bytes)",
          "sourceChainId()",
          "destinationChainId()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EternalStorage": {
        "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:8",
        "version": {
          "withMetadata": "4e416fa7f5f575893334c40b6621898f58713aeaa3196919a6319540e9b1f939",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "uintStorage",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:9"
            },
            {
              "label": "stringStorage",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_string_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:10"
            },
            {
              "label": "addressStorage",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:11"
            },
            {
              "label": "bytesStorage",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_bytes32,t_bytes_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:12"
            },
            {
              "label": "boolStorage",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:13"
            },
            {
              "label": "intStorage",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_int256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_int256)": {
              "label": "mapping(bytes32 => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "safeWrapper": {
        "src": "contracts/modules/safeWrapper/safeWrapper.sol:6",
        "version": {
          "withMetadata": "3d642c101a791e92174f767fbb053a84279a13b4936276d026e8fe58c230a5c0",
          "withoutMetadata": "3d642c101a791e92174f767fbb053a84279a13b4936276d026e8fe58c230a5c0",
          "linkedWithoutMetadata": "3d642c101a791e92174f767fbb053a84279a13b4936276d026e8fe58c230a5c0"
        },
        "inherit": [
          "safeWrapperBase",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "(address,address,string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "safeWrapper",
            "src": "contracts/modules/safeWrapper/safeWrapper.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "safe",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:14"
            },
            {
              "label": "sector",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "safeWrapperBase": {
        "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:9",
        "version": {
          "withMetadata": "375b916cc7d6aa2f92a3eaa1333b022ac9de68bc491e041c16dc8bfe50510c8b",
          "withoutMetadata": "b6a51f32d7983bb46cc12db4946292a2ce39cd4755931e3f176c12450d4e2d69",
          "linkedWithoutMetadata": "b6a51f32d7983bb46cc12db4946292a2ce39cd4755931e3f176c12450d4e2d69"
        },
        "inherit": [
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "setPermissionReg(address)",
          "sendEth(address,uint256,address)",
          "removeOwner(address,uint256)",
          "addOwner(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "safe",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:14"
            },
            {
              "label": "sector",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "safeWrapperLogic": {
        "src": "contracts/modules/safeWrapper/safeWrapperLogic.sol:8",
        "version": {
          "withMetadata": "cfc5090ec09e33f372e36ab034522aa1961365c3410058010d070fff0816d07e",
          "withoutMetadata": "ad5e4be889d37448826b7b4e4e26610171accf71b6f0c99058314b895e368922",
          "linkedWithoutMetadata": "ad5e4be889d37448826b7b4e4e26610171accf71b6f0c99058314b895e368922"
        },
        "inherit": [
          "logicBase",
          "safeWrapperBase",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "safeWrapperLogic",
            "src": "contracts/modules/safeWrapper/safeWrapperLogic.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "203",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "safe",
              "offset": 0,
              "slot": "206",
              "type": "t_address",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "207",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:14"
            },
            {
              "label": "sector",
              "offset": 0,
              "slot": "208",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGnosisSafeProxy": {
        "src": "contracts/proxyContracts/factory/IGnosisSafeProxy.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IProxyCallback": {
        "src": "contracts/proxyContracts/factory/IProxyCallback.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "springFactory": {
        "src": "contracts/proxyContracts/factory/springFactory.sol:9",
        "version": {
          "withMetadata": "b2aee643f8213d578bee9011e0b9063bfb2c01092b716b8abf7b45ed05be3de5",
          "withoutMetadata": "267efa799fe2876c80fc8949ec20d845eb1e24d3d711552a734c102ce166f5df",
          "linkedWithoutMetadata": "267efa799fe2876c80fc8949ec20d845eb1e24d3d711552a734c102ce166f5df"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "proxyRuntimeCode()",
          "proxyCreationCode()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "logicBase": {
        "src": "contracts/proxyContracts/logic/logicBase.sol:8",
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springProxy": {
        "src": "contracts/proxyContracts/proxy/springProxy.sol:9",
        "version": {
          "withMetadata": "610b3e6bf5909dda45a05c305e9a5003ec1098af6b60a6a02ed825cd931bc55f",
          "withoutMetadata": "610b3e6bf5909dda45a05c305e9a5003ec1098af6b60a6a02ed825cd931bc55f",
          "linkedWithoutMetadata": "610b3e6bf5909dda45a05c305e9a5003ec1098af6b60a6a02ed825cd931bc55f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "console",
          "Address",
          "StorageSlot"
        ],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "springProxy",
            "src": "contracts/proxyContracts/proxy/springProxy.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "c100f561d0dd92dba3736f656c282e8f21b151345f8f7bb341c5b2afdc4dc3f2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "GnosisSafe": {
        "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:19",
        "version": {
          "withMetadata": "5bf5fca9c2200523da52d1a5a25c79bbbbe65d85ba6c17260910f952feb77ecf",
          "withoutMetadata": "b0dafd629c7d73386b769d413f1b7e5b04ef16c873c373fddae6ff731dc119fa",
          "linkedWithoutMetadata": "b0dafd629c7d73386b769d413f1b7e5b04ef16c873c373fddae6ff731dc119fa"
        },
        "inherit": [
          "GuardManager",
          "StorageAccessible",
          "FallbackManager",
          "ISignatureValidatorConstants",
          "SecuredTokenTransfer",
          "SignatureDecoder",
          "OwnerManager",
          "ModuleManager",
          "Executor",
          "SelfAuthorized",
          "Singleton",
          "EtherPaymentFallback"
        ],
        "libraries": [
          "GnosisSafeMath"
        ],
        "methods": [
          "()",
          "setup(address[],uint256,address,bytes,address,address,uint256,address payable)",
          "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes)",
          "checkSignatures(bytes32,bytes,bytes)",
          "checkNSignatures(bytes32,bytes,bytes,uint256)",
          "requiredTxGas(address,uint256,bytes,uint8)",
          "approveHash(bytes32)",
          "getChainId()",
          "domainSeparator()",
          "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)",
          "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafe",
            "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:59"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            },
            {
              "label": "owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            },
            {
              "label": "nonce",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:51"
            },
            {
              "label": "_deprecatedDomainSeparator",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes32",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:52"
            },
            {
              "label": "signedMessages",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:54"
            },
            {
              "label": "approvedHashes",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
              "label": "mapping(address => mapping(bytes32 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Executor": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/Executor.sol:7",
        "version": {
          "withMetadata": "48619bf387511c5a10b45ee94807128680593ef546d04f01a27eabf49556c7fd",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FallbackManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/FallbackManager.sol:8",
        "version": {
          "withMetadata": "dc2e82ceb477aaedb214fa9fa713475cf985ee3fb52807485e8ffb5a136baebf",
          "withoutMetadata": "69f3af1e7187f01e1814bbf1bb39db08a4ec97d96ed0fd50031fc06be9727d00",
          "linkedWithoutMetadata": "69f3af1e7187f01e1814bbf1bb39db08a4ec97d96ed0fd50031fc06be9727d00"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setFallbackHandler(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Guard": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GuardManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:27",
        "version": {
          "withMetadata": "33f926cafe41259dcea04aaf38b9d648588b9c3c637f28568f169decdf5a90b3",
          "withoutMetadata": "0a932d5475d91581a9fef336ea4a1e989b74f706b6caf1cc54201540170dc099",
          "linkedWithoutMetadata": "0a932d5475d91581a9fef336ea4a1e989b74f706b6caf1cc54201540170dc099"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setGuard(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ModuleManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:10",
        "version": {
          "withMetadata": "ff1679fefde03297bd1da3ffbc1236e691f5e83cc5a1402035baec922e669e8d",
          "withoutMetadata": "62fea39f8e4489b1904c18ff2d73a421d08acbedb8a365fbfd6491fcc830c9f2",
          "linkedWithoutMetadata": "62fea39f8e4489b1904c18ff2d73a421d08acbedb8a365fbfd6491fcc830c9f2"
        },
        "inherit": [
          "Executor",
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "modules",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "OwnerManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:8",
        "version": {
          "withMetadata": "1d81ca17a9fcfa25ce9339ce2680655269fb902d62272bbbfb3734abc2eb18ca",
          "withoutMetadata": "79fecfeb20f4939a246b45855d3281a3ec54ae9e3cbd6d7c32b51fd008eb6995",
          "linkedWithoutMetadata": "79fecfeb20f4939a246b45855d3281a3ec54ae9e3cbd6d7c32b51fd008eb6995"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "addOwnerWithThreshold(address,uint256)",
          "removeOwner(address,address,uint256)",
          "swapOwner(address,address,address)",
          "changeThreshold(uint256)",
          "getThreshold()",
          "isOwner(address)",
          "getOwners()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owners",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Enum": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Enum.sol:6",
        "version": {
          "withMetadata": "fa710b28020d20e4d963110f65c100a0c3da47d9fc1e1731c23b1799b1d4c1fb",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EtherPaymentFallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/EtherPaymentFallback.sol:6",
        "version": {
          "withMetadata": "187ba1ab7509d8a8a41148e5346c4676a97ef3d8aa071ba4bf4e8d3d702d2a82",
          "withoutMetadata": "2df5b0a6e815736a589f0331577b6d497e1b407aaa2113a81067671b40e55a4b",
          "linkedWithoutMetadata": "2df5b0a6e815736a589f0331577b6d497e1b407aaa2113a81067671b40e55a4b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SecuredTokenTransfer": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SecuredTokenTransfer.sol:6",
        "version": {
          "withMetadata": "c4a369d358aa1c59074eeb091afd702a8d7279190a5bc1fd805850d6fdff6410",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfAuthorized": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol:6",
        "version": {
          "withMetadata": "b276ff9268a1ccf410bee71fafff8878d987844fecc7d0a7fb7c8788c63eb96d",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureDecoder": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SignatureDecoder.sol:6",
        "version": {
          "withMetadata": "d4004664ae4ec477c1a4cae24dbf247fa9ec109cdaf9a0146c3721cc8f2b42b6",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Singleton": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:7",
        "version": {
          "withMetadata": "a741b85f7f5542acf60e6428bc627b238303a051fd1480b1237fbd25c2770440",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageAccessible": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/StorageAccessible.sol:6",
        "version": {
          "withMetadata": "063b2726c4c93e31ec6088b838689586ea1d616d59a03b7a46a4cf0a75119694",
          "withoutMetadata": "e3cefdf9f2f60bc1238dfe2249e501fdbc52930b5866c7829ce07a7b370ccae9",
          "linkedWithoutMetadata": "e3cefdf9f2f60bc1238dfe2249e501fdbc52930b5866c7829ce07a7b370ccae9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getStorageAt(uint256,uint256)",
          "simulateAndRevert(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeMath": {
        "src": "@gnosis.pm/safe-contracts/contracts/external/GnosisSafeMath.sol:10",
        "version": {
          "withMetadata": "8613af15c62060eda9d711eb50192cf0dc17f5c0059409395b9646f0fa8045fc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISignatureValidator": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:9",
        "inherit": [
          "ISignatureValidatorConstants"
        ],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISignatureValidatorConstants": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:4",
        "version": {
          "withMetadata": "da269993427b7502b85b990935687b77da03ef51e6fb492dd50f74b1f687b657",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:13",
        "version": {
          "withMetadata": "4403647dcbde7449432007f15728744e2691e4b245342cfb676827d2eea3141b",
          "withoutMetadata": "3cb953a9f4cf894eadc4bcfa5dfe2e06c70518a0a27283970fd270c253168eb0",
          "linkedWithoutMetadata": "3cb953a9f4cf894eadc4bcfa5dfe2e06c70518a0a27283970fd270c253168eb0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafeProxy",
            "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "GnosisSafeProxy",
              "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "masterCopy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeProxyFactory": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxyFactory.sol:9",
        "version": {
          "withMetadata": "dade3c6a8192a11725263d527b917a33a210e656185fc9e8ad8ea617359a2b52",
          "withoutMetadata": "1ce43b946dcd7ba295e1269263fd1b6868ab93a8b7b5ca5fc015045d5aa9229f",
          "linkedWithoutMetadata": "1ce43b946dcd7ba295e1269263fd1b6868ab93a8b7b5ca5fc015045d5aa9229f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProxy(address,bytes)",
          "proxyRuntimeCode()",
          "proxyCreationCode()",
          "createProxyWithNonce(address,bytes,uint256)",
          "createProxyWithCallback(address,bytes,uint256,address)",
          "calculateCreateProxyWithNonceAddress(address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IProxyCreationCallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Modifier": {
        "src": "@gnosis.pm/zodiac/contracts/core/Modifier.sol:9",
        "inherit": [
          "IAvatar",
          "Module",
          "Guardable",
          "FactoryFriendly",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "disableModule(address,address)",
          "enableModule(address)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "avatar",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:12"
            },
            {
              "label": "target",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:14"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Modifier",
              "src": "@gnosis.pm/zodiac/contracts/core/Modifier.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Module": {
        "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:10",
        "inherit": [
          "Guardable",
          "FactoryFriendly",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setAvatar(address)",
          "setTarget(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "avatar",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:12"
            },
            {
              "label": "target",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FactoryFriendly": {
        "src": "@gnosis.pm/zodiac/contracts/factory/FactoryFriendly.sol:8",
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setUp(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseGuard": {
        "src": "@gnosis.pm/zodiac/contracts/guard/BaseGuard.sol:8",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Guardable": {
        "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:9",
        "version": {
          "withMetadata": "8729c389f8175a94eeb27a597c20f2db4d8f6e46d1cba977ea1ac2254b833a49",
          "withoutMetadata": "bf19dd5c52ee40424bf5e1b4367dc2f2fb49a84d7aa19039b850b5d6df6b1047",
          "linkedWithoutMetadata": "bf19dd5c52ee40424bf5e1b4367dc2f2fb49a84d7aa19039b850b5d6df6b1047"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setGuard(address)",
          "getGuard()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAvatar": {
        "src": "@gnosis.pm/zodiac/contracts/interfaces/IAvatar.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IGuard": {
        "src": "@gnosis.pm/zodiac/contracts/interfaces/IGuard.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3425_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TimelockControllerUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:27",
        "version": {
          "withMetadata": "93c2ecaae320d6300899f2a7b35c84e2fd2be0c7a82f11d199e592dc9e3d4ef4",
          "withoutMetadata": "2090350735f5c3bdb96f361d12957eb370c051f858ba1a6c1ff335f5c6190f0a",
          "linkedWithoutMetadata": "2090350735f5c3bdb96f361d12957eb370c051f858ba1a6c1ff335f5c6190f0a"
        },
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "supportsInterface(bytes4)",
          "isOperation(bytes32)",
          "isOperationPending(bytes32)",
          "isOperationReady(bytes32)",
          "isOperationDone(bytes32)",
          "getTimestamp(bytes32)",
          "getMinDelay()",
          "hashOperation(address,uint256,bytes,bytes32,bytes32)",
          "hashOperationBatch(address[],uint256[],bytes[],bytes32,bytes32)",
          "schedule(address,uint256,bytes,bytes32,bytes32,uint256)",
          "scheduleBatch(address[],uint256[],bytes[],bytes32,bytes32,uint256)",
          "cancel(bytes32)",
          "execute(address,uint256,bytes,bytes32,bytes32)",
          "executeBatch(address[],uint256[],bytes[],bytes32,bytes32)",
          "updateDelay(uint256)",
          "onERC721Received(address,address,uint256,bytes)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            },
            {
              "label": "_timestamps",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:34"
            },
            {
              "label": "_minDelay",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)48_storage",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:432"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3425_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IVotesUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getVotes(address)",
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "delegates(address)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "2a068734c026ac0588f9ecc3dad9aaffe9e15f5b44f41cb1b66055a8d20f392b",
          "withoutMetadata": "db1447c1afc82e7549d7f5fcd89add5143ffedea7ff0db3414fed90bf71ab239",
          "linkedWithoutMetadata": "db1447c1afc82e7549d7f5fcd89add5143ffedea7ff0db3414fed90bf71ab239"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20PermitUpgradeable": {
        "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:26",
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_address,t_struct(Counter)8000_storage)",
              "contract": "ERC20PermitUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:34"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "154",
              "type": "t_bytes32",
              "contract": "ERC20PermitUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:48",
              "renamedFrom": "_PERMIT_TYPEHASH"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC20PermitUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:138"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8000_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8000_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "f3bd1e4c7055c6575de5ded808829466f0558d27e32e529e89917004f9aed13d",
          "withoutMetadata": "061200bd9dab026742a91776a60ba53f7b6fd77ca1dab5f3d5826076bbfe96ed",
          "linkedWithoutMetadata": "061200bd9dab026742a91776a60ba53f7b6fd77ca1dab5f3d5826076bbfe96ed"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "b5e74e742bd4099c3ffcf7a96f2e718dbabfa19e72c3ca918ef83a7b26e51896",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:14",
        "version": {
          "withMetadata": "d7f80c247b6067cb172fd438e3f56990cc1ba886b39f426f5fcfade17ebc5f10",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "0db289179bd2697c54666413d56c72d7f752a1390311967e1368178ddcc6e4fc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "06a29fa468bce0c29e43a6e340cb8e0405e1af5aa98df2a0bd80568af54e15db",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/TimersUpgradeable.sol:9",
        "version": {
          "withMetadata": "8632367d465fd1a01c5104adfad8dfcded0f7b4844149bfeb3b11c3a640948c9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSAUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:14",
        "version": {
          "withMetadata": "a381b837b765d9b6704f87be559122e8700adefdeb7fb6e0d6e0cd09a820060e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EIP712Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "bfc458ad95b2ded7f4fb45a552dbb4ffa4b0136d124bb85bab880e8b7a6cba9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeCastUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol:21",
        "version": {
          "withMetadata": "c4d4f198b1bfc3e1ff27c9f490fa121b1b702219205648bb6e189334edeee8c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DoubleEndedQueueUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/DoubleEndedQueueUpgradeable.sol:21",
        "version": {
          "withMetadata": "3e17a9a1b09a12dcc411eeb255d96b0bf8f669929c7d2612ab544423532d8a2b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeCastUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "389f3bbb054d84723e25e07db563153cc56483f01e3348915d6a1ad61be48c00",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "44cc06288b20e467bcf8fd3ee273df3ac16b5dcefa8244020f901056346834d5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IGnosisSafe": {
        "src": "contracts/avatars/gnosisSafe/IGnosisSafe.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "getOwners()",
          "isOwner(address)",
          "getThreshold()",
          "getModulesPaginated(address,uint256)",
          "isModuleEnabled(address)",
          "setGuard(address)",
          "disableModule(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DSAuth": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:30",
        "version": {
          "withMetadata": "cf2abe74988e1b3dd1a75233792047a8c0c604779be6a9908a3db338d80dcdcf",
          "withoutMetadata": "7b102b6bd996ead1073c8438bb1716546d03e848703d4fda4c88910439821be9",
          "linkedWithoutMetadata": "7b102b6bd996ead1073c8438bb1716546d03e848703d4fda4c88910439821be9"
        },
        "inherit": [
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setOwner(address)",
          "owner()",
          "setAuthority(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DSAuth",
            "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DSAuthEvents": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:25",
        "version": {
          "withMetadata": "adb911002af224db5b930ee15b40d6c6c7ac376e2c437b4fe4640d8aa05e7fbd",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DSAuthority": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "canCall(address,address,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DSRoles": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:22",
        "inherit": [
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "getUserRoles(address)",
          "getCapabilityRoles(address,bytes4)",
          "isUserRoot(address)",
          "isCapabilityPublic(address,bytes4)",
          "hasUserRole(address,uint8)",
          "canCall(address,address,bytes4)",
          "setRootUser(address,bool)",
          "setUserRole(address,uint8,bool)",
          "setPublicCapability(address,bytes4,bool)",
          "setRoleCapability(uint8,address,bytes4,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IPermissionRegistry": {
        "src": "contracts/avatars/permissionReg/IPermissionRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "canCall(address,address,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "permissionRegistry": {
        "src": "contracts/avatars/permissionReg/permissionRegistry.sol:6",
        "version": {
          "withMetadata": "3608af58a914d9520f948adb2f34a39b3bb7222c1e262aa167bee20449959501",
          "withoutMetadata": "3608af58a914d9520f948adb2f34a39b3bb7222c1e262aa167bee20449959501",
          "linkedWithoutMetadata": "3608af58a914d9520f948adb2f34a39b3bb7222c1e262aa167bee20449959501"
        },
        "inherit": [
          "permissionRegistryBase",
          "springAvatar",
          "permissionRegHandler",
          "ERC721BurnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "DSRoles",
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "permissionRegistry",
            "src": "contracts/avatars/permissionReg/permissionRegistry.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "157",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "idTicker",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "210",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:15"
            },
            {
              "label": "tokenIDs",
              "offset": 0,
              "slot": "211",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "permissionRegistryBase": {
        "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:9",
        "version": {
          "withMetadata": "c7df70f88de6ce6889d1f9c97a454a5a58fbaa01d12a5e48a11ae3204c7665fe",
          "withoutMetadata": "e4f43219d22d7d1851dbb342450e257035447d098face85c7b638b47318fa219",
          "linkedWithoutMetadata": "e4f43219d22d7d1851dbb342450e257035447d098face85c7b638b47318fa219"
        },
        "inherit": [
          "springAvatar",
          "permissionRegHandler",
          "ERC721BurnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "DSRoles",
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "setLink(uint8,string)",
          "getNFT(address,uint8)",
          "getTokenID(address,uint8)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "idTicker",
            "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "157",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "idTicker",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "210",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:15"
            },
            {
              "label": "tokenIDs",
              "offset": 0,
              "slot": "211",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "permissionRegistryLogic": {
        "src": "contracts/avatars/permissionReg/permissionRegistryLogic.sol:7",
        "version": {
          "withMetadata": "5cc613bfac428a035fa74cdd6c0fec8df473af7d0ee638e33a83418e243c2150",
          "withoutMetadata": "e755622e3e290e8ab17363019dd9977f6c31b25d03b94656e7b98aa632773e4e",
          "linkedWithoutMetadata": "e755622e3e290e8ab17363019dd9977f6c31b25d03b94656e7b98aa632773e4e"
        },
        "inherit": [
          "permissionRegistryBase",
          "springAvatar",
          "permissionRegHandler",
          "ERC721BurnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "logicBase",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "DSRoles",
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "permissionRegistryLogic",
            "src": "contracts/avatars/permissionReg/permissionRegistryLogic.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "157",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "158",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "257",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "258",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "259",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "260",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "261",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "262",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "263",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "307",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "357",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "358",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "idTicker",
              "offset": 0,
              "slot": "359",
              "type": "t_uint256",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "360",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:15"
            },
            {
              "label": "tokenIDs",
              "offset": 0,
              "slot": "361",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "old": {
        "src": "contracts/avatars/wrapperFactory/old.sol:7",
        "version": {
          "withMetadata": "f14bfed3da93b37c1f3320907e43ebf407918ca1f3f61894dd66440378d29d0a",
          "withoutMetadata": "ada90be2514b6ec62e05187c738461569b40d207596f829b66d621a67b2c5721",
          "linkedWithoutMetadata": "ada90be2514b6ec62e05187c738461569b40d207596f829b66d621a67b2c5721"
        },
        "inherit": [
          "wrapperFactoryBase",
          "springAvatar",
          "permissionRegHandler",
          "logicBase",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "old",
            "src": "contracts/avatars/wrapperFactory/old.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "202",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "203",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:19"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "204",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "205",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:21"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "206",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:22"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "wrapperFactory": {
        "src": "contracts/avatars/wrapperFactory/wrapperFactory.sol:6",
        "version": {
          "withMetadata": "eaf53f8fed42dd49b9c61818d151a71f3535e64d45e3394355ecdc85d53161f0",
          "withoutMetadata": "eaf53f8fed42dd49b9c61818d151a71f3535e64d45e3394355ecdc85d53161f0",
          "linkedWithoutMetadata": "eaf53f8fed42dd49b9c61818d151a71f3535e64d45e3394355ecdc85d53161f0"
        },
        "inherit": [
          "wrapperFactoryBase",
          "springAvatar",
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "wrapperFactory",
            "src": "contracts/avatars/wrapperFactory/wrapperFactory.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:19"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:21"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:22"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "wrapperFactoryBase": {
        "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:14",
        "version": {
          "withMetadata": "c115a5f14002186a53bf26e991b1f4df94cc42f3bd890b4e5ce195162add9167",
          "withoutMetadata": "78f79ef3fefb43e3a60c3e9db86febbf59238f408c8aaac50f96d77b60a12a89",
          "linkedWithoutMetadata": "78f79ef3fefb43e3a60c3e9db86febbf59238f408c8aaac50f96d77b60a12a89"
        },
        "inherit": [
          "springAvatar",
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "createSafeWrapperWithBudget(address,address,uint256,uint256,address,uint256,address[],uint8,string,string)",
          "delegateSetup(address)",
          "enableModule(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "EMPTY_DATA",
            "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:19"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:21"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:22"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "wrapperFactoryLogic": {
        "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:13",
        "version": {
          "withMetadata": "7e8358c367cc88dcfaa95ef65a1e1ae8ef7fed01ad740f214b63c074b08a88c5",
          "withoutMetadata": "dc1f9db8ea38173453a166d74809958d733bca8f6c6928b6a4cf3879c778928e",
          "linkedWithoutMetadata": "dc1f9db8ea38173453a166d74809958d733bca8f6c6928b6a4cf3879c778928e"
        },
        "inherit": [
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createSafeWrapperWithBudget(address,uint256,uint256,address,uint256,address[],uint256)",
          "delegateSetup(address)",
          "enableModule(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "wrapperFactoryLogic",
            "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "EMPTY_DATA",
            "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:18"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:19"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:20"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:21"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "permissionRegHandler": {
        "src": "contracts/core/permissionRegHandler.sol:5",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "settingsModuleHandler": {
        "src": "contracts/core/settingsModuleHandler.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springAvatar": {
        "src": "contracts/core/springAvatar.sol:14",
        "inherit": [
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "setPermissionReg(address)",
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springModifier": {
        "src": "contracts/core/springModifier.sol:10",
        "inherit": [
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "setPermissionReg(address)",
          "enableModification(address,address)",
          "enableSettingsModule(address)",
          "disableSettingsModule(address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springModule": {
        "src": "contracts/core/springModule.sol:17",
        "inherit": [
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setPermissionReg(address)",
          "enableAvatar(address)",
          "disableAvatar(address,address)",
          "isAvatarEnabled(address)",
          "getAvatarsPaginated(address,uint256)",
          "setTarget(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "dummyAvatar": {
        "src": "contracts/mockContracts/dummyAvatar.sol:7",
        "version": {
          "withMetadata": "faabfae7854473e11ed72e64aad3c64089ac2aba79b690285e5921b9cf8e0c89",
          "withoutMetadata": "5d989797c862827700799041ceec506e049948ad41dffa88616256eb9db922e2",
          "linkedWithoutMetadata": "5d989797c862827700799041ceec506e049948ad41dffa88616256eb9db922e2"
        },
        "inherit": [
          "Executor"
        ],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "setSuccess(bool)",
          "getSuccess()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "testSuccessful",
            "src": "contracts/mockContracts/dummyAvatar.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "testSuccessful",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "dummyAvatar",
              "src": "contracts/mockContracts/dummyAvatar.sol:8"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "dummyBridge": {
        "src": "contracts/mockContracts/dummyBridge.sol:7",
        "version": {
          "withMetadata": "6a03e7aa118cc613cb15f5ae5eb66f6f50132fd63d57ac9e23f4321b94d06739",
          "withoutMetadata": "aaec889a9e6a3220f4ad22d0025f8f4b59f8d4e4ac9b90c6b6dc835f937f748b",
          "linkedWithoutMetadata": "aaec889a9e6a3220f4ad22d0025f8f4b59f8d4e4ac9b90c6b6dc835f937f748b"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "requireToPassMessage(address payable,bytes,uint256)",
          "messageSender()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "dummyModule": {
        "src": "contracts/mockContracts/dummyModule.sol:14",
        "version": {
          "withMetadata": "5e9d920d986b187c0c3352632d8ede86ce45088bd25b6da071a1a9b1be674446",
          "withoutMetadata": "4a94de758be6169fc45937395961394774b308f0d336a3f734683a2f726ff708",
          "linkedWithoutMetadata": "4a94de758be6169fc45937395961394774b308f0d336a3f734683a2f726ff708"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exec(address,uint256,bytes,address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "budgetModifier": {
        "src": "contracts/modifiers/budgetModifier.sol:6",
        "version": {
          "withMetadata": "88b3574f18d38fbd88b68d300871bf08999ee617c9ca6b9c1de5e73f9e55195f",
          "withoutMetadata": "88b3574f18d38fbd88b68d300871bf08999ee617c9ca6b9c1de5e73f9e55195f",
          "linkedWithoutMetadata": "88b3574f18d38fbd88b68d300871bf08999ee617c9ca6b9c1de5e73f9e55195f"
        },
        "inherit": [
          "budgetModifierBase",
          "springModifier",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "budgetModifier",
            "src": "contracts/modifiers/budgetModifier.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            },
            {
              "label": "budgets",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_struct(budget)15653_storage)",
              "contract": "budgetModifierBase",
              "src": "contracts/modifiers/budgetModifierBase.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(budget)15653_storage)": {
              "label": "mapping(address => struct budgetModifierBase.budget)",
              "numberOfBytes": "32"
            },
            "t_struct(budget)15653_storage": {
              "label": "struct budgetModifierBase.budget",
              "members": [
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastReset",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "frozen",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "budgetModifierBase": {
        "src": "contracts/modifiers/budgetModifierBase.sol:9",
        "version": {
          "withMetadata": "b70ebd750fd1a5801bb01d420015339ad7f217a5b8e41261a6891a7e7edec781",
          "withoutMetadata": "927ee70732fdcdcfd5785bf513c94fa47c5095a6c0808cd34518eaa5b442a93a",
          "linkedWithoutMetadata": "927ee70732fdcdcfd5785bf513c94fa47c5095a6c0808cd34518eaa5b442a93a"
        },
        "inherit": [
          "springModifier",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "setBudget(address,uint256,uint256)",
          "getBudget(address)",
          "setFreeze(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            },
            {
              "label": "budgets",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_struct(budget)15653_storage)",
              "contract": "budgetModifierBase",
              "src": "contracts/modifiers/budgetModifierBase.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(budget)15653_storage)": {
              "label": "mapping(address => struct budgetModifierBase.budget)",
              "numberOfBytes": "32"
            },
            "t_struct(budget)15653_storage": {
              "label": "struct budgetModifierBase.budget",
              "members": [
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastReset",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "frozen",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "budgetModifierLogic": {
        "src": "contracts/modifiers/budgetModifierLogic.sol:7",
        "version": {
          "withMetadata": "a822f4c0303c7afdd367af1b7da25c7ab28c335c58e2a0bcb6d862c7797bf43f",
          "withoutMetadata": "4308920101379d17d4481c06f5de3b4532fe04ef9c6f3ddb786bf5b4d8c24a08",
          "linkedWithoutMetadata": "4308920101379d17d4481c06f5de3b4532fe04ef9c6f3ddb786bf5b4d8c24a08"
        },
        "inherit": [
          "logicBase",
          "budgetModifierBase",
          "springModifier",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "budgetModifierLogic",
            "src": "contracts/modifiers/budgetModifierLogic.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "203",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "206",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "207",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            },
            {
              "label": "budgets",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_struct(budget)15653_storage)",
              "contract": "budgetModifierBase",
              "src": "contracts/modifiers/budgetModifierBase.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(budget)15653_storage)": {
              "label": "mapping(address => struct budgetModifierBase.budget)",
              "numberOfBytes": "32"
            },
            "t_struct(budget)15653_storage": {
              "label": "struct budgetModifierBase.budget",
              "members": [
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastReset",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "frozen",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20VotesUpgradeable": {
        "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:29",
        "inherit": [
          "ERC20PermitUpgradeable",
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "IVotesUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeCastUpgradeable",
          "MathUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "checkpoints(address,uint32)",
          "numCheckpoints(address)",
          "delegates(address)",
          "getVotes(address)",
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_address,t_struct(Counter)8000_storage)",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "154",
              "type": "t_bytes32",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
              "renamedFrom": "_PERMIT_TYPEHASH"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:46"
            },
            {
              "label": "_checkpoints",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)16160_storage)dyn_storage)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:47"
            },
            {
              "label": "_totalSupplyCheckpoints",
              "offset": 0,
              "slot": "206",
              "type": "t_array(t_struct(Checkpoint)16160_storage)dyn_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:48"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:323"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Checkpoint)16160_storage)dyn_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Checkpoint)16160_storage)dyn_storage)": {
              "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8000_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)16160_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint224",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8000_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint224": {
              "label": "uint224",
              "numberOfBytes": "28"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovToken": {
        "src": "contracts/modules/GovernorV2/GovToken.sol:15",
        "version": {
          "withMetadata": "3c45b5c74d3e0e6324b6838fb3d2cb4214b6624084c0e3569ca0a1dc98578374",
          "withoutMetadata": "da9e7fc022431939edd904b25bb898f21c737f2989a8f385751ebc0c5c442f1a",
          "linkedWithoutMetadata": "da9e7fc022431939edd904b25bb898f21c737f2989a8f385751ebc0c5c442f1a"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "OwnableUpgradeable",
          "ERC20VotesUpgradeable",
          "ERC20PermitUpgradeable",
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "IVotesUpgradeable",
          "springAvatar",
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string)",
          "transferFrom(address,address,uint256)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "lockVotes(address,uint256,uint256)",
          "freeVotes(address,uint256,uint256)",
          "getLockedVotes(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "54",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "56",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "103",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_address,t_struct(Counter)8000_storage)",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "155",
              "type": "t_bytes32",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
              "renamedFrom": "_PERMIT_TYPEHASH"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "156",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:46"
            },
            {
              "label": "_checkpoints",
              "offset": 0,
              "slot": "206",
              "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)16160_storage)dyn_storage)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:47"
            },
            {
              "label": "_totalSupplyCheckpoints",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_struct(Checkpoint)16160_storage)dyn_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:48"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "208",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:323"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "255",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "355",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "lockedVotes",
              "offset": 0,
              "slot": "405",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GovToken",
              "src": "contracts/modules/GovernorV2/GovToken.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Checkpoint)16160_storage)dyn_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Checkpoint)16160_storage)dyn_storage)": {
              "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8000_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)16160_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint224",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8000_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint224": {
              "label": "uint224",
              "numberOfBytes": "28"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorCoreV2": {
        "src": "contracts/modules/GovernorV2/GovernorCoreV2.sol:15",
        "version": {
          "withMetadata": "2bb14e96db3a3ed21bedc29bae81051105a12aeae01f4258fb2ad3b5a56ec483",
          "withoutMetadata": "a29630ef74df2d4811a064ba10e5f03b9a97009b4416feefdac7110dd15ef847",
          "linkedWithoutMetadata": "a29630ef74df2d4811a064ba10e5f03b9a97009b4416feefdac7110dd15ef847"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "GovernorTimelockControlUpgradeable",
          "GovernorVotesQuorumFractionUpgradeable",
          "GovernorVotes",
          "GovernorCountingSimpleUpgradeable",
          "GovernorSettingsUpgradeable",
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorTimelockUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address,address,uint256,uint256)",
          "votingDelay()",
          "votingPeriod()",
          "quorum(uint256)",
          "state(uint256)",
          "propose(address[],uint256[],bytes[],string,uint256)",
          "proposalThreshold()",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorTimelockUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "253",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18483_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "255",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "257",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "_votingDelay",
              "offset": 0,
              "slot": "303",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:18"
            },
            {
              "label": "_votingPeriod",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:19"
            },
            {
              "label": "_proposalThreshold",
              "offset": 0,
              "slot": "305",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "306",
              "type": "t_array(t_uint256)47_storage",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:160"
            },
            {
              "label": "minStake",
              "offset": 0,
              "slot": "353",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:18"
            },
            {
              "label": "maxStake",
              "offset": 0,
              "slot": "354",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:19"
            },
            {
              "label": "_proposalVotes",
              "offset": 0,
              "slot": "355",
              "type": "t_mapping(t_uint256,t_struct(ProposalVote)17450_storage)",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:59"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "356",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:241"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "405",
              "type": "t_contract(GovToken)17097",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "406",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:78"
            },
            {
              "label": "_quorumNumerator",
              "offset": 0,
              "slot": "456",
              "type": "t_uint256",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "457",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:124"
            },
            {
              "label": "_timelock",
              "offset": 0,
              "slot": "506",
              "type": "t_contract(TimelockControllerUpgradeable)4870",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:32"
            },
            {
              "label": "_timelockIds",
              "offset": 0,
              "slot": "507",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "508",
              "type": "t_array(t_uint256)48_storage",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:243"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "556",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "606",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GovToken)17097": {
              "label": "contract GovToken",
              "numberOfBytes": "20"
            },
            "t_contract(TimelockControllerUpgradeable)4870": {
              "label": "contract TimelockControllerUpgradeable",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18483_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalVote)17450_storage)": {
              "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18483_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(ProposalVote)17450_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
              "members": [
                {
                  "label": "againstVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "forVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "abstainVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "proposerStake",
                  "type": "t_struct(Stake)17433_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "objectorStake",
                  "type": "t_struct(Stake)17433_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "hasVoted",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(Stake)17433_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.Stake",
              "members": [
                {
                  "label": "staker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorCountingSimpleUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:14",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "COUNTING_MODE()",
          "hasVoted(uint256,address)",
          "proposalVotes(uint256)",
          "noObjections(uint256)",
          "getProposer(uint256)",
          "getObjector(uint256)",
          "proposalThreshold()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18483_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "minStake",
              "offset": 0,
              "slot": "253",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:18"
            },
            {
              "label": "maxStake",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:19"
            },
            {
              "label": "_proposalVotes",
              "offset": 0,
              "slot": "255",
              "type": "t_mapping(t_uint256,t_struct(ProposalVote)17450_storage)",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:59"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:241"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18483_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalVote)17450_storage)": {
              "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18483_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(ProposalVote)17450_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
              "members": [
                {
                  "label": "againstVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "forVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "abstainVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "proposerStake",
                  "type": "t_struct(Stake)17433_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "objectorStake",
                  "type": "t_struct(Stake)17433_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "hasVoted",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(Stake)17433_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.Stake",
              "members": [
                {
                  "label": "staker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorSettingsUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:14",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "votingDelay()",
          "votingPeriod()",
          "proposalThreshold()",
          "setVotingDelay(uint256)",
          "setVotingPeriod(uint256)",
          "setProposalThreshold(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18483_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "_votingDelay",
              "offset": 0,
              "slot": "253",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:18"
            },
            {
              "label": "_votingPeriod",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:19"
            },
            {
              "label": "_proposalThreshold",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)47_storage",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:160"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18483_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18483_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorTimelockControlUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:27",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorTimelockUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "state(uint256)",
          "timelock()",
          "proposalEta(uint256)",
          "queue(address[],uint256[],bytes[],bytes32)",
          "updateTimelock(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorTimelockUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "253",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18483_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "255",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "257",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "_timelock",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(TimelockControllerUpgradeable)4870",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:32"
            },
            {
              "label": "_timelockIds",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)48_storage",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:243"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(TimelockControllerUpgradeable)4870": {
              "label": "contract TimelockControllerUpgradeable",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18483_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18483_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:32",
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "DoubleEndedQueueUpgradeable",
          "SafeCastUpgradeable",
          "TimersUpgradeable",
          "MathUpgradeable",
          "AddressUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "()",
          "supportsInterface(bytes4)",
          "name()",
          "version()",
          "hashProposal(address[],uint256[],bytes[],bytes32)",
          "state(uint256)",
          "proposalSnapshot(uint256)",
          "proposalDeadline(uint256)",
          "proposalThreshold()",
          "noObjections(uint256)",
          "object(uint256,uint256,string,bytes)",
          "propose(address[],uint256[],bytes[],string,uint256)",
          "execute(address[],uint256[],bytes[],bytes32)",
          "retrieveStake(uint256)",
          "getVotes(address,uint256)",
          "getVotesWithParams(address,uint256,bytes)",
          "castVote(uint256,uint8,uint256)",
          "castVoteWithReason(uint256,uint8,uint256,string)",
          "castVoteWithReasonAndParams(uint256,uint8,uint256,string,bytes)",
          "castVoteBySig(uint256,uint8,uint256,uint8,bytes32,bytes32)",
          "castVoteWithReasonAndParamsBySig(uint256,uint8,uint256,string,bytes,uint8,bytes32,bytes32)",
          "getProposer(uint256)",
          "getObjector(uint256)",
          "relay(address,uint256,bytes)",
          "onERC721Received(address,address,uint256,bytes)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18483_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18483_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18483_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorVotes": {
        "src": "contracts/modules/GovernorV2/GovernorVotes.sol:17",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18483_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "253",
              "type": "t_contract(GovToken)17097",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "254",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:78"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GovToken)17097": {
              "label": "contract GovToken",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18483_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18483_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorVotesQuorumFractionUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:17",
        "inherit": [
          "GovernorVotes",
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "quorumNumerator()",
          "quorumDenominator()",
          "quorum(uint256)",
          "updateQuorumNumerator(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18483_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "253",
              "type": "t_contract(GovToken)17097",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "254",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:78"
            },
            {
              "label": "_quorumNumerator",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:124"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GovToken)17097": {
              "label": "contract GovToken",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18483_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18483_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGovernorTimelockUpgradeable": {
        "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:14",
        "inherit": [
          "IGovernorUpgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "timelock()",
          "proposalEta(uint256)",
          "queue(address[],uint256[],bytes[],bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorTimelockUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGovernorUpgradeable": {
        "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:14",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "version()",
          "COUNTING_MODE()",
          "hashProposal(address[],uint256[],bytes[],bytes32)",
          "state(uint256)",
          "proposalSnapshot(uint256)",
          "proposalDeadline(uint256)",
          "votingDelay()",
          "votingPeriod()",
          "quorum(uint256)",
          "getVotes(address,uint256)",
          "getVotesWithParams(address,uint256,bytes)",
          "hasVoted(uint256,address)",
          "propose(address[],uint256[],bytes[],string,uint256)",
          "execute(address[],uint256[],bytes[],bytes32)",
          "castVote(uint256,uint8,uint256)",
          "castVoteWithReason(uint256,uint8,uint256,string)",
          "castVoteWithReasonAndParams(uint256,uint8,uint256,string,bytes)",
          "castVoteBySig(uint256,uint8,uint256,uint8,bytes32,bytes32)",
          "castVoteWithReasonAndParamsBySig(uint256,uint8,uint256,string,bytes,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IVotes": {
        "src": "contracts/modules/GovernorV2/IVotes.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "useVotes(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimeLockModuleV2": {
        "src": "contracts/modules/GovernorV2/TimeLockModuleV2.sol:6",
        "version": {
          "withMetadata": "0900f001d1b4258e4f9f09db2853aaf4b285473751e76fc13f97f34704f1f32e",
          "withoutMetadata": "78f7ee762c1189049a4b8afc7c11072f258a1cdb9a78831f3134bcc0688006c9",
          "linkedWithoutMetadata": "78f7ee762c1189049a4b8afc7c11072f258a1cdb9a78831f3134bcc0688006c9"
        },
        "inherit": [
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "TimelockControllerUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint256,address[],address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            },
            {
              "label": "_timestamps",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:34"
            },
            {
              "label": "_minDelay",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)48_storage",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:432"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "251",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "252",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "253",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3425_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "bridgeProxyLogic": {
        "src": "contracts/modules/bridgeModules/bridgeProxyLogic.sol:18",
        "version": {
          "withMetadata": "2eb66b696914f3e7ba49a7143edb281d995bd60c9243fd4ca1b3c9057a9aa8d3",
          "withoutMetadata": "a05fde3485225c346f01cc60117bf7c82f4aaec47c33170e8d74535950d29e6c",
          "linkedWithoutMetadata": "a05fde3485225c346f01cc60117bf7c82f4aaec47c33170e8d74535950d29e6c"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "EternalStorage",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "()",
          "initialize(bytes)",
          "setPermissionReg(address)",
          "setBridgeContract(address)",
          "setMediatorContractOnOtherSide(address)",
          "setRequestGasLimit(uint256)",
          "bridgeContract()",
          "mediatorContractOnOtherSide()",
          "requestGasLimit()",
          "executeTransactionFromAMB(address,uint256,bytes,address,uint8)",
          "executeGenericTransactionFromAMB(address,bytes)",
          "execTransactionFromModule(address,uint256,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "uintStorage",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:9"
            },
            {
              "label": "stringStorage",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_bytes32,t_string_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:10"
            },
            {
              "label": "addressStorage",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:11"
            },
            {
              "label": "bytesStorage",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_bytes32,t_bytes_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:12"
            },
            {
              "label": "boolStorage",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:13"
            },
            {
              "label": "intStorage",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_bytes32,t_int256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:14"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "163",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_int256)": {
              "label": "mapping(bytes32 => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAMB": {
        "src": "contracts/modules/bridgeModules/interfaces/IAMB.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "messageSender()",
          "maxGasPerTx()",
          "transactionHash()",
          "messageId()",
          "messageSourceChainId()",
          "messageCallStatus(bytes32)",
          "failedMessageDataHash(bytes32)",
          "failedMessageReceiver(bytes32)",
          "failedMessageSender(bytes32)",
          "requireToPassMessage(address,bytes,uint256)",
          "requireToConfirmMessage(address,bytes,uint256)",
          "requireToGetInformation(bytes32,bytes)",
          "sourceChainId()",
          "destinationChainId()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EternalStorage": {
        "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:8",
        "version": {
          "withMetadata": "4e416fa7f5f575893334c40b6621898f58713aeaa3196919a6319540e9b1f939",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "uintStorage",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:9"
            },
            {
              "label": "stringStorage",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_string_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:10"
            },
            {
              "label": "addressStorage",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:11"
            },
            {
              "label": "bytesStorage",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_bytes32,t_bytes_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:12"
            },
            {
              "label": "boolStorage",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:13"
            },
            {
              "label": "intStorage",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_int256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_int256)": {
              "label": "mapping(bytes32 => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "safeWrapper": {
        "src": "contracts/modules/safeWrapper/safeWrapper.sol:6",
        "version": {
          "withMetadata": "3d642c101a791e92174f767fbb053a84279a13b4936276d026e8fe58c230a5c0",
          "withoutMetadata": "3d642c101a791e92174f767fbb053a84279a13b4936276d026e8fe58c230a5c0",
          "linkedWithoutMetadata": "3d642c101a791e92174f767fbb053a84279a13b4936276d026e8fe58c230a5c0"
        },
        "inherit": [
          "safeWrapperBase",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "(address,address,string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "safeWrapper",
            "src": "contracts/modules/safeWrapper/safeWrapper.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "safe",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:14"
            },
            {
              "label": "sector",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "safeWrapperBase": {
        "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:9",
        "version": {
          "withMetadata": "375b916cc7d6aa2f92a3eaa1333b022ac9de68bc491e041c16dc8bfe50510c8b",
          "withoutMetadata": "b6a51f32d7983bb46cc12db4946292a2ce39cd4755931e3f176c12450d4e2d69",
          "linkedWithoutMetadata": "b6a51f32d7983bb46cc12db4946292a2ce39cd4755931e3f176c12450d4e2d69"
        },
        "inherit": [
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "setPermissionReg(address)",
          "sendEth(address,uint256,address)",
          "removeOwner(address,uint256)",
          "addOwner(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "safe",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:14"
            },
            {
              "label": "sector",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "safeWrapperLogic": {
        "src": "contracts/modules/safeWrapper/safeWrapperLogic.sol:8",
        "version": {
          "withMetadata": "cfc5090ec09e33f372e36ab034522aa1961365c3410058010d070fff0816d07e",
          "withoutMetadata": "ad5e4be889d37448826b7b4e4e26610171accf71b6f0c99058314b895e368922",
          "linkedWithoutMetadata": "ad5e4be889d37448826b7b4e4e26610171accf71b6f0c99058314b895e368922"
        },
        "inherit": [
          "logicBase",
          "safeWrapperBase",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "safeWrapperLogic",
            "src": "contracts/modules/safeWrapper/safeWrapperLogic.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "203",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "safe",
              "offset": 0,
              "slot": "206",
              "type": "t_address",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "207",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:14"
            },
            {
              "label": "sector",
              "offset": 0,
              "slot": "208",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGnosisSafeProxy": {
        "src": "contracts/proxyContracts/factory/IGnosisSafeProxy.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IProxyCallback": {
        "src": "contracts/proxyContracts/factory/IProxyCallback.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "springFactory": {
        "src": "contracts/proxyContracts/factory/springFactory.sol:9",
        "version": {
          "withMetadata": "b2aee643f8213d578bee9011e0b9063bfb2c01092b716b8abf7b45ed05be3de5",
          "withoutMetadata": "267efa799fe2876c80fc8949ec20d845eb1e24d3d711552a734c102ce166f5df",
          "linkedWithoutMetadata": "267efa799fe2876c80fc8949ec20d845eb1e24d3d711552a734c102ce166f5df"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "proxyRuntimeCode()",
          "proxyCreationCode()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "logicBase": {
        "src": "contracts/proxyContracts/logic/logicBase.sol:8",
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springProxy": {
        "src": "contracts/proxyContracts/proxy/springProxy.sol:9",
        "version": {
          "withMetadata": "610b3e6bf5909dda45a05c305e9a5003ec1098af6b60a6a02ed825cd931bc55f",
          "withoutMetadata": "610b3e6bf5909dda45a05c305e9a5003ec1098af6b60a6a02ed825cd931bc55f",
          "linkedWithoutMetadata": "610b3e6bf5909dda45a05c305e9a5003ec1098af6b60a6a02ed825cd931bc55f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "console",
          "Address",
          "StorageSlot"
        ],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "springProxy",
            "src": "contracts/proxyContracts/proxy/springProxy.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "c100f561d0dd92dba3736f656c282e8f21b151345f8f7bb341c5b2afdc4dc3f2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "GnosisSafe": {
        "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:19",
        "version": {
          "withMetadata": "5bf5fca9c2200523da52d1a5a25c79bbbbe65d85ba6c17260910f952feb77ecf",
          "withoutMetadata": "b0dafd629c7d73386b769d413f1b7e5b04ef16c873c373fddae6ff731dc119fa",
          "linkedWithoutMetadata": "b0dafd629c7d73386b769d413f1b7e5b04ef16c873c373fddae6ff731dc119fa"
        },
        "inherit": [
          "GuardManager",
          "StorageAccessible",
          "FallbackManager",
          "ISignatureValidatorConstants",
          "SecuredTokenTransfer",
          "SignatureDecoder",
          "OwnerManager",
          "ModuleManager",
          "Executor",
          "SelfAuthorized",
          "Singleton",
          "EtherPaymentFallback"
        ],
        "libraries": [
          "GnosisSafeMath"
        ],
        "methods": [
          "()",
          "setup(address[],uint256,address,bytes,address,address,uint256,address payable)",
          "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes)",
          "checkSignatures(bytes32,bytes,bytes)",
          "checkNSignatures(bytes32,bytes,bytes,uint256)",
          "requiredTxGas(address,uint256,bytes,uint8)",
          "approveHash(bytes32)",
          "getChainId()",
          "domainSeparator()",
          "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)",
          "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafe",
            "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:59"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            },
            {
              "label": "owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            },
            {
              "label": "nonce",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:51"
            },
            {
              "label": "_deprecatedDomainSeparator",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes32",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:52"
            },
            {
              "label": "signedMessages",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:54"
            },
            {
              "label": "approvedHashes",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
              "label": "mapping(address => mapping(bytes32 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Executor": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/Executor.sol:7",
        "version": {
          "withMetadata": "48619bf387511c5a10b45ee94807128680593ef546d04f01a27eabf49556c7fd",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FallbackManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/FallbackManager.sol:8",
        "version": {
          "withMetadata": "dc2e82ceb477aaedb214fa9fa713475cf985ee3fb52807485e8ffb5a136baebf",
          "withoutMetadata": "69f3af1e7187f01e1814bbf1bb39db08a4ec97d96ed0fd50031fc06be9727d00",
          "linkedWithoutMetadata": "69f3af1e7187f01e1814bbf1bb39db08a4ec97d96ed0fd50031fc06be9727d00"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setFallbackHandler(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Guard": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GuardManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:27",
        "version": {
          "withMetadata": "33f926cafe41259dcea04aaf38b9d648588b9c3c637f28568f169decdf5a90b3",
          "withoutMetadata": "0a932d5475d91581a9fef336ea4a1e989b74f706b6caf1cc54201540170dc099",
          "linkedWithoutMetadata": "0a932d5475d91581a9fef336ea4a1e989b74f706b6caf1cc54201540170dc099"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setGuard(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ModuleManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:10",
        "version": {
          "withMetadata": "ff1679fefde03297bd1da3ffbc1236e691f5e83cc5a1402035baec922e669e8d",
          "withoutMetadata": "62fea39f8e4489b1904c18ff2d73a421d08acbedb8a365fbfd6491fcc830c9f2",
          "linkedWithoutMetadata": "62fea39f8e4489b1904c18ff2d73a421d08acbedb8a365fbfd6491fcc830c9f2"
        },
        "inherit": [
          "Executor",
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "modules",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "OwnerManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:8",
        "version": {
          "withMetadata": "1d81ca17a9fcfa25ce9339ce2680655269fb902d62272bbbfb3734abc2eb18ca",
          "withoutMetadata": "79fecfeb20f4939a246b45855d3281a3ec54ae9e3cbd6d7c32b51fd008eb6995",
          "linkedWithoutMetadata": "79fecfeb20f4939a246b45855d3281a3ec54ae9e3cbd6d7c32b51fd008eb6995"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "addOwnerWithThreshold(address,uint256)",
          "removeOwner(address,address,uint256)",
          "swapOwner(address,address,address)",
          "changeThreshold(uint256)",
          "getThreshold()",
          "isOwner(address)",
          "getOwners()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owners",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Enum": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Enum.sol:6",
        "version": {
          "withMetadata": "fa710b28020d20e4d963110f65c100a0c3da47d9fc1e1731c23b1799b1d4c1fb",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EtherPaymentFallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/EtherPaymentFallback.sol:6",
        "version": {
          "withMetadata": "187ba1ab7509d8a8a41148e5346c4676a97ef3d8aa071ba4bf4e8d3d702d2a82",
          "withoutMetadata": "2df5b0a6e815736a589f0331577b6d497e1b407aaa2113a81067671b40e55a4b",
          "linkedWithoutMetadata": "2df5b0a6e815736a589f0331577b6d497e1b407aaa2113a81067671b40e55a4b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SecuredTokenTransfer": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SecuredTokenTransfer.sol:6",
        "version": {
          "withMetadata": "c4a369d358aa1c59074eeb091afd702a8d7279190a5bc1fd805850d6fdff6410",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfAuthorized": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol:6",
        "version": {
          "withMetadata": "b276ff9268a1ccf410bee71fafff8878d987844fecc7d0a7fb7c8788c63eb96d",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureDecoder": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SignatureDecoder.sol:6",
        "version": {
          "withMetadata": "d4004664ae4ec477c1a4cae24dbf247fa9ec109cdaf9a0146c3721cc8f2b42b6",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Singleton": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:7",
        "version": {
          "withMetadata": "a741b85f7f5542acf60e6428bc627b238303a051fd1480b1237fbd25c2770440",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageAccessible": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/StorageAccessible.sol:6",
        "version": {
          "withMetadata": "063b2726c4c93e31ec6088b838689586ea1d616d59a03b7a46a4cf0a75119694",
          "withoutMetadata": "e3cefdf9f2f60bc1238dfe2249e501fdbc52930b5866c7829ce07a7b370ccae9",
          "linkedWithoutMetadata": "e3cefdf9f2f60bc1238dfe2249e501fdbc52930b5866c7829ce07a7b370ccae9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getStorageAt(uint256,uint256)",
          "simulateAndRevert(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeMath": {
        "src": "@gnosis.pm/safe-contracts/contracts/external/GnosisSafeMath.sol:10",
        "version": {
          "withMetadata": "8613af15c62060eda9d711eb50192cf0dc17f5c0059409395b9646f0fa8045fc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISignatureValidator": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:9",
        "inherit": [
          "ISignatureValidatorConstants"
        ],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISignatureValidatorConstants": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:4",
        "version": {
          "withMetadata": "da269993427b7502b85b990935687b77da03ef51e6fb492dd50f74b1f687b657",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:13",
        "version": {
          "withMetadata": "4403647dcbde7449432007f15728744e2691e4b245342cfb676827d2eea3141b",
          "withoutMetadata": "3cb953a9f4cf894eadc4bcfa5dfe2e06c70518a0a27283970fd270c253168eb0",
          "linkedWithoutMetadata": "3cb953a9f4cf894eadc4bcfa5dfe2e06c70518a0a27283970fd270c253168eb0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafeProxy",
            "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "GnosisSafeProxy",
              "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "masterCopy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeProxyFactory": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxyFactory.sol:9",
        "version": {
          "withMetadata": "dade3c6a8192a11725263d527b917a33a210e656185fc9e8ad8ea617359a2b52",
          "withoutMetadata": "1ce43b946dcd7ba295e1269263fd1b6868ab93a8b7b5ca5fc015045d5aa9229f",
          "linkedWithoutMetadata": "1ce43b946dcd7ba295e1269263fd1b6868ab93a8b7b5ca5fc015045d5aa9229f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProxy(address,bytes)",
          "proxyRuntimeCode()",
          "proxyCreationCode()",
          "createProxyWithNonce(address,bytes,uint256)",
          "createProxyWithCallback(address,bytes,uint256,address)",
          "calculateCreateProxyWithNonceAddress(address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IProxyCreationCallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Modifier": {
        "src": "@gnosis.pm/zodiac/contracts/core/Modifier.sol:9",
        "inherit": [
          "IAvatar",
          "Module",
          "Guardable",
          "FactoryFriendly",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "disableModule(address,address)",
          "enableModule(address)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "avatar",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:12"
            },
            {
              "label": "target",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:14"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Modifier",
              "src": "@gnosis.pm/zodiac/contracts/core/Modifier.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Module": {
        "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:10",
        "inherit": [
          "Guardable",
          "FactoryFriendly",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setAvatar(address)",
          "setTarget(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "avatar",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:12"
            },
            {
              "label": "target",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FactoryFriendly": {
        "src": "@gnosis.pm/zodiac/contracts/factory/FactoryFriendly.sol:8",
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setUp(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseGuard": {
        "src": "@gnosis.pm/zodiac/contracts/guard/BaseGuard.sol:8",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Guardable": {
        "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:9",
        "version": {
          "withMetadata": "8729c389f8175a94eeb27a597c20f2db4d8f6e46d1cba977ea1ac2254b833a49",
          "withoutMetadata": "bf19dd5c52ee40424bf5e1b4367dc2f2fb49a84d7aa19039b850b5d6df6b1047",
          "linkedWithoutMetadata": "bf19dd5c52ee40424bf5e1b4367dc2f2fb49a84d7aa19039b850b5d6df6b1047"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setGuard(address)",
          "getGuard()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAvatar": {
        "src": "@gnosis.pm/zodiac/contracts/interfaces/IAvatar.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IGuard": {
        "src": "@gnosis.pm/zodiac/contracts/interfaces/IGuard.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3425_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TimelockControllerUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:27",
        "version": {
          "withMetadata": "93c2ecaae320d6300899f2a7b35c84e2fd2be0c7a82f11d199e592dc9e3d4ef4",
          "withoutMetadata": "2090350735f5c3bdb96f361d12957eb370c051f858ba1a6c1ff335f5c6190f0a",
          "linkedWithoutMetadata": "2090350735f5c3bdb96f361d12957eb370c051f858ba1a6c1ff335f5c6190f0a"
        },
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "supportsInterface(bytes4)",
          "isOperation(bytes32)",
          "isOperationPending(bytes32)",
          "isOperationReady(bytes32)",
          "isOperationDone(bytes32)",
          "getTimestamp(bytes32)",
          "getMinDelay()",
          "hashOperation(address,uint256,bytes,bytes32,bytes32)",
          "hashOperationBatch(address[],uint256[],bytes[],bytes32,bytes32)",
          "schedule(address,uint256,bytes,bytes32,bytes32,uint256)",
          "scheduleBatch(address[],uint256[],bytes[],bytes32,bytes32,uint256)",
          "cancel(bytes32)",
          "execute(address,uint256,bytes,bytes32,bytes32)",
          "executeBatch(address[],uint256[],bytes[],bytes32,bytes32)",
          "updateDelay(uint256)",
          "onERC721Received(address,address,uint256,bytes)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            },
            {
              "label": "_timestamps",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:34"
            },
            {
              "label": "_minDelay",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)48_storage",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:432"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3425_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IVotesUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getVotes(address)",
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "delegates(address)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "2a068734c026ac0588f9ecc3dad9aaffe9e15f5b44f41cb1b66055a8d20f392b",
          "withoutMetadata": "db1447c1afc82e7549d7f5fcd89add5143ffedea7ff0db3414fed90bf71ab239",
          "linkedWithoutMetadata": "db1447c1afc82e7549d7f5fcd89add5143ffedea7ff0db3414fed90bf71ab239"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20PermitUpgradeable": {
        "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:26",
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_address,t_struct(Counter)8000_storage)",
              "contract": "ERC20PermitUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:34"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "154",
              "type": "t_bytes32",
              "contract": "ERC20PermitUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:48",
              "renamedFrom": "_PERMIT_TYPEHASH"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC20PermitUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:138"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8000_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8000_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "f3bd1e4c7055c6575de5ded808829466f0558d27e32e529e89917004f9aed13d",
          "withoutMetadata": "061200bd9dab026742a91776a60ba53f7b6fd77ca1dab5f3d5826076bbfe96ed",
          "linkedWithoutMetadata": "061200bd9dab026742a91776a60ba53f7b6fd77ca1dab5f3d5826076bbfe96ed"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "b5e74e742bd4099c3ffcf7a96f2e718dbabfa19e72c3ca918ef83a7b26e51896",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:14",
        "version": {
          "withMetadata": "d7f80c247b6067cb172fd438e3f56990cc1ba886b39f426f5fcfade17ebc5f10",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "0db289179bd2697c54666413d56c72d7f752a1390311967e1368178ddcc6e4fc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "06a29fa468bce0c29e43a6e340cb8e0405e1af5aa98df2a0bd80568af54e15db",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/TimersUpgradeable.sol:9",
        "version": {
          "withMetadata": "8632367d465fd1a01c5104adfad8dfcded0f7b4844149bfeb3b11c3a640948c9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSAUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:14",
        "version": {
          "withMetadata": "a381b837b765d9b6704f87be559122e8700adefdeb7fb6e0d6e0cd09a820060e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EIP712Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "bfc458ad95b2ded7f4fb45a552dbb4ffa4b0136d124bb85bab880e8b7a6cba9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeCastUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol:21",
        "version": {
          "withMetadata": "c4d4f198b1bfc3e1ff27c9f490fa121b1b702219205648bb6e189334edeee8c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DoubleEndedQueueUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/DoubleEndedQueueUpgradeable.sol:21",
        "version": {
          "withMetadata": "3e17a9a1b09a12dcc411eeb255d96b0bf8f669929c7d2612ab544423532d8a2b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeCastUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "389f3bbb054d84723e25e07db563153cc56483f01e3348915d6a1ad61be48c00",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "44cc06288b20e467bcf8fd3ee273df3ac16b5dcefa8244020f901056346834d5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IGnosisSafe": {
        "src": "contracts/avatars/gnosisSafe/IGnosisSafe.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "getOwners()",
          "isOwner(address)",
          "getThreshold()",
          "getModulesPaginated(address,uint256)",
          "isModuleEnabled(address)",
          "setGuard(address)",
          "disableModule(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DSAuth": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:30",
        "version": {
          "withMetadata": "cf2abe74988e1b3dd1a75233792047a8c0c604779be6a9908a3db338d80dcdcf",
          "withoutMetadata": "7b102b6bd996ead1073c8438bb1716546d03e848703d4fda4c88910439821be9",
          "linkedWithoutMetadata": "7b102b6bd996ead1073c8438bb1716546d03e848703d4fda4c88910439821be9"
        },
        "inherit": [
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setOwner(address)",
          "owner()",
          "setAuthority(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DSAuth",
            "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DSAuthEvents": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:25",
        "version": {
          "withMetadata": "adb911002af224db5b930ee15b40d6c6c7ac376e2c437b4fe4640d8aa05e7fbd",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DSAuthority": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "canCall(address,address,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DSRoles": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:22",
        "inherit": [
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "getUserRoles(address)",
          "getCapabilityRoles(address,bytes4)",
          "isUserRoot(address)",
          "isCapabilityPublic(address,bytes4)",
          "hasUserRole(address,uint8)",
          "canCall(address,address,bytes4)",
          "setRootUser(address,bool)",
          "setUserRole(address,uint8,bool)",
          "setPublicCapability(address,bytes4,bool)",
          "setRoleCapability(uint8,address,bytes4,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IPermissionRegistry": {
        "src": "contracts/avatars/permissionReg/IPermissionRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "canCall(address,address,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "permissionRegistry": {
        "src": "contracts/avatars/permissionReg/permissionRegistry.sol:6",
        "version": {
          "withMetadata": "3608af58a914d9520f948adb2f34a39b3bb7222c1e262aa167bee20449959501",
          "withoutMetadata": "3608af58a914d9520f948adb2f34a39b3bb7222c1e262aa167bee20449959501",
          "linkedWithoutMetadata": "3608af58a914d9520f948adb2f34a39b3bb7222c1e262aa167bee20449959501"
        },
        "inherit": [
          "permissionRegistryBase",
          "springAvatar",
          "permissionRegHandler",
          "ERC721BurnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "DSRoles",
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "permissionRegistry",
            "src": "contracts/avatars/permissionReg/permissionRegistry.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "157",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "idTicker",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "210",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:15"
            },
            {
              "label": "tokenIDs",
              "offset": 0,
              "slot": "211",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "permissionRegistryBase": {
        "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:9",
        "version": {
          "withMetadata": "c7df70f88de6ce6889d1f9c97a454a5a58fbaa01d12a5e48a11ae3204c7665fe",
          "withoutMetadata": "e4f43219d22d7d1851dbb342450e257035447d098face85c7b638b47318fa219",
          "linkedWithoutMetadata": "e4f43219d22d7d1851dbb342450e257035447d098face85c7b638b47318fa219"
        },
        "inherit": [
          "springAvatar",
          "permissionRegHandler",
          "ERC721BurnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "DSRoles",
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "setLink(uint8,string)",
          "getNFT(address,uint8)",
          "getTokenID(address,uint8)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "idTicker",
            "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "157",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "idTicker",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "210",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:15"
            },
            {
              "label": "tokenIDs",
              "offset": 0,
              "slot": "211",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "permissionRegistryLogic": {
        "src": "contracts/avatars/permissionReg/permissionRegistryLogic.sol:7",
        "version": {
          "withMetadata": "5cc613bfac428a035fa74cdd6c0fec8df473af7d0ee638e33a83418e243c2150",
          "withoutMetadata": "e755622e3e290e8ab17363019dd9977f6c31b25d03b94656e7b98aa632773e4e",
          "linkedWithoutMetadata": "e755622e3e290e8ab17363019dd9977f6c31b25d03b94656e7b98aa632773e4e"
        },
        "inherit": [
          "permissionRegistryBase",
          "springAvatar",
          "permissionRegHandler",
          "ERC721BurnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "logicBase",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "DSRoles",
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "permissionRegistryLogic",
            "src": "contracts/avatars/permissionReg/permissionRegistryLogic.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "157",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "158",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "257",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "258",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "259",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "260",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "261",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "262",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "263",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "307",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "357",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "358",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "idTicker",
              "offset": 0,
              "slot": "359",
              "type": "t_uint256",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "360",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:15"
            },
            {
              "label": "tokenIDs",
              "offset": 0,
              "slot": "361",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "old": {
        "src": "contracts/avatars/wrapperFactory/old.sol:7",
        "version": {
          "withMetadata": "64865ad185e4b3a84cb93ee41241c1c88242157e8fb2a3519996ae66d3e45af4",
          "withoutMetadata": "1cddefa3c678661d4456772e8c958cb93e1b18762ba569d21c9771ab61a61e96",
          "linkedWithoutMetadata": "1cddefa3c678661d4456772e8c958cb93e1b18762ba569d21c9771ab61a61e96"
        },
        "inherit": [
          "wrapperFactoryBase",
          "springFactory",
          "logicBase",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "old",
            "src": "contracts/avatars/wrapperFactory/old.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:19"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "202",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "203",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:21"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "204",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:22"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "205",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "wrapperFactory": {
        "src": "contracts/avatars/wrapperFactory/wrapperFactory.sol:6",
        "version": {
          "withMetadata": "6cf598f668f429179d426451777d4d370a7e50c727f8dd3a51c9e1a7ac9576e4",
          "withoutMetadata": "3881cec1f80b604a2d95d8821a8996f54ad9e6ed48e8e7a71ba9f4923f60126d",
          "linkedWithoutMetadata": "3881cec1f80b604a2d95d8821a8996f54ad9e6ed48e8e7a71ba9f4923f60126d"
        },
        "inherit": [
          "wrapperFactoryBase",
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "wrapperFactory",
            "src": "contracts/avatars/wrapperFactory/wrapperFactory.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:19"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:21"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:22"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "wrapperFactoryBase": {
        "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:14",
        "version": {
          "withMetadata": "94277d916c248c6282e0122870beaa6ce132aadc35cee78adb91380f1369fae4",
          "withoutMetadata": "f4bcf20d648a68e3ba8cdb598f4534c816eb4cbecfd048883da13af69ac5ea57",
          "linkedWithoutMetadata": "f4bcf20d648a68e3ba8cdb598f4534c816eb4cbecfd048883da13af69ac5ea57"
        },
        "inherit": [
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "createSafeWrapperWithBudget(address,address,uint256,uint256,address,uint256,address[],uint8,string,string)",
          "delegateSetup(address)",
          "enableModule(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "EMPTY_DATA",
            "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:19"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:21"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:22"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "wrapperFactoryLogic": {
        "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:13",
        "version": {
          "withMetadata": "7e8358c367cc88dcfaa95ef65a1e1ae8ef7fed01ad740f214b63c074b08a88c5",
          "withoutMetadata": "dc1f9db8ea38173453a166d74809958d733bca8f6c6928b6a4cf3879c778928e",
          "linkedWithoutMetadata": "dc1f9db8ea38173453a166d74809958d733bca8f6c6928b6a4cf3879c778928e"
        },
        "inherit": [
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createSafeWrapperWithBudget(address,uint256,uint256,address,uint256,address[],uint256)",
          "delegateSetup(address)",
          "enableModule(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "wrapperFactoryLogic",
            "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "EMPTY_DATA",
            "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:18"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:19"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:20"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:21"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "permissionRegHandler": {
        "src": "contracts/core/permissionRegHandler.sol:5",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "settingsModuleHandler": {
        "src": "contracts/core/settingsModuleHandler.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springAvatar": {
        "src": "contracts/core/springAvatar.sol:14",
        "inherit": [
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "setPermissionReg(address)",
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springModifier": {
        "src": "contracts/core/springModifier.sol:10",
        "inherit": [
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "setPermissionReg(address)",
          "enableModification(address,address)",
          "enableSettingsModule(address)",
          "disableSettingsModule(address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springModule": {
        "src": "contracts/core/springModule.sol:17",
        "inherit": [
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setPermissionReg(address)",
          "enableAvatar(address)",
          "disableAvatar(address,address)",
          "isAvatarEnabled(address)",
          "getAvatarsPaginated(address,uint256)",
          "setTarget(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "dummyAvatar": {
        "src": "contracts/mockContracts/dummyAvatar.sol:7",
        "version": {
          "withMetadata": "faabfae7854473e11ed72e64aad3c64089ac2aba79b690285e5921b9cf8e0c89",
          "withoutMetadata": "5d989797c862827700799041ceec506e049948ad41dffa88616256eb9db922e2",
          "linkedWithoutMetadata": "5d989797c862827700799041ceec506e049948ad41dffa88616256eb9db922e2"
        },
        "inherit": [
          "Executor"
        ],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "setSuccess(bool)",
          "getSuccess()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "testSuccessful",
            "src": "contracts/mockContracts/dummyAvatar.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "testSuccessful",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "dummyAvatar",
              "src": "contracts/mockContracts/dummyAvatar.sol:8"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "dummyBridge": {
        "src": "contracts/mockContracts/dummyBridge.sol:7",
        "version": {
          "withMetadata": "6a03e7aa118cc613cb15f5ae5eb66f6f50132fd63d57ac9e23f4321b94d06739",
          "withoutMetadata": "aaec889a9e6a3220f4ad22d0025f8f4b59f8d4e4ac9b90c6b6dc835f937f748b",
          "linkedWithoutMetadata": "aaec889a9e6a3220f4ad22d0025f8f4b59f8d4e4ac9b90c6b6dc835f937f748b"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "requireToPassMessage(address payable,bytes,uint256)",
          "messageSender()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "dummyModule": {
        "src": "contracts/mockContracts/dummyModule.sol:14",
        "version": {
          "withMetadata": "5e9d920d986b187c0c3352632d8ede86ce45088bd25b6da071a1a9b1be674446",
          "withoutMetadata": "4a94de758be6169fc45937395961394774b308f0d336a3f734683a2f726ff708",
          "linkedWithoutMetadata": "4a94de758be6169fc45937395961394774b308f0d336a3f734683a2f726ff708"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exec(address,uint256,bytes,address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "budgetModifier": {
        "src": "contracts/modifiers/budgetModifier.sol:6",
        "version": {
          "withMetadata": "88b3574f18d38fbd88b68d300871bf08999ee617c9ca6b9c1de5e73f9e55195f",
          "withoutMetadata": "88b3574f18d38fbd88b68d300871bf08999ee617c9ca6b9c1de5e73f9e55195f",
          "linkedWithoutMetadata": "88b3574f18d38fbd88b68d300871bf08999ee617c9ca6b9c1de5e73f9e55195f"
        },
        "inherit": [
          "budgetModifierBase",
          "springModifier",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "budgetModifier",
            "src": "contracts/modifiers/budgetModifier.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            },
            {
              "label": "budgets",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_struct(budget)15643_storage)",
              "contract": "budgetModifierBase",
              "src": "contracts/modifiers/budgetModifierBase.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(budget)15643_storage)": {
              "label": "mapping(address => struct budgetModifierBase.budget)",
              "numberOfBytes": "32"
            },
            "t_struct(budget)15643_storage": {
              "label": "struct budgetModifierBase.budget",
              "members": [
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastReset",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "frozen",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "budgetModifierBase": {
        "src": "contracts/modifiers/budgetModifierBase.sol:9",
        "version": {
          "withMetadata": "b70ebd750fd1a5801bb01d420015339ad7f217a5b8e41261a6891a7e7edec781",
          "withoutMetadata": "927ee70732fdcdcfd5785bf513c94fa47c5095a6c0808cd34518eaa5b442a93a",
          "linkedWithoutMetadata": "927ee70732fdcdcfd5785bf513c94fa47c5095a6c0808cd34518eaa5b442a93a"
        },
        "inherit": [
          "springModifier",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "setBudget(address,uint256,uint256)",
          "getBudget(address)",
          "setFreeze(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            },
            {
              "label": "budgets",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_struct(budget)15643_storage)",
              "contract": "budgetModifierBase",
              "src": "contracts/modifiers/budgetModifierBase.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(budget)15643_storage)": {
              "label": "mapping(address => struct budgetModifierBase.budget)",
              "numberOfBytes": "32"
            },
            "t_struct(budget)15643_storage": {
              "label": "struct budgetModifierBase.budget",
              "members": [
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastReset",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "frozen",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "budgetModifierLogic": {
        "src": "contracts/modifiers/budgetModifierLogic.sol:7",
        "version": {
          "withMetadata": "a822f4c0303c7afdd367af1b7da25c7ab28c335c58e2a0bcb6d862c7797bf43f",
          "withoutMetadata": "4308920101379d17d4481c06f5de3b4532fe04ef9c6f3ddb786bf5b4d8c24a08",
          "linkedWithoutMetadata": "4308920101379d17d4481c06f5de3b4532fe04ef9c6f3ddb786bf5b4d8c24a08"
        },
        "inherit": [
          "logicBase",
          "budgetModifierBase",
          "springModifier",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "budgetModifierLogic",
            "src": "contracts/modifiers/budgetModifierLogic.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "203",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "206",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "207",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            },
            {
              "label": "budgets",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_struct(budget)15643_storage)",
              "contract": "budgetModifierBase",
              "src": "contracts/modifiers/budgetModifierBase.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(budget)15643_storage)": {
              "label": "mapping(address => struct budgetModifierBase.budget)",
              "numberOfBytes": "32"
            },
            "t_struct(budget)15643_storage": {
              "label": "struct budgetModifierBase.budget",
              "members": [
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastReset",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "frozen",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20VotesUpgradeable": {
        "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:29",
        "inherit": [
          "ERC20PermitUpgradeable",
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "IVotesUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeCastUpgradeable",
          "MathUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "checkpoints(address,uint32)",
          "numCheckpoints(address)",
          "delegates(address)",
          "getVotes(address)",
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_address,t_struct(Counter)8000_storage)",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "154",
              "type": "t_bytes32",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
              "renamedFrom": "_PERMIT_TYPEHASH"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:46"
            },
            {
              "label": "_checkpoints",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)16150_storage)dyn_storage)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:47"
            },
            {
              "label": "_totalSupplyCheckpoints",
              "offset": 0,
              "slot": "206",
              "type": "t_array(t_struct(Checkpoint)16150_storage)dyn_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:48"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:323"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Checkpoint)16150_storage)dyn_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Checkpoint)16150_storage)dyn_storage)": {
              "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8000_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)16150_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint224",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8000_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint224": {
              "label": "uint224",
              "numberOfBytes": "28"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovToken": {
        "src": "contracts/modules/GovernorV2/GovToken.sol:15",
        "version": {
          "withMetadata": "3c45b5c74d3e0e6324b6838fb3d2cb4214b6624084c0e3569ca0a1dc98578374",
          "withoutMetadata": "da9e7fc022431939edd904b25bb898f21c737f2989a8f385751ebc0c5c442f1a",
          "linkedWithoutMetadata": "da9e7fc022431939edd904b25bb898f21c737f2989a8f385751ebc0c5c442f1a"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "OwnableUpgradeable",
          "ERC20VotesUpgradeable",
          "ERC20PermitUpgradeable",
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "IVotesUpgradeable",
          "springAvatar",
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string)",
          "transferFrom(address,address,uint256)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "lockVotes(address,uint256,uint256)",
          "freeVotes(address,uint256,uint256)",
          "getLockedVotes(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "54",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "56",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "103",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_address,t_struct(Counter)8000_storage)",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "155",
              "type": "t_bytes32",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
              "renamedFrom": "_PERMIT_TYPEHASH"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "156",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:46"
            },
            {
              "label": "_checkpoints",
              "offset": 0,
              "slot": "206",
              "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)16150_storage)dyn_storage)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:47"
            },
            {
              "label": "_totalSupplyCheckpoints",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_struct(Checkpoint)16150_storage)dyn_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:48"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "208",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:323"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "255",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "355",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "lockedVotes",
              "offset": 0,
              "slot": "405",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GovToken",
              "src": "contracts/modules/GovernorV2/GovToken.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Checkpoint)16150_storage)dyn_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Checkpoint)16150_storage)dyn_storage)": {
              "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8000_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)16150_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint224",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8000_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint224": {
              "label": "uint224",
              "numberOfBytes": "28"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorCoreV2": {
        "src": "contracts/modules/GovernorV2/GovernorCoreV2.sol:15",
        "version": {
          "withMetadata": "2bb14e96db3a3ed21bedc29bae81051105a12aeae01f4258fb2ad3b5a56ec483",
          "withoutMetadata": "a29630ef74df2d4811a064ba10e5f03b9a97009b4416feefdac7110dd15ef847",
          "linkedWithoutMetadata": "a29630ef74df2d4811a064ba10e5f03b9a97009b4416feefdac7110dd15ef847"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "GovernorTimelockControlUpgradeable",
          "GovernorVotesQuorumFractionUpgradeable",
          "GovernorVotes",
          "GovernorCountingSimpleUpgradeable",
          "GovernorSettingsUpgradeable",
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorTimelockUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address,address,uint256,uint256)",
          "votingDelay()",
          "votingPeriod()",
          "quorum(uint256)",
          "state(uint256)",
          "propose(address[],uint256[],bytes[],string,uint256)",
          "proposalThreshold()",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorTimelockUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "253",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "255",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "257",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "_votingDelay",
              "offset": 0,
              "slot": "303",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:18"
            },
            {
              "label": "_votingPeriod",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:19"
            },
            {
              "label": "_proposalThreshold",
              "offset": 0,
              "slot": "305",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "306",
              "type": "t_array(t_uint256)47_storage",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:160"
            },
            {
              "label": "minStake",
              "offset": 0,
              "slot": "353",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:18"
            },
            {
              "label": "maxStake",
              "offset": 0,
              "slot": "354",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:19"
            },
            {
              "label": "_proposalVotes",
              "offset": 0,
              "slot": "355",
              "type": "t_mapping(t_uint256,t_struct(ProposalVote)17440_storage)",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:59"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "356",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:241"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "405",
              "type": "t_contract(GovToken)17087",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "406",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:78"
            },
            {
              "label": "_quorumNumerator",
              "offset": 0,
              "slot": "456",
              "type": "t_uint256",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "457",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:124"
            },
            {
              "label": "_timelock",
              "offset": 0,
              "slot": "506",
              "type": "t_contract(TimelockControllerUpgradeable)4870",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:32"
            },
            {
              "label": "_timelockIds",
              "offset": 0,
              "slot": "507",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "508",
              "type": "t_array(t_uint256)48_storage",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:243"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "556",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "606",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GovToken)17087": {
              "label": "contract GovToken",
              "numberOfBytes": "20"
            },
            "t_contract(TimelockControllerUpgradeable)4870": {
              "label": "contract TimelockControllerUpgradeable",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalVote)17440_storage)": {
              "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18473_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(ProposalVote)17440_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
              "members": [
                {
                  "label": "againstVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "forVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "abstainVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "proposerStake",
                  "type": "t_struct(Stake)17423_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "objectorStake",
                  "type": "t_struct(Stake)17423_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "hasVoted",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(Stake)17423_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.Stake",
              "members": [
                {
                  "label": "staker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorCountingSimpleUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:14",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "COUNTING_MODE()",
          "hasVoted(uint256,address)",
          "proposalVotes(uint256)",
          "noObjections(uint256)",
          "getProposer(uint256)",
          "getObjector(uint256)",
          "proposalThreshold()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "minStake",
              "offset": 0,
              "slot": "253",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:18"
            },
            {
              "label": "maxStake",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:19"
            },
            {
              "label": "_proposalVotes",
              "offset": 0,
              "slot": "255",
              "type": "t_mapping(t_uint256,t_struct(ProposalVote)17440_storage)",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:59"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:241"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalVote)17440_storage)": {
              "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18473_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(ProposalVote)17440_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
              "members": [
                {
                  "label": "againstVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "forVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "abstainVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "proposerStake",
                  "type": "t_struct(Stake)17423_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "objectorStake",
                  "type": "t_struct(Stake)17423_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "hasVoted",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(Stake)17423_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.Stake",
              "members": [
                {
                  "label": "staker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorSettingsUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:14",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "votingDelay()",
          "votingPeriod()",
          "proposalThreshold()",
          "setVotingDelay(uint256)",
          "setVotingPeriod(uint256)",
          "setProposalThreshold(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "_votingDelay",
              "offset": 0,
              "slot": "253",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:18"
            },
            {
              "label": "_votingPeriod",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:19"
            },
            {
              "label": "_proposalThreshold",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)47_storage",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:160"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18473_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorTimelockControlUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:27",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorTimelockUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "state(uint256)",
          "timelock()",
          "proposalEta(uint256)",
          "queue(address[],uint256[],bytes[],bytes32)",
          "updateTimelock(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorTimelockUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "253",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "255",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "257",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "_timelock",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(TimelockControllerUpgradeable)4870",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:32"
            },
            {
              "label": "_timelockIds",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)48_storage",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:243"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(TimelockControllerUpgradeable)4870": {
              "label": "contract TimelockControllerUpgradeable",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18473_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:32",
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "DoubleEndedQueueUpgradeable",
          "SafeCastUpgradeable",
          "TimersUpgradeable",
          "MathUpgradeable",
          "AddressUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "()",
          "supportsInterface(bytes4)",
          "name()",
          "version()",
          "hashProposal(address[],uint256[],bytes[],bytes32)",
          "state(uint256)",
          "proposalSnapshot(uint256)",
          "proposalDeadline(uint256)",
          "proposalThreshold()",
          "noObjections(uint256)",
          "object(uint256,uint256,string,bytes)",
          "propose(address[],uint256[],bytes[],string,uint256)",
          "execute(address[],uint256[],bytes[],bytes32)",
          "retrieveStake(uint256)",
          "getVotes(address,uint256)",
          "getVotesWithParams(address,uint256,bytes)",
          "castVote(uint256,uint8,uint256)",
          "castVoteWithReason(uint256,uint8,uint256,string)",
          "castVoteWithReasonAndParams(uint256,uint8,uint256,string,bytes)",
          "castVoteBySig(uint256,uint8,uint256,uint8,bytes32,bytes32)",
          "castVoteWithReasonAndParamsBySig(uint256,uint8,uint256,string,bytes,uint8,bytes32,bytes32)",
          "getProposer(uint256)",
          "getObjector(uint256)",
          "relay(address,uint256,bytes)",
          "onERC721Received(address,address,uint256,bytes)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18473_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorVotes": {
        "src": "contracts/modules/GovernorV2/GovernorVotes.sol:17",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "253",
              "type": "t_contract(GovToken)17087",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "254",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:78"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GovToken)17087": {
              "label": "contract GovToken",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18473_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorVotesQuorumFractionUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:17",
        "inherit": [
          "GovernorVotes",
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "quorumNumerator()",
          "quorumDenominator()",
          "quorum(uint256)",
          "updateQuorumNumerator(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "253",
              "type": "t_contract(GovToken)17087",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "254",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:78"
            },
            {
              "label": "_quorumNumerator",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:124"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GovToken)17087": {
              "label": "contract GovToken",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18473_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGovernorTimelockUpgradeable": {
        "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:14",
        "inherit": [
          "IGovernorUpgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "timelock()",
          "proposalEta(uint256)",
          "queue(address[],uint256[],bytes[],bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorTimelockUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGovernorUpgradeable": {
        "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:14",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "version()",
          "COUNTING_MODE()",
          "hashProposal(address[],uint256[],bytes[],bytes32)",
          "state(uint256)",
          "proposalSnapshot(uint256)",
          "proposalDeadline(uint256)",
          "votingDelay()",
          "votingPeriod()",
          "quorum(uint256)",
          "getVotes(address,uint256)",
          "getVotesWithParams(address,uint256,bytes)",
          "hasVoted(uint256,address)",
          "propose(address[],uint256[],bytes[],string,uint256)",
          "execute(address[],uint256[],bytes[],bytes32)",
          "castVote(uint256,uint8,uint256)",
          "castVoteWithReason(uint256,uint8,uint256,string)",
          "castVoteWithReasonAndParams(uint256,uint8,uint256,string,bytes)",
          "castVoteBySig(uint256,uint8,uint256,uint8,bytes32,bytes32)",
          "castVoteWithReasonAndParamsBySig(uint256,uint8,uint256,string,bytes,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IVotes": {
        "src": "contracts/modules/GovernorV2/IVotes.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "useVotes(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimeLockModuleV2": {
        "src": "contracts/modules/GovernorV2/TimeLockModuleV2.sol:6",
        "version": {
          "withMetadata": "0900f001d1b4258e4f9f09db2853aaf4b285473751e76fc13f97f34704f1f32e",
          "withoutMetadata": "78f7ee762c1189049a4b8afc7c11072f258a1cdb9a78831f3134bcc0688006c9",
          "linkedWithoutMetadata": "78f7ee762c1189049a4b8afc7c11072f258a1cdb9a78831f3134bcc0688006c9"
        },
        "inherit": [
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "TimelockControllerUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint256,address[],address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            },
            {
              "label": "_timestamps",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:34"
            },
            {
              "label": "_minDelay",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)48_storage",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:432"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "251",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "252",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "253",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3425_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "bridgeProxyLogic": {
        "src": "contracts/modules/bridgeModules/bridgeProxyLogic.sol:18",
        "version": {
          "withMetadata": "2eb66b696914f3e7ba49a7143edb281d995bd60c9243fd4ca1b3c9057a9aa8d3",
          "withoutMetadata": "a05fde3485225c346f01cc60117bf7c82f4aaec47c33170e8d74535950d29e6c",
          "linkedWithoutMetadata": "a05fde3485225c346f01cc60117bf7c82f4aaec47c33170e8d74535950d29e6c"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "EternalStorage",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "()",
          "initialize(bytes)",
          "setPermissionReg(address)",
          "setBridgeContract(address)",
          "setMediatorContractOnOtherSide(address)",
          "setRequestGasLimit(uint256)",
          "bridgeContract()",
          "mediatorContractOnOtherSide()",
          "requestGasLimit()",
          "executeTransactionFromAMB(address,uint256,bytes,address,uint8)",
          "executeGenericTransactionFromAMB(address,bytes)",
          "execTransactionFromModule(address,uint256,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "uintStorage",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:9"
            },
            {
              "label": "stringStorage",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_bytes32,t_string_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:10"
            },
            {
              "label": "addressStorage",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:11"
            },
            {
              "label": "bytesStorage",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_bytes32,t_bytes_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:12"
            },
            {
              "label": "boolStorage",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:13"
            },
            {
              "label": "intStorage",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_bytes32,t_int256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:14"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "163",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_int256)": {
              "label": "mapping(bytes32 => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAMB": {
        "src": "contracts/modules/bridgeModules/interfaces/IAMB.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "messageSender()",
          "maxGasPerTx()",
          "transactionHash()",
          "messageId()",
          "messageSourceChainId()",
          "messageCallStatus(bytes32)",
          "failedMessageDataHash(bytes32)",
          "failedMessageReceiver(bytes32)",
          "failedMessageSender(bytes32)",
          "requireToPassMessage(address,bytes,uint256)",
          "requireToConfirmMessage(address,bytes,uint256)",
          "requireToGetInformation(bytes32,bytes)",
          "sourceChainId()",
          "destinationChainId()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EternalStorage": {
        "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:8",
        "version": {
          "withMetadata": "4e416fa7f5f575893334c40b6621898f58713aeaa3196919a6319540e9b1f939",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "uintStorage",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:9"
            },
            {
              "label": "stringStorage",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_string_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:10"
            },
            {
              "label": "addressStorage",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:11"
            },
            {
              "label": "bytesStorage",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_bytes32,t_bytes_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:12"
            },
            {
              "label": "boolStorage",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:13"
            },
            {
              "label": "intStorage",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_int256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_int256)": {
              "label": "mapping(bytes32 => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "safeWrapper": {
        "src": "contracts/modules/safeWrapper/safeWrapper.sol:6",
        "version": {
          "withMetadata": "3d642c101a791e92174f767fbb053a84279a13b4936276d026e8fe58c230a5c0",
          "withoutMetadata": "3d642c101a791e92174f767fbb053a84279a13b4936276d026e8fe58c230a5c0",
          "linkedWithoutMetadata": "3d642c101a791e92174f767fbb053a84279a13b4936276d026e8fe58c230a5c0"
        },
        "inherit": [
          "safeWrapperBase",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "(address,address,string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "safeWrapper",
            "src": "contracts/modules/safeWrapper/safeWrapper.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "safe",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:14"
            },
            {
              "label": "sector",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "safeWrapperBase": {
        "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:9",
        "version": {
          "withMetadata": "375b916cc7d6aa2f92a3eaa1333b022ac9de68bc491e041c16dc8bfe50510c8b",
          "withoutMetadata": "b6a51f32d7983bb46cc12db4946292a2ce39cd4755931e3f176c12450d4e2d69",
          "linkedWithoutMetadata": "b6a51f32d7983bb46cc12db4946292a2ce39cd4755931e3f176c12450d4e2d69"
        },
        "inherit": [
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "setPermissionReg(address)",
          "sendEth(address,uint256,address)",
          "removeOwner(address,uint256)",
          "addOwner(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "safe",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:14"
            },
            {
              "label": "sector",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "safeWrapperLogic": {
        "src": "contracts/modules/safeWrapper/safeWrapperLogic.sol:8",
        "version": {
          "withMetadata": "cfc5090ec09e33f372e36ab034522aa1961365c3410058010d070fff0816d07e",
          "withoutMetadata": "ad5e4be889d37448826b7b4e4e26610171accf71b6f0c99058314b895e368922",
          "linkedWithoutMetadata": "ad5e4be889d37448826b7b4e4e26610171accf71b6f0c99058314b895e368922"
        },
        "inherit": [
          "logicBase",
          "safeWrapperBase",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "safeWrapperLogic",
            "src": "contracts/modules/safeWrapper/safeWrapperLogic.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "203",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "safe",
              "offset": 0,
              "slot": "206",
              "type": "t_address",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "207",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:14"
            },
            {
              "label": "sector",
              "offset": 0,
              "slot": "208",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGnosisSafeProxy": {
        "src": "contracts/proxyContracts/factory/IGnosisSafeProxy.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IProxyCallback": {
        "src": "contracts/proxyContracts/factory/IProxyCallback.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "springFactory": {
        "src": "contracts/proxyContracts/factory/springFactory.sol:9",
        "version": {
          "withMetadata": "b2aee643f8213d578bee9011e0b9063bfb2c01092b716b8abf7b45ed05be3de5",
          "withoutMetadata": "267efa799fe2876c80fc8949ec20d845eb1e24d3d711552a734c102ce166f5df",
          "linkedWithoutMetadata": "267efa799fe2876c80fc8949ec20d845eb1e24d3d711552a734c102ce166f5df"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "proxyRuntimeCode()",
          "proxyCreationCode()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "logicBase": {
        "src": "contracts/proxyContracts/logic/logicBase.sol:8",
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springProxy": {
        "src": "contracts/proxyContracts/proxy/springProxy.sol:9",
        "version": {
          "withMetadata": "610b3e6bf5909dda45a05c305e9a5003ec1098af6b60a6a02ed825cd931bc55f",
          "withoutMetadata": "610b3e6bf5909dda45a05c305e9a5003ec1098af6b60a6a02ed825cd931bc55f",
          "linkedWithoutMetadata": "610b3e6bf5909dda45a05c305e9a5003ec1098af6b60a6a02ed825cd931bc55f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "console",
          "Address",
          "StorageSlot"
        ],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "springProxy",
            "src": "contracts/proxyContracts/proxy/springProxy.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "c100f561d0dd92dba3736f656c282e8f21b151345f8f7bb341c5b2afdc4dc3f2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "GnosisSafe": {
        "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:19",
        "version": {
          "withMetadata": "5bf5fca9c2200523da52d1a5a25c79bbbbe65d85ba6c17260910f952feb77ecf",
          "withoutMetadata": "b0dafd629c7d73386b769d413f1b7e5b04ef16c873c373fddae6ff731dc119fa",
          "linkedWithoutMetadata": "b0dafd629c7d73386b769d413f1b7e5b04ef16c873c373fddae6ff731dc119fa"
        },
        "inherit": [
          "GuardManager",
          "StorageAccessible",
          "FallbackManager",
          "ISignatureValidatorConstants",
          "SecuredTokenTransfer",
          "SignatureDecoder",
          "OwnerManager",
          "ModuleManager",
          "Executor",
          "SelfAuthorized",
          "Singleton",
          "EtherPaymentFallback"
        ],
        "libraries": [
          "GnosisSafeMath"
        ],
        "methods": [
          "()",
          "setup(address[],uint256,address,bytes,address,address,uint256,address payable)",
          "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes)",
          "checkSignatures(bytes32,bytes,bytes)",
          "checkNSignatures(bytes32,bytes,bytes,uint256)",
          "requiredTxGas(address,uint256,bytes,uint8)",
          "approveHash(bytes32)",
          "getChainId()",
          "domainSeparator()",
          "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)",
          "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafe",
            "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:59"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            },
            {
              "label": "owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            },
            {
              "label": "nonce",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:51"
            },
            {
              "label": "_deprecatedDomainSeparator",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes32",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:52"
            },
            {
              "label": "signedMessages",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:54"
            },
            {
              "label": "approvedHashes",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
              "label": "mapping(address => mapping(bytes32 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Executor": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/Executor.sol:7",
        "version": {
          "withMetadata": "48619bf387511c5a10b45ee94807128680593ef546d04f01a27eabf49556c7fd",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FallbackManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/FallbackManager.sol:8",
        "version": {
          "withMetadata": "dc2e82ceb477aaedb214fa9fa713475cf985ee3fb52807485e8ffb5a136baebf",
          "withoutMetadata": "69f3af1e7187f01e1814bbf1bb39db08a4ec97d96ed0fd50031fc06be9727d00",
          "linkedWithoutMetadata": "69f3af1e7187f01e1814bbf1bb39db08a4ec97d96ed0fd50031fc06be9727d00"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setFallbackHandler(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Guard": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GuardManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:27",
        "version": {
          "withMetadata": "33f926cafe41259dcea04aaf38b9d648588b9c3c637f28568f169decdf5a90b3",
          "withoutMetadata": "0a932d5475d91581a9fef336ea4a1e989b74f706b6caf1cc54201540170dc099",
          "linkedWithoutMetadata": "0a932d5475d91581a9fef336ea4a1e989b74f706b6caf1cc54201540170dc099"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setGuard(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ModuleManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:10",
        "version": {
          "withMetadata": "ff1679fefde03297bd1da3ffbc1236e691f5e83cc5a1402035baec922e669e8d",
          "withoutMetadata": "62fea39f8e4489b1904c18ff2d73a421d08acbedb8a365fbfd6491fcc830c9f2",
          "linkedWithoutMetadata": "62fea39f8e4489b1904c18ff2d73a421d08acbedb8a365fbfd6491fcc830c9f2"
        },
        "inherit": [
          "Executor",
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "modules",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "OwnerManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:8",
        "version": {
          "withMetadata": "1d81ca17a9fcfa25ce9339ce2680655269fb902d62272bbbfb3734abc2eb18ca",
          "withoutMetadata": "79fecfeb20f4939a246b45855d3281a3ec54ae9e3cbd6d7c32b51fd008eb6995",
          "linkedWithoutMetadata": "79fecfeb20f4939a246b45855d3281a3ec54ae9e3cbd6d7c32b51fd008eb6995"
        },
        "inherit": [
          "SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "addOwnerWithThreshold(address,uint256)",
          "removeOwner(address,address,uint256)",
          "swapOwner(address,address,address)",
          "changeThreshold(uint256)",
          "getThreshold()",
          "isOwner(address)",
          "getOwners()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owners",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Enum": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Enum.sol:6",
        "version": {
          "withMetadata": "fa710b28020d20e4d963110f65c100a0c3da47d9fc1e1731c23b1799b1d4c1fb",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EtherPaymentFallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/EtherPaymentFallback.sol:6",
        "version": {
          "withMetadata": "187ba1ab7509d8a8a41148e5346c4676a97ef3d8aa071ba4bf4e8d3d702d2a82",
          "withoutMetadata": "2df5b0a6e815736a589f0331577b6d497e1b407aaa2113a81067671b40e55a4b",
          "linkedWithoutMetadata": "2df5b0a6e815736a589f0331577b6d497e1b407aaa2113a81067671b40e55a4b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SecuredTokenTransfer": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SecuredTokenTransfer.sol:6",
        "version": {
          "withMetadata": "c4a369d358aa1c59074eeb091afd702a8d7279190a5bc1fd805850d6fdff6410",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SelfAuthorized": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol:6",
        "version": {
          "withMetadata": "b276ff9268a1ccf410bee71fafff8878d987844fecc7d0a7fb7c8788c63eb96d",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SignatureDecoder": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SignatureDecoder.sol:6",
        "version": {
          "withMetadata": "d4004664ae4ec477c1a4cae24dbf247fa9ec109cdaf9a0146c3721cc8f2b42b6",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Singleton": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:7",
        "version": {
          "withMetadata": "a741b85f7f5542acf60e6428bc627b238303a051fd1480b1237fbd25c2770440",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageAccessible": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/StorageAccessible.sol:6",
        "version": {
          "withMetadata": "063b2726c4c93e31ec6088b838689586ea1d616d59a03b7a46a4cf0a75119694",
          "withoutMetadata": "e3cefdf9f2f60bc1238dfe2249e501fdbc52930b5866c7829ce07a7b370ccae9",
          "linkedWithoutMetadata": "e3cefdf9f2f60bc1238dfe2249e501fdbc52930b5866c7829ce07a7b370ccae9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getStorageAt(uint256,uint256)",
          "simulateAndRevert(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeMath": {
        "src": "@gnosis.pm/safe-contracts/contracts/external/GnosisSafeMath.sol:10",
        "version": {
          "withMetadata": "8613af15c62060eda9d711eb50192cf0dc17f5c0059409395b9646f0fa8045fc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISignatureValidator": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:9",
        "inherit": [
          "ISignatureValidatorConstants"
        ],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISignatureValidatorConstants": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:4",
        "version": {
          "withMetadata": "da269993427b7502b85b990935687b77da03ef51e6fb492dd50f74b1f687b657",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:13",
        "version": {
          "withMetadata": "4403647dcbde7449432007f15728744e2691e4b245342cfb676827d2eea3141b",
          "withoutMetadata": "3cb953a9f4cf894eadc4bcfa5dfe2e06c70518a0a27283970fd270c253168eb0",
          "linkedWithoutMetadata": "3cb953a9f4cf894eadc4bcfa5dfe2e06c70518a0a27283970fd270c253168eb0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafeProxy",
            "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "GnosisSafeProxy",
              "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "masterCopy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GnosisSafeProxyFactory": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxyFactory.sol:9",
        "version": {
          "withMetadata": "dade3c6a8192a11725263d527b917a33a210e656185fc9e8ad8ea617359a2b52",
          "withoutMetadata": "1ce43b946dcd7ba295e1269263fd1b6868ab93a8b7b5ca5fc015045d5aa9229f",
          "linkedWithoutMetadata": "1ce43b946dcd7ba295e1269263fd1b6868ab93a8b7b5ca5fc015045d5aa9229f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProxy(address,bytes)",
          "proxyRuntimeCode()",
          "proxyCreationCode()",
          "createProxyWithNonce(address,bytes,uint256)",
          "createProxyWithCallback(address,bytes,uint256,address)",
          "calculateCreateProxyWithNonceAddress(address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IProxyCreationCallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Modifier": {
        "src": "@gnosis.pm/zodiac/contracts/core/Modifier.sol:9",
        "inherit": [
          "IAvatar",
          "Module",
          "Guardable",
          "FactoryFriendly",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "disableModule(address,address)",
          "enableModule(address)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "avatar",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:12"
            },
            {
              "label": "target",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:14"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Modifier",
              "src": "@gnosis.pm/zodiac/contracts/core/Modifier.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Module": {
        "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:10",
        "inherit": [
          "Guardable",
          "FactoryFriendly",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setAvatar(address)",
          "setTarget(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "avatar",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:12"
            },
            {
              "label": "target",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "Module",
              "src": "@gnosis.pm/zodiac/contracts/core/Module.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FactoryFriendly": {
        "src": "@gnosis.pm/zodiac/contracts/factory/FactoryFriendly.sol:8",
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setUp(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BaseGuard": {
        "src": "@gnosis.pm/zodiac/contracts/guard/BaseGuard.sol:8",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Guardable": {
        "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:9",
        "version": {
          "withMetadata": "8729c389f8175a94eeb27a597c20f2db4d8f6e46d1cba977ea1ac2254b833a49",
          "withoutMetadata": "bf19dd5c52ee40424bf5e1b4367dc2f2fb49a84d7aa19039b850b5d6df6b1047",
          "linkedWithoutMetadata": "bf19dd5c52ee40424bf5e1b4367dc2f2fb49a84d7aa19039b850b5d6df6b1047"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setGuard(address)",
          "getGuard()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAvatar": {
        "src": "@gnosis.pm/zodiac/contracts/interfaces/IAvatar.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IGuard": {
        "src": "@gnosis.pm/zodiac/contracts/interfaces/IGuard.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3425_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TimelockControllerUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:27",
        "version": {
          "withMetadata": "93c2ecaae320d6300899f2a7b35c84e2fd2be0c7a82f11d199e592dc9e3d4ef4",
          "withoutMetadata": "2090350735f5c3bdb96f361d12957eb370c051f858ba1a6c1ff335f5c6190f0a",
          "linkedWithoutMetadata": "2090350735f5c3bdb96f361d12957eb370c051f858ba1a6c1ff335f5c6190f0a"
        },
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "supportsInterface(bytes4)",
          "isOperation(bytes32)",
          "isOperationPending(bytes32)",
          "isOperationReady(bytes32)",
          "isOperationDone(bytes32)",
          "getTimestamp(bytes32)",
          "getMinDelay()",
          "hashOperation(address,uint256,bytes,bytes32,bytes32)",
          "hashOperationBatch(address[],uint256[],bytes[],bytes32,bytes32)",
          "schedule(address,uint256,bytes,bytes32,bytes32,uint256)",
          "scheduleBatch(address[],uint256[],bytes[],bytes32,bytes32,uint256)",
          "cancel(bytes32)",
          "execute(address,uint256,bytes,bytes32,bytes32)",
          "executeBatch(address[],uint256[],bytes[],bytes32,bytes32)",
          "updateDelay(uint256)",
          "onERC721Received(address,address,uint256,bytes)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            },
            {
              "label": "_timestamps",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:34"
            },
            {
              "label": "_minDelay",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)48_storage",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:432"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3425_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IVotesUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/governance/utils/IVotesUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getVotes(address)",
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "delegates(address)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "2a068734c026ac0588f9ecc3dad9aaffe9e15f5b44f41cb1b66055a8d20f392b",
          "withoutMetadata": "db1447c1afc82e7549d7f5fcd89add5143ffedea7ff0db3414fed90bf71ab239",
          "linkedWithoutMetadata": "db1447c1afc82e7549d7f5fcd89add5143ffedea7ff0db3414fed90bf71ab239"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20PermitUpgradeable": {
        "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:26",
        "inherit": [
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "CountersUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_address,t_struct(Counter)8000_storage)",
              "contract": "ERC20PermitUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:34"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "154",
              "type": "t_bytes32",
              "contract": "ERC20PermitUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:48",
              "renamedFrom": "_PERMIT_TYPEHASH"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC20PermitUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20PermitUpgradeable.sol:138"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8000_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8000_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "f3bd1e4c7055c6575de5ded808829466f0558d27e32e529e89917004f9aed13d",
          "withoutMetadata": "061200bd9dab026742a91776a60ba53f7b6fd77ca1dab5f3d5826076bbfe96ed",
          "linkedWithoutMetadata": "061200bd9dab026742a91776a60ba53f7b6fd77ca1dab5f3d5826076bbfe96ed"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "102",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "b5e74e742bd4099c3ffcf7a96f2e718dbabfa19e72c3ca918ef83a7b26e51896",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CountersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol:14",
        "version": {
          "withMetadata": "d7f80c247b6067cb172fd438e3f56990cc1ba886b39f426f5fcfade17ebc5f10",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "0db289179bd2697c54666413d56c72d7f752a1390311967e1368178ddcc6e4fc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "06a29fa468bce0c29e43a6e340cb8e0405e1af5aa98df2a0bd80568af54e15db",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimersUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/TimersUpgradeable.sol:9",
        "version": {
          "withMetadata": "8632367d465fd1a01c5104adfad8dfcded0f7b4844149bfeb3b11c3a640948c9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ECDSAUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol:14",
        "version": {
          "withMetadata": "a381b837b765d9b6704f87be559122e8700adefdeb7fb6e0d6e0cd09a820060e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EIP712Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "ECDSAUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "2",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "bfc458ad95b2ded7f4fb45a552dbb4ffa4b0136d124bb85bab880e8b7a6cba9e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeCastUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeCastUpgradeable.sol:21",
        "version": {
          "withMetadata": "c4d4f198b1bfc3e1ff27c9f490fa121b1b702219205648bb6e189334edeee8c5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DoubleEndedQueueUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/DoubleEndedQueueUpgradeable.sol:21",
        "version": {
          "withMetadata": "3e17a9a1b09a12dcc411eeb255d96b0bf8f669929c7d2612ab544423532d8a2b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeCastUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "389f3bbb054d84723e25e07db563153cc56483f01e3348915d6a1ad61be48c00",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:32",
        "version": {
          "withMetadata": "44cc06288b20e467bcf8fd3ee273df3ac16b5dcefa8244020f901056346834d5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IGnosisSafe": {
        "src": "contracts/avatars/gnosisSafe/IGnosisSafe.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "getOwners()",
          "isOwner(address)",
          "getThreshold()",
          "getModulesPaginated(address,uint256)",
          "isModuleEnabled(address)",
          "setGuard(address)",
          "disableModule(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DSAuth": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:30",
        "version": {
          "withMetadata": "cf2abe74988e1b3dd1a75233792047a8c0c604779be6a9908a3db338d80dcdcf",
          "withoutMetadata": "7b102b6bd996ead1073c8438bb1716546d03e848703d4fda4c88910439821be9",
          "linkedWithoutMetadata": "7b102b6bd996ead1073c8438bb1716546d03e848703d4fda4c88910439821be9"
        },
        "inherit": [
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setOwner(address)",
          "owner()",
          "setAuthority(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DSAuth",
            "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "DSAuthEvents": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:25",
        "version": {
          "withMetadata": "adb911002af224db5b930ee15b40d6c6c7ac376e2c437b4fe4640d8aa05e7fbd",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DSAuthority": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "canCall(address,address,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DSRoles": {
        "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:22",
        "inherit": [
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "getUserRoles(address)",
          "getCapabilityRoles(address,bytes4)",
          "isUserRoot(address)",
          "isCapabilityPublic(address,bytes4)",
          "hasUserRole(address,uint8)",
          "canCall(address,address,bytes4)",
          "setRootUser(address,bool)",
          "setUserRole(address,uint8,bool)",
          "setPublicCapability(address,bytes4,bool)",
          "setRoleCapability(uint8,address,bytes4,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IPermissionRegistry": {
        "src": "contracts/avatars/permissionReg/IPermissionRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "canCall(address,address,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "permissionRegistry": {
        "src": "contracts/avatars/permissionReg/permissionRegistry.sol:6",
        "version": {
          "withMetadata": "3608af58a914d9520f948adb2f34a39b3bb7222c1e262aa167bee20449959501",
          "withoutMetadata": "3608af58a914d9520f948adb2f34a39b3bb7222c1e262aa167bee20449959501",
          "linkedWithoutMetadata": "3608af58a914d9520f948adb2f34a39b3bb7222c1e262aa167bee20449959501"
        },
        "inherit": [
          "permissionRegistryBase",
          "springAvatar",
          "permissionRegHandler",
          "ERC721BurnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "DSRoles",
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "permissionRegistry",
            "src": "contracts/avatars/permissionReg/permissionRegistry.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "157",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "idTicker",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "210",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:15"
            },
            {
              "label": "tokenIDs",
              "offset": 0,
              "slot": "211",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "permissionRegistryBase": {
        "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:9",
        "version": {
          "withMetadata": "c7df70f88de6ce6889d1f9c97a454a5a58fbaa01d12a5e48a11ae3204c7665fe",
          "withoutMetadata": "e4f43219d22d7d1851dbb342450e257035447d098face85c7b638b47318fa219",
          "linkedWithoutMetadata": "e4f43219d22d7d1851dbb342450e257035447d098face85c7b638b47318fa219"
        },
        "inherit": [
          "springAvatar",
          "permissionRegHandler",
          "ERC721BurnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "DSRoles",
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "setLink(uint8,string)",
          "getNFT(address,uint8)",
          "getTokenID(address,uint8)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "idTicker",
            "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "157",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "207",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "idTicker",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "210",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:15"
            },
            {
              "label": "tokenIDs",
              "offset": 0,
              "slot": "211",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "permissionRegistryLogic": {
        "src": "contracts/avatars/permissionReg/permissionRegistryLogic.sol:7",
        "version": {
          "withMetadata": "5cc613bfac428a035fa74cdd6c0fec8df473af7d0ee638e33a83418e243c2150",
          "withoutMetadata": "e755622e3e290e8ab17363019dd9977f6c31b25d03b94656e7b98aa632773e4e",
          "linkedWithoutMetadata": "e755622e3e290e8ab17363019dd9977f6c31b25d03b94656e7b98aa632773e4e"
        },
        "inherit": [
          "permissionRegistryBase",
          "springAvatar",
          "permissionRegHandler",
          "ERC721BurnableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "logicBase",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar",
          "DSRoles",
          "DSAuthority",
          "DSAuth",
          "DSAuthEvents"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "permissionRegistryLogic",
            "src": "contracts/avatars/permissionReg/permissionRegistryLogic.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "authority",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DSAuthority)12384",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:31"
            },
            {
              "label": "Owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DSAuth",
              "src": "contracts/avatars/permissionReg/DAppHub/DSAuth.sol:32"
            },
            {
              "label": "_root_users",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:23"
            },
            {
              "label": "_user_roles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:24"
            },
            {
              "label": "_capability_roles",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:25"
            },
            {
              "label": "_public_capabilities",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "contract": "DSRoles",
              "src": "contracts/avatars/permissionReg/DAppHub/DSRoles.sol:26"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "107",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "157",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "158",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "257",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "258",
              "type": "t_string_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "259",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "260",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "261",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "262",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "263",
              "type": "t_array(t_uint256)44_storage",
              "contract": "ERC721Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "307",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC721BurnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "357",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "358",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "idTicker",
              "offset": 0,
              "slot": "359",
              "type": "t_uint256",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:14"
            },
            {
              "label": "links",
              "offset": 0,
              "slot": "360",
              "type": "t_mapping(t_uint8,t_string_storage)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:15"
            },
            {
              "label": "tokenIDs",
              "offset": 0,
              "slot": "361",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "permissionRegistryBase",
              "src": "contracts/avatars/permissionReg/permissionRegistryBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]",
              "numberOfBytes": "1408"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_contract(DSAuthority)12384": {
              "label": "contract DSAuthority",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
              "label": "mapping(address => mapping(bytes4 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_bytes32))": {
              "label": "mapping(address => mapping(bytes4 => bytes32))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bool)": {
              "label": "mapping(bytes4 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_bytes32)": {
              "label": "mapping(bytes4 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_string_storage)": {
              "label": "mapping(uint8 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "old": {
        "src": "contracts/avatars/wrapperFactory/old.sol:7",
        "version": {
          "withMetadata": "c724aeaef9dcc633ad6820dc136068be5382ec0bef8f6351a6a388ac473bd4b5",
          "withoutMetadata": "5b87167672f067e156dba87e3bc1b3945840490a7130ac6ded27cefaafe8ac02",
          "linkedWithoutMetadata": "5b87167672f067e156dba87e3bc1b3945840490a7130ac6ded27cefaafe8ac02"
        },
        "inherit": [
          "wrapperFactoryBase",
          "springFactory",
          "logicBase",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "old",
            "src": "contracts/avatars/wrapperFactory/old.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:19"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "202",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "203",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:21"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "204",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:22"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "205",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "wrapperFactory": {
        "src": "contracts/avatars/wrapperFactory/wrapperFactory.sol:6",
        "version": {
          "withMetadata": "1b5a4e3651286bdfc68e6e147b5b99711fc16751666c260c493de9ae39ef4f86",
          "withoutMetadata": "288e565556ce615ac9d417e3bb8cddc513271c6fdfc2cd991ab69a154b16b617",
          "linkedWithoutMetadata": "288e565556ce615ac9d417e3bb8cddc513271c6fdfc2cd991ab69a154b16b617"
        },
        "inherit": [
          "wrapperFactoryBase",
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "wrapperFactory",
            "src": "contracts/avatars/wrapperFactory/wrapperFactory.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:19"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:21"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:22"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "wrapperFactoryBase": {
        "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:14",
        "version": {
          "withMetadata": "23ab9a57a36c01dd05bff2e37a6bb5edf4543203249b7d9adb38ca7295280377",
          "withoutMetadata": "0bdb4b39f3413fe4038aca8de6abb236a8df37832c0628dd996fa6dff3a9854d",
          "linkedWithoutMetadata": "0bdb4b39f3413fe4038aca8de6abb236a8df37832c0628dd996fa6dff3a9854d"
        },
        "inherit": [
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "createSafeWrapperWithBudget(address,address,uint256,uint256,address,uint256,address[],uint8,string,string)",
          "delegateSetup(address)",
          "enableModule(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "EMPTY_DATA",
            "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:19"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:20"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:21"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:22"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "wrapperFactoryBase",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryBase.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "wrapperFactoryLogic": {
        "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:13",
        "version": {
          "withMetadata": "7e8358c367cc88dcfaa95ef65a1e1ae8ef7fed01ad740f214b63c074b08a88c5",
          "withoutMetadata": "dc1f9db8ea38173453a166d74809958d733bca8f6c6928b6a4cf3879c778928e",
          "linkedWithoutMetadata": "dc1f9db8ea38173453a166d74809958d733bca8f6c6928b6a4cf3879c778928e"
        },
        "inherit": [
          "springFactory"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createSafeWrapperWithBudget(address,uint256,uint256,address,uint256,address[],uint256)",
          "delegateSetup(address)",
          "enableModule(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "wrapperFactoryLogic",
            "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "EMPTY_DATA",
            "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ZERO_ADDRESS",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:18"
            },
            {
              "label": "EMPTY_DATA",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes_storage",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:19"
            },
            {
              "label": "wrapperLogic",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:20"
            },
            {
              "label": "safeFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:21"
            },
            {
              "label": "safeLogic",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "wrapperFactoryLogic",
              "src": "contracts/avatars/wrapperFactory/wrapperFactoryLogic.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "permissionRegHandler": {
        "src": "contracts/core/permissionRegHandler.sol:5",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "settingsModuleHandler": {
        "src": "contracts/core/settingsModuleHandler.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springAvatar": {
        "src": "contracts/core/springAvatar.sol:14",
        "inherit": [
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "setPermissionReg(address)",
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springModifier": {
        "src": "contracts/core/springModifier.sol:10",
        "inherit": [
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "setPermissionReg(address)",
          "enableModification(address,address)",
          "enableSettingsModule(address)",
          "disableSettingsModule(address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springModule": {
        "src": "contracts/core/springModule.sol:17",
        "inherit": [
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "setPermissionReg(address)",
          "enableAvatar(address)",
          "disableAvatar(address,address)",
          "isAvatarEnabled(address)",
          "getAvatarsPaginated(address,uint256)",
          "setTarget(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "dummyAvatar": {
        "src": "contracts/mockContracts/dummyAvatar.sol:7",
        "version": {
          "withMetadata": "faabfae7854473e11ed72e64aad3c64089ac2aba79b690285e5921b9cf8e0c89",
          "withoutMetadata": "5d989797c862827700799041ceec506e049948ad41dffa88616256eb9db922e2",
          "linkedWithoutMetadata": "5d989797c862827700799041ceec506e049948ad41dffa88616256eb9db922e2"
        },
        "inherit": [
          "Executor"
        ],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "setSuccess(bool)",
          "getSuccess()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "testSuccessful",
            "src": "contracts/mockContracts/dummyAvatar.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "testSuccessful",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "dummyAvatar",
              "src": "contracts/mockContracts/dummyAvatar.sol:8"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "dummyBridge": {
        "src": "contracts/mockContracts/dummyBridge.sol:7",
        "version": {
          "withMetadata": "6a03e7aa118cc613cb15f5ae5eb66f6f50132fd63d57ac9e23f4321b94d06739",
          "withoutMetadata": "aaec889a9e6a3220f4ad22d0025f8f4b59f8d4e4ac9b90c6b6dc835f937f748b",
          "linkedWithoutMetadata": "aaec889a9e6a3220f4ad22d0025f8f4b59f8d4e4ac9b90c6b6dc835f937f748b"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "requireToPassMessage(address payable,bytes,uint256)",
          "messageSender()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "dummyModule": {
        "src": "contracts/mockContracts/dummyModule.sol:14",
        "version": {
          "withMetadata": "5e9d920d986b187c0c3352632d8ede86ce45088bd25b6da071a1a9b1be674446",
          "withoutMetadata": "4a94de758be6169fc45937395961394774b308f0d336a3f734683a2f726ff708",
          "linkedWithoutMetadata": "4a94de758be6169fc45937395961394774b308f0d336a3f734683a2f726ff708"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exec(address,uint256,bytes,address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "budgetModifier": {
        "src": "contracts/modifiers/budgetModifier.sol:6",
        "version": {
          "withMetadata": "88b3574f18d38fbd88b68d300871bf08999ee617c9ca6b9c1de5e73f9e55195f",
          "withoutMetadata": "88b3574f18d38fbd88b68d300871bf08999ee617c9ca6b9c1de5e73f9e55195f",
          "linkedWithoutMetadata": "88b3574f18d38fbd88b68d300871bf08999ee617c9ca6b9c1de5e73f9e55195f"
        },
        "inherit": [
          "budgetModifierBase",
          "springModifier",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "budgetModifier",
            "src": "contracts/modifiers/budgetModifier.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            },
            {
              "label": "budgets",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_struct(budget)15643_storage)",
              "contract": "budgetModifierBase",
              "src": "contracts/modifiers/budgetModifierBase.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(budget)15643_storage)": {
              "label": "mapping(address => struct budgetModifierBase.budget)",
              "numberOfBytes": "32"
            },
            "t_struct(budget)15643_storage": {
              "label": "struct budgetModifierBase.budget",
              "members": [
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastReset",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "frozen",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "budgetModifierBase": {
        "src": "contracts/modifiers/budgetModifierBase.sol:9",
        "version": {
          "withMetadata": "b70ebd750fd1a5801bb01d420015339ad7f217a5b8e41261a6891a7e7edec781",
          "withoutMetadata": "927ee70732fdcdcfd5785bf513c94fa47c5095a6c0808cd34518eaa5b442a93a",
          "linkedWithoutMetadata": "927ee70732fdcdcfd5785bf513c94fa47c5095a6c0808cd34518eaa5b442a93a"
        },
        "inherit": [
          "springModifier",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "setBudget(address,uint256,uint256)",
          "getBudget(address)",
          "setFreeze(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            },
            {
              "label": "budgets",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_struct(budget)15643_storage)",
              "contract": "budgetModifierBase",
              "src": "contracts/modifiers/budgetModifierBase.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(budget)15643_storage)": {
              "label": "mapping(address => struct budgetModifierBase.budget)",
              "numberOfBytes": "32"
            },
            "t_struct(budget)15643_storage": {
              "label": "struct budgetModifierBase.budget",
              "members": [
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastReset",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "frozen",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "budgetModifierLogic": {
        "src": "contracts/modifiers/budgetModifierLogic.sol:7",
        "version": {
          "withMetadata": "a822f4c0303c7afdd367af1b7da25c7ab28c335c58e2a0bcb6d862c7797bf43f",
          "withoutMetadata": "4308920101379d17d4481c06f5de3b4532fe04ef9c6f3ddb786bf5b4d8c24a08",
          "linkedWithoutMetadata": "4308920101379d17d4481c06f5de3b4532fe04ef9c6f3ddb786bf5b4d8c24a08"
        },
        "inherit": [
          "logicBase",
          "budgetModifierBase",
          "springModifier",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "budgetModifierLogic",
            "src": "contracts/modifiers/budgetModifierLogic.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "203",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "206",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "moduleToAvatar",
              "offset": 0,
              "slot": "207",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModifier",
              "src": "contracts/core/springModifier.sol:15"
            },
            {
              "label": "budgets",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_struct(budget)15643_storage)",
              "contract": "budgetModifierBase",
              "src": "contracts/modifiers/budgetModifierBase.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(budget)15643_storage)": {
              "label": "mapping(address => struct budgetModifierBase.budget)",
              "numberOfBytes": "32"
            },
            "t_struct(budget)15643_storage": {
              "label": "struct budgetModifierBase.budget",
              "members": [
                {
                  "label": "totalAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountUsed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastReset",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "interval",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "frozen",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20VotesUpgradeable": {
        "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:29",
        "inherit": [
          "ERC20PermitUpgradeable",
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "IVotesUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeCastUpgradeable",
          "MathUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "checkpoints(address,uint32)",
          "numCheckpoints(address)",
          "delegates(address)",
          "getVotes(address)",
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_address,t_struct(Counter)8000_storage)",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "154",
              "type": "t_bytes32",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
              "renamedFrom": "_PERMIT_TYPEHASH"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "155",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:46"
            },
            {
              "label": "_checkpoints",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)16150_storage)dyn_storage)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:47"
            },
            {
              "label": "_totalSupplyCheckpoints",
              "offset": 0,
              "slot": "206",
              "type": "t_array(t_struct(Checkpoint)16150_storage)dyn_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:48"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:323"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Checkpoint)16150_storage)dyn_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Checkpoint)16150_storage)dyn_storage)": {
              "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8000_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)16150_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint224",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8000_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint224": {
              "label": "uint224",
              "numberOfBytes": "28"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovToken": {
        "src": "contracts/modules/GovernorV2/GovToken.sol:15",
        "version": {
          "withMetadata": "3c45b5c74d3e0e6324b6838fb3d2cb4214b6624084c0e3569ca0a1dc98578374",
          "withoutMetadata": "da9e7fc022431939edd904b25bb898f21c737f2989a8f385751ebc0c5c442f1a",
          "linkedWithoutMetadata": "da9e7fc022431939edd904b25bb898f21c737f2989a8f385751ebc0c5c442f1a"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "OwnableUpgradeable",
          "ERC20VotesUpgradeable",
          "ERC20PermitUpgradeable",
          "EIP712Upgradeable",
          "IERC20PermitUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "IVotesUpgradeable",
          "springAvatar",
          "permissionRegHandler",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string)",
          "transferFrom(address,address,uint256)",
          "burn(address,uint256)",
          "mint(address,uint256)",
          "lockVotes(address,uint256,uint256)",
          "freeVotes(address,uint256,uint256)",
          "getLockedVotes(address,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "permissionRegistry",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "54",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "56",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "57",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "103",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_address,t_struct(Counter)8000_storage)",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
            },
            {
              "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
              "offset": 0,
              "slot": "155",
              "type": "t_bytes32",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
              "renamedFrom": "_PERMIT_TYPEHASH"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "156",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC20PermitUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:46"
            },
            {
              "label": "_checkpoints",
              "offset": 0,
              "slot": "206",
              "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)16150_storage)dyn_storage)",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:47"
            },
            {
              "label": "_totalSupplyCheckpoints",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_struct(Checkpoint)16150_storage)dyn_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:48"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "208",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC20VotesUpgradeable",
              "src": "contracts/modules/GovernorV2/ERC20VotesUpgradeable.sol:323"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "255",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "355",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "lockedVotes",
              "offset": 0,
              "slot": "405",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GovToken",
              "src": "contracts/modules/GovernorV2/GovToken.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Checkpoint)16150_storage)dyn_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Checkpoint)16150_storage)dyn_storage)": {
              "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)8000_storage)": {
              "label": "mapping(address => struct CountersUpgradeable.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)16150_storage": {
              "label": "struct ERC20VotesUpgradeable.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint224",
                  "offset": 4,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Counter)8000_storage": {
              "label": "struct CountersUpgradeable.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint224": {
              "label": "uint224",
              "numberOfBytes": "28"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorCoreV2": {
        "src": "contracts/modules/GovernorV2/GovernorCoreV2.sol:15",
        "version": {
          "withMetadata": "2bb14e96db3a3ed21bedc29bae81051105a12aeae01f4258fb2ad3b5a56ec483",
          "withoutMetadata": "a29630ef74df2d4811a064ba10e5f03b9a97009b4416feefdac7110dd15ef847",
          "linkedWithoutMetadata": "a29630ef74df2d4811a064ba10e5f03b9a97009b4416feefdac7110dd15ef847"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "GovernorTimelockControlUpgradeable",
          "GovernorVotesQuorumFractionUpgradeable",
          "GovernorVotes",
          "GovernorCountingSimpleUpgradeable",
          "GovernorSettingsUpgradeable",
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorTimelockUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address,address,uint256,uint256)",
          "votingDelay()",
          "votingPeriod()",
          "quorum(uint256)",
          "state(uint256)",
          "propose(address[],uint256[],bytes[],string,uint256)",
          "proposalThreshold()",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorTimelockUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "253",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "255",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "257",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "_votingDelay",
              "offset": 0,
              "slot": "303",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:18"
            },
            {
              "label": "_votingPeriod",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:19"
            },
            {
              "label": "_proposalThreshold",
              "offset": 0,
              "slot": "305",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "306",
              "type": "t_array(t_uint256)47_storage",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:160"
            },
            {
              "label": "minStake",
              "offset": 0,
              "slot": "353",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:18"
            },
            {
              "label": "maxStake",
              "offset": 0,
              "slot": "354",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:19"
            },
            {
              "label": "_proposalVotes",
              "offset": 0,
              "slot": "355",
              "type": "t_mapping(t_uint256,t_struct(ProposalVote)17440_storage)",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:59"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "356",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:241"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "405",
              "type": "t_contract(GovToken)17087",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "406",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:78"
            },
            {
              "label": "_quorumNumerator",
              "offset": 0,
              "slot": "456",
              "type": "t_uint256",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "457",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:124"
            },
            {
              "label": "_timelock",
              "offset": 0,
              "slot": "506",
              "type": "t_contract(TimelockControllerUpgradeable)4870",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:32"
            },
            {
              "label": "_timelockIds",
              "offset": 0,
              "slot": "507",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "508",
              "type": "t_array(t_uint256)48_storage",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:243"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "556",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "606",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GovToken)17087": {
              "label": "contract GovToken",
              "numberOfBytes": "20"
            },
            "t_contract(TimelockControllerUpgradeable)4870": {
              "label": "contract TimelockControllerUpgradeable",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalVote)17440_storage)": {
              "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18473_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(ProposalVote)17440_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
              "members": [
                {
                  "label": "againstVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "forVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "abstainVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "proposerStake",
                  "type": "t_struct(Stake)17423_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "objectorStake",
                  "type": "t_struct(Stake)17423_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "hasVoted",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(Stake)17423_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.Stake",
              "members": [
                {
                  "label": "staker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorCountingSimpleUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:14",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "COUNTING_MODE()",
          "hasVoted(uint256,address)",
          "proposalVotes(uint256)",
          "noObjections(uint256)",
          "getProposer(uint256)",
          "getObjector(uint256)",
          "proposalThreshold()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "minStake",
              "offset": 0,
              "slot": "253",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:18"
            },
            {
              "label": "maxStake",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:19"
            },
            {
              "label": "_proposalVotes",
              "offset": 0,
              "slot": "255",
              "type": "t_mapping(t_uint256,t_struct(ProposalVote)17440_storage)",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:59"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorCountingSimpleUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorCountingSimpleUpgradeable.sol:241"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalVote)17440_storage)": {
              "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18473_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(ProposalVote)17440_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
              "members": [
                {
                  "label": "againstVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "forVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "abstainVotes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "proposerStake",
                  "type": "t_struct(Stake)17423_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "objectorStake",
                  "type": "t_struct(Stake)17423_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "hasVoted",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(Stake)17423_storage": {
              "label": "struct GovernorCountingSimpleUpgradeable.Stake",
              "members": [
                {
                  "label": "staker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorSettingsUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:14",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "votingDelay()",
          "votingPeriod()",
          "proposalThreshold()",
          "setVotingDelay(uint256)",
          "setVotingPeriod(uint256)",
          "setProposalThreshold(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "_votingDelay",
              "offset": 0,
              "slot": "253",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:18"
            },
            {
              "label": "_votingPeriod",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:19"
            },
            {
              "label": "_proposalThreshold",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:20"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "256",
              "type": "t_array(t_uint256)47_storage",
              "contract": "GovernorSettingsUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorSettingsUpgradeable.sol:160"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18473_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorTimelockControlUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:27",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorTimelockUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "state(uint256)",
          "timelock()",
          "proposalEta(uint256)",
          "queue(address[],uint256[],bytes[],bytes32)",
          "updateTimelock(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "203",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorTimelockUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "253",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "255",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "257",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "_timelock",
              "offset": 0,
              "slot": "303",
              "type": "t_contract(TimelockControllerUpgradeable)4870",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:32"
            },
            {
              "label": "_timelockIds",
              "offset": 0,
              "slot": "304",
              "type": "t_mapping(t_uint256,t_bytes32)",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)48_storage",
              "contract": "GovernorTimelockControlUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorTimelockControlUpgradeable.sol:243"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(TimelockControllerUpgradeable)4870": {
              "label": "contract TimelockControllerUpgradeable",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes32)": {
              "label": "mapping(uint256 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18473_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:32",
        "inherit": [
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "DoubleEndedQueueUpgradeable",
          "SafeCastUpgradeable",
          "TimersUpgradeable",
          "MathUpgradeable",
          "AddressUpgradeable",
          "ECDSAUpgradeable"
        ],
        "methods": [
          "()",
          "supportsInterface(bytes4)",
          "name()",
          "version()",
          "hashProposal(address[],uint256[],bytes[],bytes32)",
          "state(uint256)",
          "proposalSnapshot(uint256)",
          "proposalDeadline(uint256)",
          "proposalThreshold()",
          "noObjections(uint256)",
          "object(uint256,uint256,string,bytes)",
          "propose(address[],uint256[],bytes[],string,uint256)",
          "execute(address[],uint256[],bytes[],bytes32)",
          "retrieveStake(uint256)",
          "getVotes(address,uint256)",
          "getVotesWithParams(address,uint256,bytes)",
          "castVote(uint256,uint8,uint256)",
          "castVoteWithReason(uint256,uint8,uint256,string)",
          "castVoteWithReasonAndParams(uint256,uint8,uint256,string,bytes)",
          "castVoteBySig(uint256,uint8,uint256,uint8,bytes32,bytes32)",
          "castVoteWithReasonAndParamsBySig(uint256,uint8,uint256,string,bytes,uint8,bytes32,bytes32)",
          "getProposer(uint256)",
          "getObjector(uint256)",
          "relay(address,uint256,bytes)",
          "onERC721Received(address,address,uint256,bytes)",
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18473_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorVotes": {
        "src": "contracts/modules/GovernorV2/GovernorVotes.sol:17",
        "inherit": [
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "253",
              "type": "t_contract(GovToken)17087",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "254",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:78"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GovToken)17087": {
              "label": "contract GovToken",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18473_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernorVotesQuorumFractionUpgradeable": {
        "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:17",
        "inherit": [
          "GovernorVotes",
          "GovernorUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "IGovernorUpgradeable",
          "EIP712Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "quorumNumerator()",
          "quorumDenominator()",
          "quorum(uint256)",
          "updateQuorumNumerator(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_HASHED_NAME",
              "offset": 0,
              "slot": "101",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
            },
            {
              "label": "_HASHED_VERSION",
              "offset": 0,
              "slot": "102",
              "type": "t_bytes32",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)50_storage",
              "contract": "EIP712Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "203",
              "type": "t_string_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:59"
            },
            {
              "label": "_proposals",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:61"
            },
            {
              "label": "_governanceCall",
              "offset": 0,
              "slot": "205",
              "type": "t_struct(Bytes32Deque)11555_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "207",
              "type": "t_array(t_uint256)46_storage",
              "contract": "GovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorUpgradeable.sol:874"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "253",
              "type": "t_contract(GovToken)17087",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "254",
              "type": "t_array(t_uint256)50_storage",
              "contract": "GovernorVotes",
              "src": "contracts/modules/GovernorV2/GovernorVotes.sol:78"
            },
            {
              "label": "_quorumNumerator",
              "offset": 0,
              "slot": "304",
              "type": "t_uint256",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:21"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "305",
              "type": "t_array(t_uint256)49_storage",
              "contract": "GovernorVotesQuorumFractionUpgradeable",
              "src": "contracts/modules/GovernorV2/GovernorVotesQuorumFractionUpgradeable.sol:124"
            }
          ],
          "types": {
            "t_array(t_uint256)46_storage": {
              "label": "uint256[46]",
              "numberOfBytes": "1472"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GovToken)17087": {
              "label": "contract GovToken",
              "numberOfBytes": "20"
            },
            "t_int128": {
              "label": "int128",
              "numberOfBytes": "16"
            },
            "t_mapping(t_int128,t_bytes32)": {
              "label": "mapping(int128 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ProposalCore)18473_storage)": {
              "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(BlockNumber)8465_storage": {
              "label": "struct TimersUpgradeable.BlockNumber",
              "members": [
                {
                  "label": "_deadline",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Bytes32Deque)11555_storage": {
              "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
              "members": [
                {
                  "label": "_begin",
                  "type": "t_int128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_end",
                  "type": "t_int128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_data",
                  "type": "t_mapping(t_int128,t_bytes32)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ProposalCore)18473_storage": {
              "label": "struct GovernorUpgradeable.ProposalCore",
              "members": [
                {
                  "label": "voteStart",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteEnd",
                  "type": "t_struct(BlockNumber)8465_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "canceled",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGovernorTimelockUpgradeable": {
        "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:14",
        "inherit": [
          "IGovernorUpgradeable",
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "timelock()",
          "proposalEta(uint256)",
          "queue(address[],uint256[],bytes[],bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorTimelockUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorTimelockUpgradeable.sol:44"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGovernorUpgradeable": {
        "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:14",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "version()",
          "COUNTING_MODE()",
          "hashProposal(address[],uint256[],bytes[],bytes32)",
          "state(uint256)",
          "proposalSnapshot(uint256)",
          "proposalDeadline(uint256)",
          "votingDelay()",
          "votingPeriod()",
          "quorum(uint256)",
          "getVotes(address,uint256)",
          "getVotesWithParams(address,uint256,bytes)",
          "hasVoted(uint256,address)",
          "propose(address[],uint256[],bytes[],string,uint256)",
          "execute(address[],uint256[],bytes[],bytes32)",
          "castVote(uint256,uint8,uint256)",
          "castVoteWithReason(uint256,uint8,uint256,string)",
          "castVoteWithReasonAndParams(uint256,uint8,uint256,string,bytes)",
          "castVoteBySig(uint256,uint8,uint256,uint8,bytes32,bytes32)",
          "castVoteWithReasonAndParamsBySig(uint256,uint8,uint256,string,bytes,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "IGovernorUpgradeable",
              "src": "contracts/modules/GovernorV2/IGovernorUpgradeable.sol:322"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IVotes": {
        "src": "contracts/modules/GovernorV2/IVotes.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPastVotes(address,uint256)",
          "getPastTotalSupply(uint256)",
          "useVotes(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TimeLockModuleV2": {
        "src": "contracts/modules/GovernorV2/TimeLockModuleV2.sol:6",
        "version": {
          "withMetadata": "0900f001d1b4258e4f9f09db2853aaf4b285473751e76fc13f97f34704f1f32e",
          "withoutMetadata": "78f7ee762c1189049a4b8afc7c11072f258a1cdb9a78831f3134bcc0688006c9",
          "linkedWithoutMetadata": "78f7ee762c1189049a4b8afc7c11072f258a1cdb9a78831f3134bcc0688006c9"
        },
        "inherit": [
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "TimelockControllerUpgradeable",
          "IERC1155ReceiverUpgradeable",
          "IERC721ReceiverUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint256,address[],address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            },
            {
              "label": "_timestamps",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:34"
            },
            {
              "label": "_minDelay",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:35"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint256)48_storage",
              "contract": "TimelockControllerUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:432"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "251",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "252",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "253",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "254",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)48_storage": {
              "label": "uint256[48]",
              "numberOfBytes": "1536"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3425_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3425_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "bridgeProxyLogic": {
        "src": "contracts/modules/bridgeModules/bridgeProxyLogic.sol:18",
        "version": {
          "withMetadata": "2eb66b696914f3e7ba49a7143edb281d995bd60c9243fd4ca1b3c9057a9aa8d3",
          "withoutMetadata": "a05fde3485225c346f01cc60117bf7c82f4aaec47c33170e8d74535950d29e6c",
          "linkedWithoutMetadata": "a05fde3485225c346f01cc60117bf7c82f4aaec47c33170e8d74535950d29e6c"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "EternalStorage",
          "settingsModuleHandler",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [
          "()",
          "initialize(bytes)",
          "setPermissionReg(address)",
          "setBridgeContract(address)",
          "setMediatorContractOnOtherSide(address)",
          "setRequestGasLimit(uint256)",
          "bridgeContract()",
          "mediatorContractOnOtherSide()",
          "requestGasLimit()",
          "executeTransactionFromAMB(address,uint256,bytes,address,uint8)",
          "executeGenericTransactionFromAMB(address,bytes)",
          "execTransactionFromModule(address,uint256,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "settingsModules",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "settingsModuleHandler",
              "src": "contracts/core/settingsModuleHandler.sol:10"
            },
            {
              "label": "uintStorage",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:9"
            },
            {
              "label": "stringStorage",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_bytes32,t_string_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:10"
            },
            {
              "label": "addressStorage",
              "offset": 0,
              "slot": "109",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:11"
            },
            {
              "label": "bytesStorage",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_bytes32,t_bytes_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:12"
            },
            {
              "label": "boolStorage",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:13"
            },
            {
              "label": "intStorage",
              "offset": 0,
              "slot": "112",
              "type": "t_mapping(t_bytes32,t_int256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:14"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "113",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "163",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_int256)": {
              "label": "mapping(bytes32 => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IAMB": {
        "src": "contracts/modules/bridgeModules/interfaces/IAMB.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "messageSender()",
          "maxGasPerTx()",
          "transactionHash()",
          "messageId()",
          "messageSourceChainId()",
          "messageCallStatus(bytes32)",
          "failedMessageDataHash(bytes32)",
          "failedMessageReceiver(bytes32)",
          "failedMessageSender(bytes32)",
          "requireToPassMessage(address,bytes,uint256)",
          "requireToConfirmMessage(address,bytes,uint256)",
          "requireToGetInformation(bytes32,bytes)",
          "sourceChainId()",
          "destinationChainId()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EternalStorage": {
        "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:8",
        "version": {
          "withMetadata": "4e416fa7f5f575893334c40b6621898f58713aeaa3196919a6319540e9b1f939",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "uintStorage",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:9"
            },
            {
              "label": "stringStorage",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_string_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:10"
            },
            {
              "label": "addressStorage",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:11"
            },
            {
              "label": "bytesStorage",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_bytes32,t_bytes_storage)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:12"
            },
            {
              "label": "boolStorage",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:13"
            },
            {
              "label": "intStorage",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_int256)",
              "contract": "EternalStorage",
              "src": "contracts/modules/bridgeModules/utils/EternalStorage.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_int256)": {
              "label": "mapping(bytes32 => int256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "safeWrapper": {
        "src": "contracts/modules/safeWrapper/safeWrapper.sol:6",
        "version": {
          "withMetadata": "3d642c101a791e92174f767fbb053a84279a13b4936276d026e8fe58c230a5c0",
          "withoutMetadata": "3d642c101a791e92174f767fbb053a84279a13b4936276d026e8fe58c230a5c0",
          "linkedWithoutMetadata": "3d642c101a791e92174f767fbb053a84279a13b4936276d026e8fe58c230a5c0"
        },
        "inherit": [
          "safeWrapperBase",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "(address,address,string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "safeWrapper",
            "src": "contracts/modules/safeWrapper/safeWrapper.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "safe",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:14"
            },
            {
              "label": "sector",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "safeWrapperBase": {
        "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:9",
        "version": {
          "withMetadata": "375b916cc7d6aa2f92a3eaa1333b022ac9de68bc491e041c16dc8bfe50510c8b",
          "withoutMetadata": "b6a51f32d7983bb46cc12db4946292a2ce39cd4755931e3f176c12450d4e2d69",
          "linkedWithoutMetadata": "b6a51f32d7983bb46cc12db4946292a2ce39cd4755931e3f176c12450d4e2d69"
        },
        "inherit": [
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "initialize(bytes)",
          "setPermissionReg(address)",
          "sendEth(address,uint256,address)",
          "removeOwner(address,uint256)",
          "addOwner(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "101",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "104",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "safe",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "107",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:14"
            },
            {
              "label": "sector",
              "offset": 0,
              "slot": "108",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "safeWrapperLogic": {
        "src": "contracts/modules/safeWrapper/safeWrapperLogic.sol:8",
        "version": {
          "withMetadata": "cfc5090ec09e33f372e36ab034522aa1961365c3410058010d070fff0816d07e",
          "withoutMetadata": "ad5e4be889d37448826b7b4e4e26610171accf71b6f0c99058314b895e368922",
          "linkedWithoutMetadata": "ad5e4be889d37448826b7b4e4e26610171accf71b6f0c99058314b895e368922"
        },
        "inherit": [
          "logicBase",
          "safeWrapperBase",
          "springAvatar",
          "springModule",
          "permissionRegHandler",
          "Guardable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable",
          "Executor",
          "Enum",
          "IAvatar"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "safeWrapperLogic",
            "src": "contracts/modules/safeWrapper/safeWrapperLogic.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "guard",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "Guardable",
              "src": "@gnosis.pm/zodiac/contracts/guard/Guardable.sol:10"
            },
            {
              "label": "permissionRegistry",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "permissionRegHandler",
              "src": "contracts/core/permissionRegHandler.sol:6"
            },
            {
              "label": "avatars",
              "offset": 0,
              "slot": "203",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:33"
            },
            {
              "label": "avatarToTargets",
              "offset": 0,
              "slot": "204",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springModule",
              "src": "contracts/core/springModule.sol:35"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "205",
              "type": "t_mapping(t_address,t_address)",
              "contract": "springAvatar",
              "src": "contracts/core/springAvatar.sol:26"
            },
            {
              "label": "safe",
              "offset": 0,
              "slot": "206",
              "type": "t_address",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:12"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "207",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:14"
            },
            {
              "label": "sector",
              "offset": 0,
              "slot": "208",
              "type": "t_string_storage",
              "contract": "safeWrapperBase",
              "src": "contracts/modules/safeWrapper/safeWrapperBase.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IGnosisSafeProxy": {
        "src": "contracts/proxyContracts/factory/IGnosisSafeProxy.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execTransactionFromModule(address,uint256,bytes,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IProxyCallback": {
        "src": "contracts/proxyContracts/factory/IProxyCallback.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "springFactory": {
        "src": "contracts/proxyContracts/factory/springFactory.sol:9",
        "version": {
          "withMetadata": "b2aee643f8213d578bee9011e0b9063bfb2c01092b716b8abf7b45ed05be3de5",
          "withoutMetadata": "267efa799fe2876c80fc8949ec20d845eb1e24d3d711552a734c102ce166f5df",
          "linkedWithoutMetadata": "267efa799fe2876c80fc8949ec20d845eb1e24d3d711552a734c102ce166f5df"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "proxyRuntimeCode()",
          "proxyCreationCode()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "logicBase": {
        "src": "contracts/proxyContracts/logic/logicBase.sol:8",
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "springProxy": {
        "src": "contracts/proxyContracts/proxy/springProxy.sol:9",
        "version": {
          "withMetadata": "610b3e6bf5909dda45a05c305e9a5003ec1098af6b60a6a02ed825cd931bc55f",
          "withoutMetadata": "610b3e6bf5909dda45a05c305e9a5003ec1098af6b60a6a02ed825cd931bc55f",
          "linkedWithoutMetadata": "610b3e6bf5909dda45a05c305e9a5003ec1098af6b60a6a02ed825cd931bc55f"
        },
        "inherit": [
          "Proxy"
        ],
        "libraries": [
          "console",
          "Address",
          "StorageSlot"
        ],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "springProxy",
            "src": "contracts/proxyContracts/proxy/springProxy.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "c100f561d0dd92dba3736f656c282e8f21b151345f8f7bb341c5b2afdc4dc3f2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}